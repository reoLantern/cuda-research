
Fatbin elf code:
================
arch = sm_90a
code version = [1,7]
host = linux
compile_size = 64bit

Fatbin elf code:
================
arch = sm_90a
code version = [1,7]
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_90a
code version = [8,4]
host = linux
compile_size = 64bit
compressed
ptxasOptions = 

//
//
//
//
//
//

.version 8.4
.target sm_90a
.address_size 64

//
//
//

.visible .entry _Z6kernel14CUtensorMap_stii(
.param .align 64 .b8 _Z6kernel14CUtensorMap_stii_param_0[128],  // tensor_map
.param .u32 _Z6kernel14CUtensorMap_stii_param_1,
.param .u32 _Z6kernel14CUtensorMap_stii_param_2
)
{
.reg .pred %p<2>;
.reg .b32 %r<8>;
.reg .b64 %rd<4>;
//
.shared .align 128 .b8 _ZZ6kernel14CUtensorMap_stiiE11smem_buffer[16384];
//
.shared .align 8 .b8 _ZZ6kernel14CUtensorMap_stiiE3bar[8];

mov.b64 %rd1, _Z6kernel14CUtensorMap_stii_param_0;  // %rd1 = tensor_map
ld.param.u32 %r1, [_Z6kernel14CUtensorMap_stii_param_1];
ld.param.u32 %r2, [_Z6kernel14CUtensorMap_stii_param_2];
mov.u32 %r3, %tid.x;
setp.ne.s32 %p1, %r3, 0;
@%p1 bra $L__BB0_2;

cvta.param.u64 %rd2, %rd1;// %rd2 = tensor_map
mov.u32 %r4, _ZZ6kernel14CUtensorMap_stiiE11smem_buffer;
mov.u32 %r7, _ZZ6kernel14CUtensorMap_stiiE3bar;
//
cp.async.bulk.tensor.2d.shared::cluster.global.tile.mbarrier::complete_tx::bytes [%r4], [%rd2, {%r1, %r2}], [%r7];

//

$L__BB0_2:
ret;

}


