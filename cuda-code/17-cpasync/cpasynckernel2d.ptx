
Fatbin elf code:
================
arch = sm_90a
code version = [1,7]
host = linux
compile_size = 64bit

Fatbin elf code:
================
arch = sm_90a
code version = [1,7]
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_90a
code version = [8,4]
host = linux
compile_size = 64bit
compressed
ptxasOptions = 

//
//
//
//
//
//

.version 8.4
.target sm_90a
.address_size 64

//
//
//

.visible .entry _Z6kernel14CUtensorMap_stii(
.param .align 64 .b8 _Z6kernel14CUtensorMap_stii_param_0[128],
.param .u32 _Z6kernel14CUtensorMap_stii_param_1,
.param .u32 _Z6kernel14CUtensorMap_stii_param_2
)
{
.reg .pred %p<9>;
.reg .b32 %r<35>;
.reg .b64 %rd<21>;
//
.shared .align 128 .b8 _ZZ6kernel14CUtensorMap_stiiE11smem_buffer[16384];
//
.shared .align 8 .b8 _ZZ6kernel14CUtensorMap_stiiE3bar[8];

mov.b64 %rd7, _Z6kernel14CUtensorMap_stii_param_0;
ld.param.u32 %r5, [_Z6kernel14CUtensorMap_stii_param_1];
ld.param.u32 %r6, [_Z6kernel14CUtensorMap_stii_param_2];
mov.u32 %r1, %tid.x;
setp.ne.s32 %p1, %r1, 0;
@%p1 bra $L__BB0_2;

mov.u32 %r8, %ntid.x;
mov.u32 %r7, _ZZ6kernel14CUtensorMap_stiiE3bar;
//
mbarrier.init.shared.b64 [%r7], %r8;
//
//
fence.proxy.async.shared::cta; 

//

$L__BB0_2:
setp.eq.s32 %p2, %r1, 0;
bar.sync 0;
@%p2 bra $L__BB0_4;

mov.u32 %r9, _ZZ6kernel14CUtensorMap_stiiE3bar;
mov.u32 %r10, 1;
//
mbarrier.arrive.shared::cta.b64 %rd20, [%r9], %r10; //
//
bra.uni $L__BB0_5;

$L__BB0_4:
cvta.param.u64 %rd9, %rd7;
mov.u32 %r11, _ZZ6kernel14CUtensorMap_stiiE11smem_buffer;
mov.u32 %r14, _ZZ6kernel14CUtensorMap_stiiE3bar;
//
cp.async.bulk.tensor.2d.shared::cluster.global.tile.mbarrier::complete_tx::bytes [%r11], [%rd9, {%r5, %r6}], [%r14];

//
mov.u32 %r16, 16384;
//
mbarrier.arrive.expect_tx.release.cta.shared.b64 %rd20, [%r14], %r16; //
//

$L__BB0_5:
//
mov.u64 %rd11, %globaltimer;
//
mov.u32 %r18, _ZZ6kernel14CUtensorMap_stiiE3bar;
//
{
.reg .pred p;
mbarrier.try_wait.shared.b64 p, [%r18], %rd20;
selp.b32 %r17, 1, 0, p;
}
//
setp.ne.s32 %p3, %r17, 0;
@%p3 bra $L__BB0_14;

mov.u32 %r34, 0;

$L__BB0_7:
setp.lt.s32 %p4, %r34, 16;
@%p4 bra $L__BB0_12;
bra.uni $L__BB0_8;

$L__BB0_12:
add.s32 %r34, %r34, 1;
bra.uni $L__BB0_13;

$L__BB0_8:
//
mov.u64 %rd13, %globaltimer;
//
sub.s64 %rd6, %rd13, %rd11;
setp.lt.s64 %p5, %rd6, 4000000;
@%p5 bra $L__BB0_10;
bra.uni $L__BB0_9;

$L__BB0_10:
setp.lt.s64 %p6, %rd6, 40000;
@%p6 bra $L__BB0_13;

shr.s64 %rd14, %rd6, 63;
shr.u64 %rd15, %rd14, 62;
add.s64 %rd16, %rd6, %rd15;
shr.u64 %rd17, %rd16, 2;
cvt.u32.u64 %r21, %rd17;
//
nanosleep.u32 %r21;
//
bra.uni $L__BB0_13;

$L__BB0_9:
mov.u32 %r20, 1000000;
//
nanosleep.u32 %r20;
//

$L__BB0_13:
//
{
.reg .pred p;
mbarrier.try_wait.shared.b64 p, [%r18], %rd20;
selp.b32 %r22, 1, 0, p;
}
//
setp.eq.s32 %p7, %r22, 0;
@%p7 bra $L__BB0_7;

$L__BB0_14:
shl.b32 %r24, %r1, 2;
mov.u32 %r25, _ZZ6kernel14CUtensorMap_stiiE11smem_buffer;
add.s32 %r26, %r25, %r24;
ld.shared.u32 %r27, [%r26];
add.s32 %r28, %r27, %r1;
st.shared.u32 [%r26], %r28;
//
fence.proxy.async.shared::cta; 

//
bar.sync 0;
@%p1 bra $L__BB0_16;

cvta.param.u64 %rd19, %rd7;
//
cp.async.bulk.tensor.2d.global.shared::cta.tile.bulk_group [%rd19, {%r5, %r6}], [%r25];

//
//
cp.async.bulk.commit_group;

//
//
cp.async.bulk.wait_group.read 0; 

//
//
mbarrier.inval.shared.b64 [%r18];
//

$L__BB0_16:
ret;

}


