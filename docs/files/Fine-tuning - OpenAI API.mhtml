From: <Saved by Blink>
Snapshot-Content-Location: https://platform.openai.com/docs/guides/fine-tuning
Subject: Fine-tuning - OpenAI API
Date: Tue, 18 Jul 2023 01:14:48 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----"


------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/html
Content-ID: <frame-A774B47EBBB54A7EA459F3879092297C@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://platform.openai.com/docs/guides/fine-tuning

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-91170676-ed2d-4663-a127-d427902175eb@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-b1802870-278e-4708=
-9366-8792eed071b6@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-510f354b-06ca-4622-a86a-ef7fdd7a0cc0@mhtml.blink" /><link=
 rel=3D"icon" type=3D"image/svg+xml" href=3D"https://openaiapi-site.azureed=
ge.net/public-assets/d/17bead46ad/favicon.svg"><link rel=3D"icon" type=3D"i=
mage/png" href=3D"https://openaiapi-site.azureedge.net/public-assets/d/17be=
ad46ad/favicon.png"><link rel=3D"mask-icon" href=3D"https://openaiapi-site.=
azureedge.net/public-assets/d/17bead46ad/mask-icon.svg" color=3D"#000000"><=
link rel=3D"preconnect" href=3D"https://cdn.openai.com/"><link rel=3D"preco=
nnect" href=3D"https://fonts.googleapis.com/"><link rel=3D"preconnect" href=
=3D"https://fonts.gstatic.com/" crossorigin=3D""><link rel=3D"preconnect" h=
ref=3D"https://owz3qoiija-dsn.algolia.net/" crossorigin=3D""><link href=3D"=
https://fonts.googleapis.com/css2?family=3DRoboto+Mono:wght@400;700&amp;dis=
play=3Dswap" rel=3D"stylesheet"><meta name=3D"viewport" content=3D"width=3D=
device-width,initial-scale=3D1"><meta name=3D"theme-color" content=3D"#0000=
00"><meta name=3D"description" content=3D"Explore resources, tutorials, API=
 docs, and dynamic examples to get the most out of OpenAI's developer platf=
orm."><meta property=3D"og:title" content=3D"OpenAI Platform"><meta propert=
y=3D"og:image" content=3D"https://platform.openai.com/curl.png"><meta prope=
rty=3D"og:description" content=3D"Explore developer resources, tutorials, A=
PI docs, and dynamic examples to get the most out of OpenAI's platform."><m=
eta property=3D"og:url" content=3D"https://platform.openai.com"><link rel=
=3D"manifest" href=3D"https://openaiapi-site.azureedge.net/public-assets/d/=
17bead46ad/manifest.json"><title>Fine-tuning - OpenAI API</title><link href=
=3D"https://openaiapi-site.azureedge.net/public-assets/d/17bead46ad/static/=
css/main.f308da0b.css" rel=3D"stylesheet"><link rel=3D"stylesheet" type=3D"=
text/css" href=3D"https://openaiapi-site.azureedge.net/public-assets/d/17be=
ad46ad/static/css/695.c403ef96.chunk.css"></head><body><div id=3D"root"><di=
v class=3D"route-container"><div class=3D"page-wrapper app-wrapper"><div cl=
ass=3D"app-header"><div class=3D"left-menu"><div class=3D"branding"><a clas=
s=3D"logo-link" href=3D"https://platform.openai.com/overview"><div style=3D=
"width: 24px; height: 24px;"><svg width=3D"24px" height=3D"24px" viewBox=3D=
"140 140 520 520"><path d=3D"m617.24 354a126.36 126.36 0 0 0 -10.86-103.79 =
127.8 127.8 0 0 0 -137.65-61.32 126.36 126.36 0 0 0 -95.31-42.49 127.81 127=
.81 0 0 0 -121.92 88.49 126.4 126.4 0 0 0 -84.5 61.3 127.82 127.82 0 0 0 15=
.72 149.86 126.36 126.36 0 0 0 10.86 103.79 127.81 127.81 0 0 0 137.65 61.3=
2 126.36 126.36 0 0 0 95.31 42.49 127.81 127.81 0 0 0 121.96-88.54 126.4 12=
6.4 0 0 0 84.5-61.3 127.82 127.82 0 0 0 -15.76-149.81zm-190.66 266.49a94.79=
 94.79 0 0 1 -60.85-22c.77-.42 2.12-1.16 3-1.7l101-58.34a16.42 16.42 0 0 0 =
8.3-14.37v-142.39l42.69 24.65a1.52 1.52 0 0 1 .83 1.17v117.92a95.18 95.18 0=
 0 1 -94.97 95.06zm-204.24-87.23a94.74 94.74 0 0 1 -11.34-63.7c.75.45 2.06 =
1.25 3 1.79l101 58.34a16.44 16.44 0 0 0 16.59 0l123.31-71.2v49.3a1.53 1.53 =
0 0 1 -.61 1.31l-102.1 58.95a95.16 95.16 0 0 1 -129.85-34.79zm-26.57-220.49=
a94.71 94.71 0 0 1 49.48-41.68c0 .87-.05 2.41-.05 3.48v116.68a16.41 16.41 0=
 0 0 8.29 14.36l123.31 71.19-42.69 24.65a1.53 1.53 0 0 1 -1.44.13l-102.11-5=
9a95.16 95.16 0 0 1 -34.79-129.81zm350.74 81.62-123.31-71.2 42.69-24.64a1.5=
3 1.53 0 0 1 1.44-.13l102.11 58.95a95.08 95.08 0 0 1 -14.69 171.55c0-.88 0-=
2.42 0-3.49v-116.68a16.4 16.4 0 0 0 -8.24-14.36zm42.49-63.95c-.75-.46-2.06-=
1.25-3-1.79l-101-58.34a16.46 16.46 0 0 0 -16.59 0l-123.31 71.2v-49.3a1.53 1=
.53 0 0 1 .61-1.31l102.1-58.9a95.07 95.07 0 0 1 141.19 98.44zm-267.11 87.87=
-42.7-24.65a1.52 1.52 0 0 1 -.83-1.17v-117.92a95.07 95.07 0 0 1 155.9-73c-.=
77.42-2.11 1.16-3 1.7l-101 58.34a16.41 16.41 0 0 0 -8.3 14.36zm23.19-50 54.=
92-31.72 54.92 31.7v63.42l-54.92 31.7-54.92-31.7z" fill=3D"#202123"></path>=
</svg></div></a></div><div class=3D"menu-container"><a class=3D"nav-item" h=
ref=3D"https://platform.openai.com/">Overview</a><a aria-current=3D"page" c=
lass=3D"nav-item active" href=3D"https://platform.openai.com/docs">Document=
ation</a><a class=3D"nav-item" href=3D"https://platform.openai.com/docs/api=
-reference">API reference</a><a class=3D"nav-item" href=3D"https://platform=
.openai.com/examples">Examples</a><a class=3D"nav-item" href=3D"https://pla=
tform.openai.com/playground">Playground</a></div></div><div class=3D"right-=
menu"><div class=3D"header-upgrade-container"><a role=3D"button" class=3D"h=
eader-upgrade-btn" href=3D"https://platform.openai.com/account/billing"><sv=
g stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=
=3D"0 0 20 20" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000=
/svg"><path fill-rule=3D"evenodd" d=3D"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 0=
1.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38=
z" clip-rule=3D"evenodd"></path></svg>&nbsp;Upgrade</a></div><div class=3D"=
header-support"><button tabindex=3D"0" class=3D"btn btn-md btn-minimal btn-=
neutral header-support-btn" type=3D"button"><span class=3D"btn-label-wrap">=
<span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"currentColor"=
 stroke-width=3D"0" viewBox=3D"0 0 1024 1024" height=3D"1em" width=3D"1em" =
xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M512 64C264.6 64 64 264.6 6=
4 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-3=
72-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"></=
path><path d=3D"M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 4=
0.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c=
0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 2=
2.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.=
6 8-8v-22.7a48.3 48.3 0 0 1 30.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-1=
7.1-76-48.3-103.3zM472 732a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"></path></svg=
></span><span class=3D"btn-label-inner">Help=E2=80=8D</span></span></button=
></div><div class=3D"user-section" aria-haspopup=3D"true" aria-expanded=3D"=
false"><div class=3D"avatar mr-2"><div>M</div></div><div class=3D"user-deta=
ils"><div class=3D"user-details-org">Personal</div></div></div></div><div c=
lass=3D"mobile-menu-toggle" role=3D"button"><svg stroke=3D"currentColor" fi=
ll=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"roun=
d" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://w=
ww.w3.org/2000/svg"><line x1=3D"3" y1=3D"12" x2=3D"21" y2=3D"12"></line><li=
ne x1=3D"3" y1=3D"6" x2=3D"21" y2=3D"6"></line><line x1=3D"3" y1=3D"18" x2=
=3D"21" y2=3D"18"></line></svg></div></div><div class=3D"page-body full-wid=
th flush docs-page"><div class=3D"docs-nav"><div class=3D"side-nav side-nav=
-padded"><div class=3D"side-nav-section"><div class=3D"side-nav-header subh=
eading">Get started</div><a class=3D"scroll-link side-nav-item" href=3D"htt=
ps://platform.openai.com/docs/introduction">Introduction</a><a class=3D"scr=
oll-link side-nav-item" href=3D"https://platform.openai.com/docs/quickstart=
">Quickstart</a><a class=3D"scroll-link side-nav-item" href=3D"https://plat=
form.openai.com/docs/libraries">Libraries</a><a class=3D"scroll-link side-n=
av-item" href=3D"https://platform.openai.com/docs/models">Models</a><a clas=
s=3D"scroll-link side-nav-item" href=3D"https://platform.openai.com/docs/de=
precations">Deprecations</a><a class=3D"scroll-link side-nav-item" href=3D"=
https://platform.openai.com/docs/tutorials">Tutorials</a><a href=3D"https:/=
/openai.com/policies/" class=3D"scroll-link side-nav-item" target=3D"_blank=
" rel=3D"noreferrer">Policies</a></div><div class=3D"side-nav-section"><div=
 class=3D"side-nav-header subheading">Guides</div><a class=3D"scroll-link s=
ide-nav-item" href=3D"https://platform.openai.com/docs/guides/gpt">GPT</a><=
a class=3D"scroll-link side-nav-item" href=3D"https://platform.openai.com/d=
ocs/guides/gpt-best-practices">GPT best practices</a><a class=3D"scroll-lin=
k side-nav-item" href=3D"https://platform.openai.com/docs/guides/images">Im=
age generation</a><a aria-current=3D"page" class=3D"scroll-link side-nav-it=
em active" href=3D"https://platform.openai.com/docs/guides/fine-tuning">Fin=
e-tuning</a><a class=3D"scroll-link side-nav-item side-nav-child" href=3D"h=
ttps://platform.openai.com/docs/guides/fine-tuning/preparing-your-dataset">=
Preparing your dataset</a><a class=3D"scroll-link side-nav-item side-nav-ch=
ild" href=3D"https://platform.openai.com/docs/guides/fine-tuning/advanced-u=
sage">Advanced usage</a><a class=3D"scroll-link side-nav-item side-nav-chil=
d" href=3D"https://platform.openai.com/docs/guides/fine-tuning/weights-bias=
es">Weights &amp; Biases</a><a class=3D"scroll-link side-nav-item side-nav-=
child" href=3D"https://platform.openai.com/docs/guides/fine-tuning/example-=
notebooks">Example notebooks</a><a class=3D"scroll-link side-nav-item" href=
=3D"https://platform.openai.com/docs/guides/embeddings">Embeddings</a><a cl=
ass=3D"scroll-link side-nav-item" href=3D"https://platform.openai.com/docs/=
guides/speech-to-text">Speech to text</a><a class=3D"scroll-link side-nav-i=
tem" href=3D"https://platform.openai.com/docs/guides/moderation">Moderation=
</a><a class=3D"scroll-link side-nav-item" href=3D"https://platform.openai.=
com/docs/guides/rate-limits">Rate limits</a><a class=3D"scroll-link side-na=
v-item" href=3D"https://platform.openai.com/docs/guides/error-codes">Error =
codes</a><a class=3D"scroll-link side-nav-item" href=3D"https://platform.op=
enai.com/docs/guides/safety-best-practices">Safety best practices</a><a cla=
ss=3D"scroll-link side-nav-item" href=3D"https://platform.openai.com/docs/g=
uides/production-best-practices">Production best practices</a></div><div cl=
ass=3D"side-nav-section"><div class=3D"side-nav-header subheading">Chat plu=
gins</div><a class=3D"scroll-link side-nav-item" href=3D"https://platform.o=
penai.com/docs/plugins/introduction">Introduction</a><a class=3D"scroll-lin=
k side-nav-item" href=3D"https://platform.openai.com/docs/plugins/getting-s=
tarted">Getting started</a><a class=3D"scroll-link side-nav-item" href=3D"h=
ttps://platform.openai.com/docs/plugins/authentication">Authentication</a><=
a class=3D"scroll-link side-nav-item" href=3D"https://platform.openai.com/d=
ocs/plugins/examples">Examples</a><a class=3D"scroll-link side-nav-item" hr=
ef=3D"https://platform.openai.com/docs/plugins/production">Production</a><a=
 class=3D"scroll-link side-nav-item" href=3D"https://platform.openai.com/do=
cs/plugins/review">Plugin review</a><a href=3D"https://openai.com/policies/=
usage-policies#plugin-policies" class=3D"scroll-link side-nav-item" target=
=3D"_blank" rel=3D"noreferrer">Plugin policies</a></div></div></div><div cl=
ass=3D"docs-body"><div class=3D"markdown-page markdown-content"><div class=
=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=3D"https://p=
latform.openai.com/docs/guides/fine-tuning/fine-tuning"><h1 class=3D"anchor=
-heading" name=3D"fine-tuning">Fine-tuning<svg stroke=3D"currentColor" fill=
=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-=
heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/200=
0/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-=
3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.65=
6-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 10=
1.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.41=
4-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></=
svg></h1></a></div><p>Learn how to customize a model for your application.<=
/p><div class=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=
=3D"https://platform.openai.com/docs/guides/fine-tuning/introduction"><h2 c=
lass=3D"anchor-heading" name=3D"introduction">Introduction<svg stroke=3D"cu=
rrentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" =
class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http:=
//www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0=
 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3=
-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 01=
2.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1=
.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"ev=
enodd"></path></svg></h2></a></div><div class=3D"mt-6 mb-6"><div class=3D"n=
otice notice-neutral has-body has-icon"><div class=3D"notice-icon notice-ic=
on-neutral"><svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=
=3D"0" viewBox=3D"0 0 512 512" height=3D"1em" width=3D"1em" xmlns=3D"http:/=
/www.w3.org/2000/svg"><path d=3D"M256 48C141.2 48 48 141.2 48 256s93.2 208 =
208 208 208-93.2 208-208S370.8 48 256 48zm21 312h-42V235h42v125zm0-166h-42v=
-42h42v42z"></path></svg></div><div class=3D"notice-message"><div class=3D"=
notice-body">On July 6, 2023, we <a href=3D"https://openai.com/blog/gpt-4-a=
pi-general-availability" target=3D"_blank" rel=3D"noopener noreferrer">anno=
unced</a> the deprecation of ada, babbage, curie and davinci models. These =
models, including fine-tuned versions, will be turned off on January 4, 202=
4. We are actively working on enabling fine-tuning for upgraded base GPT-3 =
models as well as GPT-3.5 Turbo and GPT-4, we recommend waiting for those n=
ew options to be available rather than fine-tuning based off of the soon to=
 be deprecated models.</div></div></div></div><p>Fine-tuning lets you get m=
ore out of the models available through the API by providing:</p><ol><li>Hi=
gher quality results than prompt design</li><li>Ability to train on more ex=
amples than can fit in a prompt</li><li>Token savings due to shorter prompt=
s</li><li>Lower latency requests</li></ol><p>GPT-3 has been pre-trained on =
a vast amount of text from the open internet. When given a prompt with just=
 a few examples, it can often intuit what task you are trying to perform an=
d generate a plausible completion. This is often called "few-shot learning.=
"</p><p>Fine-tuning improves on few-shot learning by training on many more =
examples than can fit in the prompt, letting you achieve better results on =
a wide number of tasks. <strong>Once a model has been fine-tuned, you won't=
 need to provide examples in the prompt anymore.</strong> This saves costs =
and enables lower-latency requests.</p><p>At a high level, fine-tuning invo=
lves the following steps:</p><ol><li>Prepare and upload training data</li><=
li>Train a new fine-tuned model</li><li>Use your fine-tuned model</li></ol>=
<p>Visit our <a href=3D"https://openai.com/api/pricing" target=3D"_blank" r=
el=3D"noopener noreferrer">pricing page</a> to learn more about how fine-tu=
ned model training and usage are billed.</p><div class=3D"anchor-heading-ro=
ot"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/do=
cs/guides/fine-tuning/what-models-can-be-fine-tuned"><h2 class=3D"anchor-he=
ading" name=3D"what-models-can-be-fine-tuned">What models can be fine-tuned=
?<svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" view=
Box=3D"0 0 20 20" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15=
px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M=
12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414=
 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-=
1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 1=
05.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3=
z" clip-rule=3D"evenodd"></path></svg></h2></a></div><div class=3D"mt-6 mb-=
6"><div class=3D"notice notice-neutral has-body has-icon"><div class=3D"not=
ice-icon notice-icon-neutral"><svg stroke=3D"currentColor" fill=3D"currentC=
olor" stroke-width=3D"0" viewBox=3D"0 0 512 512" height=3D"1em" width=3D"1e=
m" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M256 48C141.2 48 48 141.=
2 48 256s93.2 208 208 208 208-93.2 208-208S370.8 48 256 48zm21 312h-42V235h=
42v125zm0-166h-42v-42h42v42z"></path></svg></div><div class=3D"notice-messa=
ge"><div class=3D"notice-body">We are working on safely enabling fine-tunin=
g for GPT-4 and GPT-3.5 Turbo and expect this feature to be available later=
 this year.</div></div></div></div><p>Fine-tuning is currently only availab=
le for the following base models: <code>davinci</code>, <code>curie</code>,=
 <code>babbage</code>, and <code>ada</code>. These are the original models =
that do not have any instruction following training (like <code>text-davinc=
i-003</code> does for example). You are also able to <a href=3D"https://pla=
tform.openai.com/docs/guides/fine-tuning/continue-fine-tuning-from-a-fine-t=
uned-model">continue fine-tuning a fine-tuned model</a> to add additional d=
ata without having to start from scratch.</p><div class=3D"anchor-heading-r=
oot"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/d=
ocs/guides/fine-tuning/installation"><h2 class=3D"anchor-heading" name=3D"i=
nstallation">Installation<svg stroke=3D"currentColor" fill=3D"currentColor"=
 stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" hei=
ght=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill=
-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.82=
8 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a=
1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0=
 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a=
2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h2></a></di=
v><p>We recommend using our OpenAI command-line interface (CLI). To install=
 this, run</p><div class=3D"code-sample code-sample-oneliner"><div class=3D=
"code-sample-body code-sample-body-large"><button tabindex=3D"0" class=3D"b=
tn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"button" a=
ria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"btn-node">=
<svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 =
0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" =
width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" wi=
dth=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 =
0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></but=
ton><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><code class=
=3D"language-bash" style=3D"white-space: pre;"><span class=3D""><span class=
=3D"">pip install --upgrade openai</span></span></code></pre></div></div><p=
>(The following instructions work for version <strong>0.9.4</strong> and up=
. Additionally, the OpenAI CLI requires python 3.)</p><p>Set your <code>OPE=
NAI_API_KEY</code> environment variable by adding the following line into y=
our shell initialization script (e.g. .bashrc, zshrc, etc.) or running it i=
n the command line before the fine-tuning command:</p><div class=3D"code-sa=
mple code-sample-oneliner"><div class=3D"code-sample-body code-sample-body-=
large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral c=
ode-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"b=
tn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=
=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round"=
 stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www=
.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2"=
 ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0=
 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-hig=
hlighter dark code-sample-pre"><code class=3D"language-bash" style=3D"white=
-space: pre;"><span class=3D""><span class=3D"hljs-built_in">export</span><=
span class=3D""> OPENAI_API_KEY=3D</span><span class=3D"hljs-string">"&lt;O=
PENAI_API_KEY&gt;"</span></span></code></pre></div></div><div class=3D"anch=
or-heading-root"><a class=3D"anchor-heading-link" href=3D"https://platform.=
openai.com/docs/guides/fine-tuning/prepare-training-data"><h2 class=3D"anch=
or-heading" name=3D"prepare-training-data">Prepare training data<svg stroke=
=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 2=
0 20" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D=
"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586=
a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.6=
56 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 =
2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656=
l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=
=3D"evenodd"></path></svg></h2></a></div><p>Training data is how you teach =
GPT-3 what you'd like it to say.</p><p>Your data must be a <a href=3D"https=
://jsonlines.org/" target=3D"_blank" rel=3D"noopener noreferrer">JSONL</a> =
document, where each line is a prompt-completion pair corresponding to a tr=
aining example. You can use our <a href=3D"https://platform.openai.com/docs=
/guides/fine-tuning/cli-data-preparation-tool">CLI data preparation tool</a=
> to easily convert your data into this file format.</p><div class=3D"code-=
sample"><div class=3D"code-sample-body code-sample-body-large"><button tabi=
ndex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-flo=
at" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><spa=
n class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-widt=
h=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"r=
ound" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><re=
ct x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><pat=
h d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></sv=
g></span></span></button><pre class=3D"hljs syntax-highlighter dark code-sa=
mple-pre"><code class=3D"language-json" style=3D"white-space: pre;"><code><=
span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{</span><span class=3D"hljs=
-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-strin=
g">"&lt;prompt text&gt;"</span><span class=3D"">, </span><span class=3D"hlj=
s-string">"completion"</span><span class=3D"">: </span><span class=3D"hljs-=
string">"&lt;ideal generated text&gt;"</span><span class=3D"">}
</span></span><span class=3D""><span class=3D"">{</span><span class=3D"hljs=
-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-strin=
g">"&lt;prompt text&gt;"</span><span class=3D"">, </span><span class=3D"hlj=
s-string">"completion"</span><span class=3D"">: </span><span class=3D"hljs-=
string">"&lt;ideal generated text&gt;"</span><span class=3D"">}
</span></span><span class=3D""><span class=3D"">{</span><span class=3D"hljs=
-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-strin=
g">"&lt;prompt text&gt;"</span><span class=3D"">, </span><span class=3D"hlj=
s-string">"completion"</span><span class=3D"">: </span><span class=3D"hljs-=
string">"&lt;ideal generated text&gt;"</span><span class=3D"">}
</span></span><span class=3D"">...</span></code></pre></div></div><p>Design=
ing your prompts and completions for fine-tuning is different from designin=
g your prompts for use with our base models (Davinci, Curie, Babbage, Ada).=
 In particular, while prompts for base models often consist of multiple exa=
mples ("few-shot learning"), for fine-tuning, each training example general=
ly consists of a single input example and its associated output, without th=
e need to give detailed instructions or include multiple examples in the sa=
me prompt.</p><p>For more detailed guidance on how to prepare training data=
 for various tasks, please refer to our <a href=3D"https://platform.openai.=
com/docs/guides/fine-tuning/preparing-your-dataset">preparing your dataset<=
/a> best practices.</p><p>The more training examples you have, the better. =
We recommend having at least a couple hundred examples. In general, we've f=
ound that each doubling of the dataset size leads to a linear increase in m=
odel quality.</p><div class=3D"anchor-heading-root"><a class=3D"anchor-head=
ing-link" href=3D"https://platform.openai.com/docs/guides/fine-tuning/cli-d=
ata-preparation-tool"><h3 class=3D"anchor-heading" name=3D"cli-data-prepara=
tion-tool">CLI data preparation tool<svg stroke=3D"currentColor" fill=3D"cu=
rrentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-headin=
g-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"=
><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 =
2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.65=
6l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-=
1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.41=
4l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></=
h3></a></div><p>We developed a tool which validates, gives suggestions and =
reformats your data:</p><div class=3D"code-sample code-sample-oneliner"><di=
v class=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0" =
class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D=
"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"=
btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" vie=
wBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" heigh=
t=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" =
y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 1=
5H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></=
span></button><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><=
code class=3D"language-bash" style=3D"white-space: pre;"><span class=3D""><=
span class=3D"">openai tools fine_tunes.prepare_data -f &lt;LOCAL_FILE&gt;<=
/span></span></code></pre></div></div><p>This tool accepts different format=
s, with the only requirement that they contain a prompt and a completion co=
lumn/key. You can pass a <strong>CSV, TSV, XLSX, JSON</strong> or <strong>J=
SONL</strong> file, and it will save the output into a JSONL file ready for=
 fine-tuning, after guiding you through the process of suggested changes.</=
p><div class=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=
=3D"https://platform.openai.com/docs/guides/fine-tuning/create-a-fine-tuned=
-model"><h2 class=3D"anchor-heading" name=3D"create-a-fine-tuned-model">Cre=
ate a fine-tuned model<svg stroke=3D"currentColor" fill=3D"currentColor" st=
roke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" height=
=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-ru=
le=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0=
 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1=
 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00=
-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2=
 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h2></a></div><=
p>The following assumes you've already prepared training data following the=
 <a href=3D"https://platform.openai.com/docs/guides/fine-tuning/prepare-tra=
ining-data">above instructions</a>.</p><p>Start your fine-tuning job using =
the OpenAI CLI:</p><div class=3D"code-sample code-sample-oneliner"><div cla=
ss=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0" class=
=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"butt=
on" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"btn-n=
ode"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=
=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D=
"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D=
"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a=
2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span=
></button><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><code=
 class=3D"language-bash" style=3D"white-space: pre;"><span class=3D""><span=
 class=3D"">openai api fine_tunes.create -t &lt;TRAIN_FILE_ID_OR_PATH&gt; -=
m &lt;BASE_MODEL&gt;</span></span></code></pre></div></div><p>Where <code>B=
ASE_MODEL</code> is the name of the base model you're starting from (ada, b=
abbage, curie, or davinci). You can customize your fine-tuned model's name =
using the <a href=3D"https://platform.openai.com/docs/guides/fine-tuning/cu=
stomize-your-model-name">suffix parameter</a>.</p><p>Running the above comm=
and does several things:</p><ol><li>Uploads the file using the <a target=3D=
"_blank" href=3D"https://platform.openai.com/docs/api-reference/files">file=
s API</a> (or uses an already-uploaded file)</li><li>Creates a fine-tune jo=
b</li><li>Streams events until the job is done (this often takes minutes, b=
ut can take hours if there are many jobs in the queue or your dataset is la=
rge)</li></ol><p>Every fine-tuning job starts from a base model, which defa=
ults to curie. The choice of model influences both the performance of the m=
odel and the cost of running your fine-tuned model. Your model can be one o=
f: <code>ada</code>, <code>babbage</code>, <code>curie</code>, or <code>dav=
inci</code>. Visit our <a href=3D"https://openai.com/api/pricing/#faq-fine-=
tuning-pricing-calculation" target=3D"_blank" rel=3D"noopener noreferrer">p=
ricing page</a> for details on fine-tune rates.</p><p>After you've started =
a fine-tune job, it may take some time to complete. Your job may be queued =
behind other jobs on our system, and training our model can take minutes or=
 hours depending on the model and dataset size. If the event stream is inte=
rrupted for any reason, you can resume it by running:</p><div class=3D"code=
-sample code-sample-oneliner"><div class=3D"code-sample-body code-sample-bo=
dy-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutra=
l code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=
=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" f=
ill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://=
www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D=
"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 =
0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-=
highlighter dark code-sample-pre"><code class=3D"language-bash" style=3D"wh=
ite-space: pre;"><span class=3D""><span class=3D"">openai api fine_tunes.fo=
llow -i &lt;YOUR_FINE_TUNE_JOB_ID&gt;</span></span></code></pre></div></div=
><p>When the job is done, it should display the name of the fine-tuned mode=
l.</p><p>In addition to creating a fine-tune job, you can also list existin=
g jobs, retrieve the status of a job, or cancel a job.</p><div class=3D"cod=
e-sample"><div class=3D"code-sample-body code-sample-body-large"><button ta=
bindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-f=
loat" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><s=
pan class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-wi=
dth=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D=
"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><=
rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><p=
ath d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></=
svg></span></span></button><pre class=3D"hljs syntax-highlighter dark code-=
sample-pre"><code class=3D"language-bash" style=3D"white-space: pre;"><code=
><span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span><span class=3D"react-syntax-highlighter-line-number">5
</span><span class=3D"react-syntax-highlighter-line-number">6
</span><span class=3D"react-syntax-highlighter-line-number">7
</span><span class=3D"react-syntax-highlighter-line-number">8
</span><span class=3D"react-syntax-highlighter-line-number">9
</span><span class=3D"react-syntax-highlighter-line-number">10
</span></code><span class=3D""><span class=3D"hljs-comment"># List all crea=
ted fine-tunes</span><span class=3D"">
</span></span><span class=3D"">openai api fine_tunes.list
</span><span class=3D"">
</span><span class=3D""><span class=3D""></span><span class=3D"hljs-comment=
"># Retrieve the state of a fine-tune. The resulting object includes</span>=
<span class=3D"">
</span></span><span class=3D""><span class=3D""></span><span class=3D"hljs-=
comment"># job status (which can be one of pending, running, succeeded, or =
failed)</span><span class=3D"">
</span></span><span class=3D""><span class=3D""></span><span class=3D"hljs-=
comment"># and other information</span><span class=3D"">
</span></span><span class=3D"">openai api fine_tunes.get -i &lt;YOUR_FINE_T=
UNE_JOB_ID&gt;
</span><span class=3D"">
</span><span class=3D""><span class=3D""></span><span class=3D"hljs-comment=
"># Cancel a job</span><span class=3D"">
</span></span><span class=3D"">openai api fine_tunes.cancel -i &lt;YOUR_FIN=
E_TUNE_JOB_ID&gt;</span></code></pre></div></div><div class=3D"anchor-headi=
ng-root"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.c=
om/docs/guides/fine-tuning/use-a-fine-tuned-model"><h2 class=3D"anchor-head=
ing" name=3D"use-a-fine-tuned-model">Use a fine-tuned model<svg stroke=3D"c=
urrentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20"=
 class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http=
://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 =
0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l=
3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 0=
12.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-=
1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"e=
venodd"></path></svg></h2></a></div><p>When a job has succeeded, the <code>=
fine_tuned_model</code> field will be populated with the name of the model.=
 You may now specify this model as a parameter to our <a target=3D"_blank" =
href=3D"https://platform.openai.com/docs/api-reference/completions">Complet=
ions API</a>, and make requests to it using the <a target=3D"_blank" href=
=3D"https://platform.openai.com/playground">Playground</a>.</p><p>After you=
r job first completes, it may take several minutes for your model to become=
 ready to handle requests. If completion requests to your model time out, i=
t is likely because your model is still being loaded. If this happens, try =
again in a few minutes.</p><p>You can start making requests by passing the =
model name as the <code>model</code> parameter of a completion request:</p>=
<p>OpenAI CLI:</p><div class=3D"code-sample code-sample-oneliner"><div clas=
s=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0" class=
=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"butt=
on" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"btn-n=
ode"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=
=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D=
"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D=
"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a=
2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span=
></button><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><code=
 class=3D"language-bash" style=3D"white-space: pre;"><span class=3D""><span=
 class=3D"">openai api completions.create -m &lt;FINE_TUNED_MODEL&gt; -p &l=
t;YOUR_PROMPT&gt;</span></span></code></pre></div></div><p>cURL:</p><div cl=
ass=3D"code-sample"><div class=3D"code-sample-body code-sample-body-large">=
<button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sam=
ple-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-labe=
l-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none"=
 stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2=
000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"=
></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"=
></path></svg></span></span></button><pre class=3D"hljs syntax-highlighter =
dark code-sample-pre"><code class=3D"language-bash" style=3D"white-space: p=
re;"><code><span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">curl https://api.openai.com=
/v1/completions \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Authorization: Bearer </span><span class=3D"hljs-string hljs-=
variable">$OPENAI_API_KEY</span><span class=3D"hljs-string">"</span><span c=
lass=3D""> \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Content-Type: application/json"</span><span class=3D""> \
</span></span><span class=3D""><span class=3D"">  -d </span><span class=3D"=
hljs-string">'{"prompt": YOUR_PROMPT, "model": FINE_TUNED_MODEL}'</span></s=
pan></code></pre></div></div><p>Python:</p><div class=3D"code-sample"><div =
class=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0" cl=
ass=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"b=
utton" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"bt=
n-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewB=
ox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=
=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=
=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15=
H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></s=
pan></button><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><c=
ode class=3D"language-python" style=3D"white-space: pre;"><code><span class=
=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"hljs-keyword">import</span><s=
pan class=3D""> openai
</span></span><span class=3D"">openai.Completion.create(
</span><span class=3D"">    model=3DFINE_TUNED_MODEL,
</span><span class=3D"">    prompt=3DYOUR_PROMPT)</span></code></pre></div>=
</div><p>Node.js:</p><div class=3D"code-sample"><div class=3D"code-sample-b=
ody code-sample-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-=
minimal btn-neutral code-sample-copy-float" type=3D"button" aria-label=3D"C=
opy"><span class=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D=
"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" strok=
e-linecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" =
xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" hei=
ght=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 =
0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=
=3D"hljs syntax-highlighter dark code-sample-pre"><code class=3D"language-j=
avascript" style=3D"white-space: pre;"><code><span class=3D"react-syntax-hi=
ghlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"hljs-keyword">const</span><sp=
an class=3D""> response =3D </span><span class=3D"hljs-keyword">await</span=
><span class=3D""> openai.createCompletion({
</span></span><span class=3D""><span class=3D"">  </span><span class=3D"hlj=
s-attr">model</span><span class=3D"">: FINE_TUNED_MODEL
</span></span><span class=3D""><span class=3D"">  </span><span class=3D"hlj=
s-attr">prompt</span><span class=3D"">: YOUR_PROMPT,
</span></span><span class=3D"">});</span></code></pre></div></div><p>You ma=
y continue to use all the other <a target=3D"_blank" href=3D"https://platfo=
rm.openai.com/docs/api-reference/completions">Completions</a> parameters li=
ke <code>temperature</code>, <code>frequency_penalty</code>, <code>presence=
_penalty</code>, etc, on these requests to fine-tuned models.</p><div class=
=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=3D"https://p=
latform.openai.com/docs/guides/fine-tuning/delete-a-fine-tuned-model"><h2 c=
lass=3D"anchor-heading" name=3D"delete-a-fine-tuned-model">Delete a fine-tu=
ned model<svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D=
"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" height=3D"15px" wid=
th=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd=
" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.4=
14 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.=
414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3=
a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2=
.828l3-3z" clip-rule=3D"evenodd"></path></svg></h2></a></div><p>To delete a=
 fine-tuned model, you must be designated an "owner" within your organizati=
on.</p><p>OpenAI CLI:</p><div class=3D"code-sample code-sample-oneliner"><d=
iv class=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0"=
 class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=
=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=
=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2"=
 viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" h=
eight=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D=
"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"=
M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></spa=
n></span></button><pre class=3D"hljs syntax-highlighter dark code-sample-pr=
e"><code class=3D"language-bash" style=3D"white-space: pre;"><span class=3D=
""><span class=3D"">openai api models.delete -i &lt;FINE_TUNED_MODEL&gt;</s=
pan></span></code></pre></div></div><p>cURL:</p><div class=3D"code-sample">=
<div class=3D"code-sample-body code-sample-body-large"><button tabindex=3D"=
0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=
=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=
=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2"=
 viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" h=
eight=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D=
"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"=
M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></spa=
n></span></button><pre class=3D"hljs syntax-highlighter dark code-sample-pr=
e"><code class=3D"language-bash" style=3D"white-space: pre;"><span class=3D=
""><span class=3D"">curl -X </span><span class=3D"hljs-string">"DELETE"</sp=
an><span class=3D""> https://api.openai.com/v1/models/&lt;FINE_TUNED_MODEL&=
gt; \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Authorization: Bearer </span><span class=3D"hljs-string hljs-=
variable">$OPENAI_API_KEY</span><span class=3D"hljs-string">"</span></span>=
</code></pre></div></div><p>Python:</p><div class=3D"code-sample"><div clas=
s=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0" class=
=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"butt=
on" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"btn-n=
ode"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=
=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D=
"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D=
"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a=
2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span=
></button><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><code=
 class=3D"language-python" style=3D"white-space: pre;"><span class=3D""><sp=
an class=3D"hljs-keyword">import</span><span class=3D""> openai
</span></span><span class=3D"">openai.Model.delete(FINE_TUNED_MODEL)</span>=
</code></pre></div></div><div class=3D"anchor-heading-root"><a class=3D"anc=
hor-heading-link" href=3D"https://platform.openai.com/docs/guides/fine-tuni=
ng/preparing-your-dataset"><h1 class=3D"anchor-heading" name=3D"preparing-y=
our-dataset">Preparing your dataset<svg stroke=3D"currentColor" fill=3D"cur=
rentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading=
-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg">=
<path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2=
 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656=
l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1=
.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414=
l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h=
1></a></div><p>Fine-tuning is a powerful technique to create a new model th=
at's specific to your use case. <strong>Before fine-tuning your model, we s=
trongly recommend reading these best practices and <a href=3D"https://platf=
orm.openai.com/docs/guides/fine-tuning/specific-guidelines">specific guidel=
ines</a> for your use case below.</strong></p><div class=3D"anchor-heading-=
root"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/=
docs/guides/fine-tuning/data-formatting"><h2 class=3D"anchor-heading" name=
=3D"data-formatting">Data formatting<svg stroke=3D"currentColor" fill=3D"cu=
rrentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-headin=
g-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"=
><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 =
2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.65=
6l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-=
1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.41=
4l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></=
h2></a></div><p>To fine-tune a model, you'll need a set of training example=
s that each consist of a single input ("prompt") and its associated output =
("completion"). This is notably different from using our base models, where=
 you might input detailed instructions or multiple examples in a single pro=
mpt.</p><ul><li><p>Each prompt should end with a fixed separator to inform =
the model when the prompt ends and the completion begins. A simple separato=
r which generally works well is <code>\n\n###\n\n</code>. The separator sho=
uld not appear elsewhere in any prompt.</p></li><li><p>Each completion shou=
ld start with a whitespace due to our <a target=3D"_blank" href=3D"https://=
platform.openai.com/tokenizer">tokenization</a>, which tokenizes most words=
 with a preceding whitespace.</p></li><li><p>Each completion should end wit=
h a fixed stop sequence to inform the model when the completion ends. A sto=
p sequence could be <code>\n</code>, <code>###</code>, or any other token t=
hat does not appear in any completion.</p></li><li><p>For inference, you sh=
ould format your prompts in the same way as you did when creating the train=
ing dataset, including the same separator. Also specify the same stop seque=
nce to properly truncate the completion.</p></li></ul><div class=3D"anchor-=
heading-root"><a class=3D"anchor-heading-link" href=3D"https://platform.ope=
nai.com/docs/guides/fine-tuning/general-best-practices"><h2 class=3D"anchor=
-heading" name=3D"general-best-practices">General best practices<svg stroke=
=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 2=
0 20" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D=
"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586=
a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.6=
56 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 =
2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656=
l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=
=3D"evenodd"></path></svg></h2></a></div><p>Fine-tuning performs better wit=
h more high-quality examples. To fine-tune a model that performs better tha=
n using a high-quality prompt with our base models, you should provide at l=
east a few hundred high-quality examples, ideally vetted by human experts. =
From there, performance tends to linearly increase with every doubling of t=
he number of examples. Increasing the number of examples is usually the bes=
t and most reliable way of improving performance.</p><p>Classifiers are the=
 easiest models to get started with. For classification problems we suggest=
 using ada, which generally tends to perform only very slightly worse than =
more capable models once fine-tuned, whilst being significantly faster and =
cheaper.</p><p>If you are fine-tuning on a pre-existing dataset rather than=
 writing prompts from scratch, be sure to manually review your data for off=
ensive or inaccurate content if possible, or review as many random samples =
of the dataset as possible if it is large.</p><div class=3D"anchor-heading-=
root"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/=
docs/guides/fine-tuning/specific-guidelines"><h2 class=3D"anchor-heading" n=
ame=3D"specific-guidelines">Specific guidelines<svg stroke=3D"currentColor"=
 fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"an=
chor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.or=
g/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.=
828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00=
-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1=
 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10=
-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></pa=
th></svg></h2></a></div><p>Fine-tuning can solve a variety of problems, and=
 the optimal way to use it may depend on your specific use case. Below, we'=
ve listed the most common use cases for fine-tuning and corresponding guide=
lines.</p><div class=3D"ft-guide-toc"><ul><li><a href=3D"https://platform.o=
penai.com/docs/guides/fine-tuning/classification">Classification</a><ul><li=
><a href=3D"https://platform.openai.com/docs/guides/fine-tuning/case-study-=
is-the-model-making-untrue-statements">Is the model making untrue statement=
s?</a></li><li><a href=3D"https://platform.openai.com/docs/guides/fine-tuni=
ng/case-study-sentiment-analysis">Sentiment analysis</a></li><li><a href=3D=
"https://platform.openai.com/docs/guides/fine-tuning/case-study-categorizat=
ion-for-email-triage">Categorization for email triage</a></li></ul></li><li=
><a href=3D"https://platform.openai.com/docs/guides/fine-tuning/conditional=
-generation">Conditional generation</a><ul><li><a href=3D"https://platform.=
openai.com/docs/guides/fine-tuning/case-study-write-an-engaging-ad-based-on=
-a-wikipedia-article">Write an engaging ad based on a Wikipedia article</a>=
</li><li><a href=3D"https://platform.openai.com/docs/guides/fine-tuning/cas=
e-study-entity-extraction">Entity extraction</a></li><li><a href=3D"https:/=
/platform.openai.com/docs/guides/fine-tuning/case-study-customer-support-ch=
atbot">Customer support chatbot</a></li><li><a href=3D"https://platform.ope=
nai.com/docs/guides/fine-tuning/case-study-product-description-based-on-a-t=
echnical-list-of-properties">Product description based on a technical list =
of properties</a></li></ul></li></ul></div><div class=3D"anchor-heading-roo=
t"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/doc=
s/guides/fine-tuning/classification"><h3 class=3D"anchor-heading" name=3D"c=
lassification">Classification<svg stroke=3D"currentColor" fill=3D"currentCo=
lor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon"=
 height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path =
fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-=
2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 =
1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4=
 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 =
1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h3></a>=
</div><p>In classification problems, each input in the prompt should be cla=
ssified into one of the predefined classes. For this type of problem, we re=
commend:</p><ul><li>Use a separator at the end of the prompt, e.g. <code>\n=
\n###\n\n</code>. Remember to also append this separator when you eventuall=
y make requests to your model.</li><li>Choose classes that map to a single =
<a target=3D"_blank" href=3D"https://platform.openai.com/tokenizer">token</=
a>. At inference time, specify <code>max_tokens=3D1</code> since you only n=
eed the first token for classification.</li><li>Ensure that the prompt + co=
mpletion doesn't exceed 2048 tokens, including the separator</li><li>Aim fo=
r at least ~100 examples per class</li><li>To get class log probabilities y=
ou can specify <code>logprobs=3D5</code> (for 5 classes) when using your mo=
del</li><li>Ensure that the dataset used for finetuning is very similar in =
structure and type of task as what the model will be used for</li></ul><div=
 class=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=3D"htt=
ps://platform.openai.com/docs/guides/fine-tuning/case-study-is-the-model-ma=
king-untrue-statements"><h4 class=3D"anchor-heading" name=3D"case-study-is-=
the-model-making-untrue-statements">Case study: Is the model making untrue =
statements?<svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=
=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" height=3D"15px" =
width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"even=
odd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-=
1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414=
 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-=
3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.82=
8-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h4></a></div><p>Let's sa=
y you'd like to ensure that the text of the ads on your website mention the=
 correct product and company. In other words, you want to ensure the model =
isn't making things up. You may want to fine-tune a classifier which filter=
s out incorrect ads.</p><p>The dataset might look something like the follow=
ing:</p><div class=3D"code-sample"><div class=3D"code-sample-body code-samp=
le-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-n=
eutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span cl=
ass=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor=
" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"=
round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http=
://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=
=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2=
 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs synt=
ax-highlighter dark code-sample-pre"><code class=3D"language-json" style=3D=
"white-space: pre;"><span class=3D""><span class=3D"">{</span><span class=
=3D"hljs-string">"prompt"</span><span class=3D"">:</span><span class=3D"hlj=
s-string">"Company: BHFF insurance\nProduct: allround insurance\nAd:One sto=
p shop for all your insurance needs!\nSupported:"</span><span class=3D"">, =
</span><span class=3D"hljs-string">"completion"</span><span class=3D"">:</s=
pan><span class=3D"hljs-string">" yes"</span><span class=3D"">}
</span></span><span class=3D""><span class=3D"">{</span><span class=3D"hljs=
-string">"prompt"</span><span class=3D"">:</span><span class=3D"hljs-string=
">"Company: Loft conversion specialists\nProduct: -\nAd:Straight teeth in w=
eeks!\nSupported:"</span><span class=3D"">, </span><span class=3D"hljs-stri=
ng">"completion"</span><span class=3D"">:</span><span class=3D"hljs-string"=
>" no"</span><span class=3D"">}</span></span></code></pre></div></div><p>In=
 the example above, we used a structured input containing the name of the c=
ompany, the product, and the associated ad. As a separator we used <code>\n=
Supported:</code> which clearly separated the prompt from the completion. W=
ith a sufficient number of examples, the separator doesn't make much of a d=
ifference (usually less than 0.4%) as long as it doesn't appear within the =
prompt or the completion.</p><p>For this use case we fine-tuned an ada mode=
l since it will be faster and cheaper, and the performance will be comparab=
le to larger models because it is a classification task.</p><p>Now we can q=
uery our model by making a Completion request.</p><div class=3D"code-sample=
"><div class=3D"code-sample-body code-sample-body-large"><button tabindex=
=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" =
type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span cl=
ass=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D=
"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round=
" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=
=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=
=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg><=
/span></span></button><pre class=3D"hljs syntax-highlighter dark code-sampl=
e-pre"><code class=3D"language-bash" style=3D"white-space: pre;"><code><spa=
n class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span><span class=3D"react-syntax-highlighter-line-number">5
</span><span class=3D"react-syntax-highlighter-line-number">6
</span><span class=3D"react-syntax-highlighter-line-number">7
</span><span class=3D"react-syntax-highlighter-line-number">8
</span></code><span class=3D""><span class=3D"">curl https://api.openai.com=
/v1/completions \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Content-Type: application/json"</span><span class=3D""> \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Authorization: Bearer </span><span class=3D"hljs-string hljs-=
variable">$OPENAI_API_KEY</span><span class=3D"hljs-string">"</span><span c=
lass=3D""> \
</span></span><span class=3D""><span class=3D"">  -d </span><span class=3D"=
hljs-string">'{
</span></span><span class=3D"hljs-string">    "prompt": "Company: Reliable =
accountants Ltd\nProduct: Personal Tax help\nAd:Best advice in town!\nSuppo=
rted:",
</span><span class=3D"hljs-string">    "max_tokens": 1,
</span><span class=3D"hljs-string">    "model": "YOUR_FINE_TUNED_MODEL_NAME=
"
</span><span class=3D"hljs-string">  }'</span></code></pre></div></div><p>W=
hich will return either <code> yes</code> or <code> no</code>.</p><div clas=
s=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=3D"https://=
platform.openai.com/docs/guides/fine-tuning/case-study-sentiment-analysis">=
<h4 class=3D"anchor-heading" name=3D"case-study-sentiment-analysis">Case st=
udy: Sentiment analysis<svg stroke=3D"currentColor" fill=3D"currentColor" s=
troke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" heigh=
t=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-r=
ule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 =
0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 =
1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 0=
0-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 =
2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h4></a></div>=
<p>Let's say you'd like to get a degree to which a particular tweet is posi=
tive or negative. The dataset might look something like the following:</p><=
div class=3D"code-sample"><div class=3D"code-sample-body code-sample-body-l=
arge"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral co=
de-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"bt=
n-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D=
"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" st=
roke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3=
.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=
=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 =
2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-highli=
ghter dark code-sample-pre"><code class=3D"language-json" style=3D"white-sp=
ace: pre;"><span class=3D""><span class=3D"">{</span><span class=3D"hljs-st=
ring">"prompt"</span><span class=3D"">:</span><span class=3D"hljs-string">"=
Overjoyed with the new iPhone! -&gt;"</span><span class=3D"">, </span><span=
 class=3D"hljs-string">"completion"</span><span class=3D"">:</span><span cl=
ass=3D"hljs-string">" positive"</span><span class=3D"">}
</span></span><span class=3D""><span class=3D"">{</span><span class=3D"hljs=
-string">"prompt"</span><span class=3D"">:</span><span class=3D"hljs-string=
">"@lakers disappoint for a third straight night https://t.co/38EFe43 -&gt;=
"</span><span class=3D"">, </span><span class=3D"hljs-string">"completion"<=
/span><span class=3D"">:</span><span class=3D"hljs-string">" negative"</spa=
n><span class=3D"">}</span></span></code></pre></div></div><p>Once the mode=
l is fine-tuned, you can get back the log probabilities for the first compl=
etion token by setting <code>logprobs=3D2</code> on the completion request.=
 The higher the probability for positive class, the higher the relative sen=
timent.</p><p>Now we can query our model by making a Completion request.</p=
><div class=3D"code-sample"><div class=3D"code-sample-body code-sample-body=
-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral =
code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"=
btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=
=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round"=
 stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www=
.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2"=
 ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0=
 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-hig=
hlighter dark code-sample-pre"><code class=3D"language-bash" style=3D"white=
-space: pre;"><code><span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span><span class=3D"react-syntax-highlighter-line-number">5
</span><span class=3D"react-syntax-highlighter-line-number">6
</span><span class=3D"react-syntax-highlighter-line-number">7
</span><span class=3D"react-syntax-highlighter-line-number">8
</span></code><span class=3D""><span class=3D"">curl https://api.openai.com=
/v1/completions \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Content-Type: application/json"</span><span class=3D""> \
</span></span><span class=3D""><span class=3D"">  -H </span><span class=3D"=
hljs-string">"Authorization: Bearer </span><span class=3D"hljs-string hljs-=
variable">$OPENAI_API_KEY</span><span class=3D"hljs-string">"</span><span c=
lass=3D""> \
</span></span><span class=3D""><span class=3D"">  -d </span><span class=3D"=
hljs-string">'{
</span></span><span class=3D"hljs-string">    "prompt": "https://t.co/f93xE=
d2 Excited to share my latest blog post! -&gt;",
</span><span class=3D"hljs-string">    "max_tokens": 1,
</span><span class=3D"hljs-string">    "model": "YOUR_FINE_TUNED_MODEL_NAME=
"
</span><span class=3D"hljs-string">  }'</span></code></pre></div></div><p>W=
hich will return:</p><div class=3D"code-sample"><div class=3D"code-sample-b=
ody code-sample-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-=
minimal btn-neutral code-sample-copy-float" type=3D"button" aria-label=3D"C=
opy"><span class=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D=
"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" strok=
e-linecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" =
xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" hei=
ght=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 =
0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=
=3D"hljs syntax-highlighter dark code-sample-pre"><code class=3D"language-j=
son" style=3D"white-space: pre;"><code><span class=3D"react-syntax-highligh=
ter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span><span class=3D"react-syntax-highlighter-line-number">5
</span><span class=3D"react-syntax-highlighter-line-number">6
</span><span class=3D"react-syntax-highlighter-line-number">7
</span><span class=3D"react-syntax-highlighter-line-number">8
</span><span class=3D"react-syntax-highlighter-line-number">9
</span><span class=3D"react-syntax-highlighter-line-number">10
</span><span class=3D"react-syntax-highlighter-line-number">11
</span><span class=3D"react-syntax-highlighter-line-number">12
</span><span class=3D"react-syntax-highlighter-line-number">13
</span><span class=3D"react-syntax-highlighter-line-number">14
</span><span class=3D"react-syntax-highlighter-line-number">15
</span><span class=3D"react-syntax-highlighter-line-number">16
</span><span class=3D"react-syntax-highlighter-line-number">17
</span><span class=3D"react-syntax-highlighter-line-number">18
</span><span class=3D"react-syntax-highlighter-line-number">19
</span><span class=3D"react-syntax-highlighter-line-number">20
</span><span class=3D"react-syntax-highlighter-line-number">21
</span><span class=3D"react-syntax-highlighter-line-number">22
</span><span class=3D"react-syntax-highlighter-line-number">23
</span><span class=3D"react-syntax-highlighter-line-number">24
</span><span class=3D"react-syntax-highlighter-line-number">25
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"id"</span><span class=3D"">: </span><span class=3D"hljs-string=
">"cmpl-COMPLETION_ID"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"object"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"text_completion"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"created"</span><span class=3D"">: </span><span class=3D"hljs-n=
umber">1589498378</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"model"</span><span class=3D"">: </span><span class=3D"hljs-str=
ing">"YOUR_FINE_TUNED_MODEL_NAME"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"choices"</span><span class=3D"">: [
</span></span><span class=3D"">        {
</span><span class=3D""><span class=3D"">            </span><span class=3D"=
hljs-string">"logprobs"</span><span class=3D"">: {
</span></span><span class=3D""><span class=3D"">                </span><spa=
n class=3D"hljs-string">"text_offset"</span><span class=3D"">: [</span><spa=
n class=3D"hljs-number">19</span><span class=3D"">],
</span></span><span class=3D""><span class=3D"">                </span><spa=
n class=3D"hljs-string">"token_logprobs"</span><span class=3D"">: [-</span>=
<span class=3D"hljs-number">0.03597255</span><span class=3D"">],
</span></span><span class=3D""><span class=3D"">                </span><spa=
n class=3D"hljs-string">"tokens"</span><span class=3D"">: [</span><span cla=
ss=3D"hljs-string">" positive"</span><span class=3D"">],
</span></span><span class=3D""><span class=3D"">                </span><spa=
n class=3D"hljs-string">"top_logprobs"</span><span class=3D"">: [
</span></span><span class=3D"">                    {
</span><span class=3D""><span class=3D"">                        </span><sp=
an class=3D"hljs-string">" negative"</span><span class=3D"">: -</span><span=
 class=3D"hljs-number">4.9785037</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">                        </s=
pan><span class=3D"hljs-string">" positive"</span><span class=3D"">: -</spa=
n><span class=3D"hljs-number">0.03597255</span><span class=3D"">
</span></span><span class=3D"">                    }
</span><span class=3D"">                ]
</span><span class=3D"">            },
</span><span class=3D"">
</span><span class=3D""><span class=3D"">            </span><span class=3D"=
hljs-string">"text"</span><span class=3D"">: </span><span class=3D"hljs-str=
ing">" positive"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">            </span><span cl=
ass=3D"hljs-string">"index"</span><span class=3D"">: </span><span class=3D"=
hljs-number">0</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">            </span><span cl=
ass=3D"hljs-string">"finish_reason"</span><span class=3D"">: </span><span c=
lass=3D"hljs-string">"length"</span><span class=3D"">
</span></span><span class=3D"">        }
</span><span class=3D"">    ]
</span><span class=3D"">}</span></code></pre></div></div><div class=3D"anch=
or-heading-root"><a class=3D"anchor-heading-link" href=3D"https://platform.=
openai.com/docs/guides/fine-tuning/case-study-categorization-for-email-tria=
ge"><h4 class=3D"anchor-heading" name=3D"case-study-categorization-for-emai=
l-triage">Case study: Categorization for Email triage<svg stroke=3D"current=
Color" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=
=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www=
.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.=
828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 =
4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828=
 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 =
1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd=
"></path></svg></h4></a></div><p>Let's say you'd like to categorize incomin=
g email into one of a large number of predefined categories. For classifica=
tion into a large number of categories, we recommend you convert those cate=
gories into numbers, which will work well up to ~500 categories. We've obse=
rved that adding a space before the number sometimes slightly helps the per=
formance, due to tokenization. You may want to structure your training data=
 as follows:</p><div class=3D"code-sample"><div class=3D"code-sample-body c=
ode-sample-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minim=
al btn-neutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy">=
<span class=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"curr=
entColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-lin=
ecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=
=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=
=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0=
 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D=
"hljs syntax-highlighter dark code-sample-pre"><code class=3D"language-json=
" style=3D"white-space: pre;"><code><span class=3D"react-syntax-highlighter=
-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    "prompt": "Subject: </s=
pan><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-name">=
email_subject</span><span class=3D"hljs-tag">&gt;</span><span class=3D"">\n=
From:</span><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hlj=
s-name">customer_name</span><span class=3D"hljs-tag">&gt;</span><span class=
=3D"">\nDate:</span><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs=
-tag hljs-name">date</span><span class=3D"hljs-tag">&gt;</span><span class=
=3D"">\nContent:</span><span class=3D"hljs-tag">&lt;</span><span class=3D"h=
ljs-tag hljs-name">email_body</span><span class=3D"hljs-tag">&gt;</span><sp=
an class=3D"">\n\n###\n\n",
</span></span><span class=3D""><span class=3D"">    "completion": " </span>=
<span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-name">nume=
rical_category</span><span class=3D"hljs-tag">&gt;</span><span class=3D"">"
</span></span><span class=3D"">}</span></code></pre></div></div><p>For exam=
ple:</p><div class=3D"code-sample"><div class=3D"code-sample-body code-samp=
le-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-n=
eutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span cl=
ass=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor=
" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"=
round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http=
://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=
=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2=
 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs synt=
ax-highlighter dark code-sample-pre"><code class=3D"language-json" style=3D=
"white-space: pre;"><code><span class=3D"react-syntax-highlighter-line-numb=
er">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"Subject: Update my address\nFrom:Joe Doe\nTo:support@ourcompany.com\=
nDate:2021-06-03\nContent:Hi,\nI would like to update my billing address to=
 match my delivery address.\n\nPlease let me know once done.\n\nThanks,\nJo=
e\n\n###\n\n"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"completion"</span><span class=3D"">: </span><span class=3D"hlj=
s-string">" 4"</span><span class=3D"">
</span></span><span class=3D"">}</span></code></pre></div></div><p>In the e=
xample above we used an incoming email capped at 2043 tokens as input. (Thi=
s allows for a 4 token separator and a one token completion, summing up to =
2048.) As a separator we used <code>\n\n###\n\n</code> and we removed any o=
ccurrence of <code>###</code> within the email.</p><div class=3D"anchor-hea=
ding-root"><a class=3D"anchor-heading-link" href=3D"https://platform.openai=
.com/docs/guides/fine-tuning/conditional-generation"><h3 class=3D"anchor-he=
ading" name=3D"conditional-generation">Conditional generation<svg stroke=3D=
"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 2=
0" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"ht=
tp://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 =
2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 =
0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0=
 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.=
5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D=
"evenodd"></path></svg></h3></a></div><p>Conditional generation is a proble=
m where the content needs to be generated given some kind of input. This in=
cludes paraphrasing, summarizing, entity extraction, product description wr=
iting given specifications, chatbots and many others. For this type of prob=
lem we recommend:</p><ul><li>Use a separator at the end of the prompt, e.g.=
 <code>\n\n###\n\n</code>. Remember to also append this separator when you =
eventually make requests to your model.</li><li>Use an ending token at the =
end of the completion, e.g. <code> END</code></li><li>Remember to add the e=
nding token as a stop sequence during inference, e.g. <code>stop=3D[" END"]=
</code></li><li>Aim for at least ~500 examples</li><li>Ensure that the prom=
pt + completion doesn't exceed 2048 tokens, including the separator</li><li=
>Ensure the examples are of high quality and follow the same desired format=
</li><li>Ensure that the dataset used for finetuning is very similar in str=
ucture and type of task as what the model will be used for</li><li>Using Lo=
wer learning rate and only 1-2 epochs tends to work better for these use ca=
ses</li></ul><div class=3D"anchor-heading-root"><a class=3D"anchor-heading-=
link" href=3D"https://platform.openai.com/docs/guides/fine-tuning/case-stud=
y-write-an-engaging-ad-based-on-a-wikipedia-article"><h4 class=3D"anchor-he=
ading" name=3D"case-study-write-an-engaging-ad-based-on-a-wikipedia-article=
">Case study: Write an engaging ad based on a Wikipedia article<svg stroke=
=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 2=
0 20" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D=
"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586=
a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.6=
56 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 =
2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656=
l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=
=3D"evenodd"></path></svg></h4></a></div><p>This is a generative use case s=
o you would want to ensure that the samples you provide are of the highest =
quality, as the fine-tuned model will try to imitate the style (and mistake=
s) of the given examples. A good starting point is around 500 examples. A s=
ample dataset might look like this:</p><div class=3D"code-sample"><div clas=
s=3D"code-sample-body code-sample-body-large"><button tabindex=3D"0" class=
=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"butt=
on" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"btn-n=
ode"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=
=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D=
"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D=
"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a=
2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span=
></button><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><code=
 class=3D"language-json" style=3D"white-space: pre;"><code><span class=3D"r=
eact-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"&lt;Product Name&gt;\n&lt;Wikipedia description&gt;\n\n###\n\n"</spa=
n><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"completion"</span><span class=3D"">: </span><span class=3D"hlj=
s-string">" &lt;engaging ad&gt; END"</span><span class=3D"">
</span></span><span class=3D"">}</span></code></pre></div></div><p>For exam=
ple:</p><div class=3D"code-sample"><div class=3D"code-sample-body code-samp=
le-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-n=
eutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span cl=
ass=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor=
" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"=
round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http=
://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=
=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2=
 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs synt=
ax-highlighter dark code-sample-pre"><code class=3D"language-json" style=3D=
"white-space: pre;"><code><span class=3D"react-syntax-highlighter-line-numb=
er">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"Samsung Galaxy Feel\nThe Samsung Galaxy Feel is an Android smartphon=
e developed by Samsung Electronics exclusively for the Japanese market. The=
 phone was released in June 2017 and was sold by NTT Docomo. It runs on And=
roid 7.0 (Nougat), has a 4.7 inch display, and a 3000 mAh battery.\nSoftwar=
e\nSamsung Galaxy Feel runs on Android 7.0 (Nougat), but can be later updat=
ed to Android 8.0 (Oreo).\nHardware\nSamsung Galaxy Feel has a 4.7 inch Sup=
er AMOLED HD display, 16 MP back facing and 5 MP front facing cameras. It h=
as a 3000 mAh battery, a 1.6 GHz Octa-Core ARM Cortex-A53 CPU, and an ARM M=
ali-T830 MP1 700 MHz GPU. It comes with 32GB of internal storage, expandabl=
e to 256GB via microSD. Aside from its software and hardware specifications=
, Samsung also introduced a unique a hole in the phone's shell to accommoda=
te the Japanese perceived penchant for personalizing their mobile phones. T=
he Galaxy Feel's battery was also touted as a major selling point since the=
 market favors handsets with longer battery life. The device is also waterp=
roof and supports 1seg digital broadcasts using an antenna that is sold sep=
arately.\n\n###\n\n"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"completion"</span><span class=3D"">: </span><span class=3D"hlj=
s-string">"Looking for a smartphone that can do it all? Look no further tha=
n Samsung Galaxy Feel! With a slim and sleek design, our latest smartphone =
features high-quality picture and video capabilities, as well as an award w=
inning battery life. END"</span><span class=3D"">
</span></span><span class=3D"">}</span></code></pre></div></div><p>Here we =
used a multi line separator, as Wikipedia articles contain multiple paragra=
phs and headings. We also used a simple end token, to ensure that the model=
 knows when the completion should finish.</p><div class=3D"anchor-heading-r=
oot"><a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/d=
ocs/guides/fine-tuning/case-study-entity-extraction"><h4 class=3D"anchor-he=
ading" name=3D"case-study-entity-extraction">Case study: Entity extraction<=
svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBo=
x=3D"0 0 20 20" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px=
" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12=
.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4=
 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.=
5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105=
.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z"=
 clip-rule=3D"evenodd"></path></svg></h4></a></div><p>This is similar to a =
language transformation task. To improve the performance, it is best to eit=
her sort different extracted entities alphabetically or in the same order a=
s they appear in the original text. This will help the model to keep track =
of all the entities which need to be generated in order. The dataset could =
look as follows:</p><div class=3D"code-sample"><div class=3D"code-sample-bo=
dy code-sample-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-m=
inimal btn-neutral code-sample-copy-float" type=3D"button" aria-label=3D"Co=
py"><span class=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"=
currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke=
-linecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" x=
mlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" heig=
ht=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0=
 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=
=3D"hljs syntax-highlighter dark code-sample-pre"><code class=3D"language-j=
son" style=3D"white-space: pre;"><code><span class=3D"react-syntax-highligh=
ter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"&lt;any text, for example news article&gt;\n\n###\n\n"</span><span c=
lass=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"completion"</span><span class=3D"">: </span><span class=3D"hlj=
s-string">" &lt;list of entities, separated by a newline&gt; END"</span><sp=
an class=3D"">
</span></span><span class=3D"">}</span></code></pre></div></div><p>For exam=
ple:</p><div class=3D"code-sample"><div class=3D"code-sample-body code-samp=
le-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-n=
eutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span cl=
ass=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor=
" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"=
round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http=
://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=
=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2=
 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs synt=
ax-highlighter dark code-sample-pre"><code class=3D"language-json" style=3D=
"white-space: pre;"><code><span class=3D"react-syntax-highlighter-line-numb=
er">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    "prompt": "Portugal wil=
l be removed from the UK's green travel list from Tuesday, amid rising coro=
navirus cases and concern over a \"Nepal mutation </span><span class=3D"hlj=
s-keyword">of</span><span class=3D""> the so</span><span class=3D"hljs-oper=
ator">-</span><span class=3D"hljs-keyword">called</span><span class=3D""> I=
ndian variant\". It will join the amber list, meaning holidaymakers should =
not visit and returnees must isolate for 10 days...\n\n###\n\n",
</span></span><span class=3D"">    "completion": " Portugal\nUK\nNepal muta=
tion\nIndian variant END"
</span><span class=3D"">}</span></code></pre></div></div><p>A multi-line se=
parator works best, as the text will likely contain multiple lines. Ideally=
 there will be a high diversity of the types of input prompts (news article=
s, Wikipedia pages, tweets, legal documents), which reflect the likely text=
s which will be encountered when extracting entities.</p><div class=3D"anch=
or-heading-root"><a class=3D"anchor-heading-link" href=3D"https://platform.=
openai.com/docs/guides/fine-tuning/case-study-customer-support-chatbot"><h4=
 class=3D"anchor-heading" name=3D"case-study-customer-support-chatbot">Case=
 study: Customer support chatbot<svg stroke=3D"currentColor" fill=3D"curren=
tColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-ic=
on" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><pa=
th fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 =
01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1=
.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.41=
4 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1=
.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h4><=
/a></div><p>A chatbot will normally contain relevant context about the conv=
ersation (order details), summary of the conversation so far as well as mos=
t recent messages. For this use case the same past conversation can generat=
e multiple rows in the dataset, each time with a slightly different context=
, for every agent generation as a completion. This use case will require a =
few thousand examples, as it will likely deal with different types of reque=
sts, and customer issues. To ensure the performance is of high quality we r=
ecommend vetting the conversation samples to ensure the quality of agent me=
ssages. The summary can be generated with a separate text transformation fi=
ne tuned model. The dataset could look as follows:</p><div class=3D"code-sa=
mple"><div class=3D"code-sample-body code-sample-body-large"><button tabind=
ex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float=
" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span =
class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=
=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rec=
t x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path=
 d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg=
></span></span></button><pre class=3D"hljs syntax-highlighter dark code-sam=
ple-pre"><code class=3D"language-json" style=3D"white-space: pre;"><span cl=
ass=3D""><span class=3D"">{"prompt":"Summary: </span><span class=3D"hljs-ta=
g">&lt;</span><span class=3D"hljs-tag hljs-name">summary</span><span class=
=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">of</span><span cla=
ss=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">the</span><span =
class=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">interaction</=
span><span class=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">so=
</span><span class=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">=
far</span><span class=3D"hljs-tag">&gt;</span><span class=3D"">\n\nSpecific=
 information:</span><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs=
-tag hljs-name">for</span><span class=3D"hljs-tag"> </span><span class=3D"h=
ljs-tag hljs-attr">example</span><span class=3D"hljs-tag"> </span><span cla=
ss=3D"hljs-tag hljs-attr">order</span><span class=3D"hljs-tag"> </span><spa=
n class=3D"hljs-tag hljs-attr">details</span><span class=3D"hljs-tag"> </sp=
an><span class=3D"hljs-tag hljs-attr">in</span><span class=3D"hljs-tag"> </=
span><span class=3D"hljs-tag hljs-attr">natural</span><span class=3D"hljs-t=
ag"> </span><span class=3D"hljs-tag hljs-attr">language</span><span class=
=3D"hljs-tag">&gt;</span><span class=3D"">\n\n###\n\nCustomer: </span><span=
 class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-name">message1<=
/span><span class=3D"hljs-tag">&gt;</span><span class=3D"">\nAgent: </span>=
<span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-name">resp=
onse1</span><span class=3D"hljs-tag">&gt;</span><span class=3D"">\nCustomer=
: </span><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-n=
ame">message2</span><span class=3D"hljs-tag">&gt;</span><span class=3D"">\n=
Agent:", "completion":" </span><span class=3D"hljs-tag">&lt;</span><span cl=
ass=3D"hljs-tag hljs-name">response2</span><span class=3D"hljs-tag">&gt;</s=
pan><span class=3D"">\n"}
</span></span><span class=3D""><span class=3D"">{"prompt":"Summary: </span>=
<span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-name">summ=
ary</span><span class=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-att=
r">of</span><span class=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-a=
ttr">the</span><span class=3D"hljs-tag"> </span><span class=3D"hljs-tag hlj=
s-attr">interaction</span><span class=3D"hljs-tag"> </span><span class=3D"h=
ljs-tag hljs-attr">so</span><span class=3D"hljs-tag"> </span><span class=3D=
"hljs-tag hljs-attr">far</span><span class=3D"hljs-tag">&gt;</span><span cl=
ass=3D"">\n\nSpecific information:</span><span class=3D"hljs-tag">&lt;</spa=
n><span class=3D"hljs-tag hljs-name">for</span><span class=3D"hljs-tag"> </=
span><span class=3D"hljs-tag hljs-attr">example</span><span class=3D"hljs-t=
ag"> </span><span class=3D"hljs-tag hljs-attr">order</span><span class=3D"h=
ljs-tag"> </span><span class=3D"hljs-tag hljs-attr">details</span><span cla=
ss=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">in</span><span c=
lass=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">natural</span>=
<span class=3D"hljs-tag"> </span><span class=3D"hljs-tag hljs-attr">languag=
e</span><span class=3D"hljs-tag">&gt;</span><span class=3D"">\n\n###\n\nCus=
tomer: </span><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag h=
ljs-name">message1</span><span class=3D"hljs-tag">&gt;</span><span class=3D=
"">\nAgent: </span><span class=3D"hljs-tag">&lt;</span><span class=3D"hljs-=
tag hljs-name">response1</span><span class=3D"hljs-tag">&gt;</span><span cl=
ass=3D"">\nCustomer: </span><span class=3D"hljs-tag">&lt;</span><span class=
=3D"hljs-tag hljs-name">message2</span><span class=3D"hljs-tag">&gt;</span>=
<span class=3D"">\nAgent: </span><span class=3D"hljs-tag">&lt;</span><span =
class=3D"hljs-tag hljs-name">response2</span><span class=3D"hljs-tag">&gt;<=
/span><span class=3D"">\nCustomer: </span><span class=3D"hljs-tag">&lt;</sp=
an><span class=3D"hljs-tag hljs-name">message3</span><span class=3D"hljs-ta=
g">&gt;</span><span class=3D"">\nAgent:", "completion":" </span><span class=
=3D"hljs-tag">&lt;</span><span class=3D"hljs-tag hljs-name">response3</span=
><span class=3D"hljs-tag">&gt;</span><span class=3D"">\n"}</span></span></c=
ode></pre></div></div><p>Here we purposefully separated different types of =
input information, but maintained Customer Agent dialog in the same format =
between a prompt and a completion. All the completions should only be by th=
e agent, and we can use <code>\n</code> as a stop sequence when doing infer=
ence.</p><div class=3D"anchor-heading-root"><a class=3D"anchor-heading-link=
" href=3D"https://platform.openai.com/docs/guides/fine-tuning/case-study-pr=
oduct-description-based-on-a-technical-list-of-properties"><h4 class=3D"anc=
hor-heading" name=3D"case-study-product-description-based-on-a-technical-li=
st-of-properties">Case study: Product description based on a technical list=
 of properties<svg stroke=3D"currentColor" fill=3D"currentColor" stroke-wid=
th=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" height=3D"15px=
" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"ev=
enodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 0=
0-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.4=
14 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0=
l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.=
828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h4></a></div><p>Here i=
t is important to convert the input data into a natural language, which wil=
l likely lead to superior performance. For example, the following format:</=
p><div class=3D"code-sample"><div class=3D"code-sample-body code-sample-bod=
y-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral=
 code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D=
"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=
=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round"=
 stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www=
.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2"=
 ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0=
 1 2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-hig=
hlighter dark code-sample-pre"><code class=3D"language-json" style=3D"white=
-space: pre;"><code><span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"Item=3Dhandbag, Color=3Darmy_green, price=3D</span><span class=3D"hl=
js-string hljs-variable">$99</span><span class=3D"hljs-string">, size=3DS-&=
gt;"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"completion"</span><span class=3D"">: </span><span class=3D"hlj=
s-string">" This stylish small green handbag will add a unique touch to you=
r look, without costing you a fortune."</span><span class=3D"">
</span></span><span class=3D"">}</span></code></pre></div></div><p>Won't wo=
rk as well as:</p><div class=3D"code-sample"><div class=3D"code-sample-body=
 code-sample-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-min=
imal btn-neutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy=
"><span class=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"cu=
rrentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xml=
ns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=
=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0=
 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D=
"hljs syntax-highlighter dark code-sample-pre"><code class=3D"language-json=
" style=3D"white-space: pre;"><code><span class=3D"react-syntax-highlighter=
-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">{
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"prompt"</span><span class=3D"">: </span><span class=3D"hljs-st=
ring">"Item is a handbag. Colour is army green. Price is midrange. Size is =
small.-&gt;"</span><span class=3D"">,
</span></span><span class=3D""><span class=3D"">    </span><span class=3D"h=
ljs-string">"completion"</span><span class=3D"">: </span><span class=3D"hlj=
s-string">" This stylish small green handbag will add a unique touch to you=
r look, without costing you a fortune."</span><span class=3D"">
</span></span><span class=3D"">}</span></code></pre></div></div><p>For high=
 performance ensure that the completions were based on the description prov=
ided. If external content is often consulted, then adding such content in a=
n automated way would improve the performance. If the description is based =
on images, it may help to use an algorithm to extract a textual description=
 of the image. Since completions are only one sentence long, we can use <co=
de>.</code> as the stop sequence during inference.</p><div class=3D"anchor-=
heading-root"><a class=3D"anchor-heading-link" href=3D"https://platform.ope=
nai.com/docs/guides/fine-tuning/advanced-usage"><h1 class=3D"anchor-heading=
" name=3D"advanced-usage">Advanced usage<svg stroke=3D"currentColor" fill=
=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-=
heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/200=
0/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-=
3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.65=
6-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 10=
1.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.41=
4-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></=
svg></h1></a></div><div class=3D"anchor-heading-root"><a class=3D"anchor-he=
ading-link" href=3D"https://platform.openai.com/docs/guides/fine-tuning/cus=
tomize-your-model-name"><h2 class=3D"anchor-heading" name=3D"customize-your=
-model-name">Customize your model name<svg stroke=3D"currentColor" fill=3D"=
currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-head=
ing-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/sv=
g"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a=
2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.=
656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.41=
4-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.=
414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg>=
</h2></a></div><p>You can add a suffix of up to 40 characters to your fine-=
tuned model name using the <a target=3D"_blank" href=3D"https://platform.op=
enai.com/docs/api-reference/fine-tunes/create#fine-tunes/create-suffix">suf=
fix</a> parameter.</p><p>OpenAI CLI:</p><div class=3D"code-sample code-samp=
le-oneliner"><div class=3D"code-sample-body code-sample-body-large"><button=
 tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-cop=
y-float" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"=
><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke=
-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=
=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg=
"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect=
><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path=
></svg></span></span></button><pre class=3D"hljs syntax-highlighter dark co=
de-sample-pre"><code class=3D"language-bash" style=3D"white-space: pre;"><s=
pan class=3D""><span class=3D"">openai api fine_tunes.create -t test.jsonl =
-m ada --suffix </span><span class=3D"hljs-string">"custom model name"</spa=
n></span></code></pre></div></div><p>The resulting name would be:</p><div c=
lass=3D"code-sample code-sample-oneliner"><div class=3D"code-sample-body co=
de-sample-body-large"><button tabindex=3D"0" class=3D"btn btn-sm btn-minima=
l btn-neutral code-sample-copy-float" type=3D"button" aria-label=3D"Copy"><=
span class=3D"btn-label-wrap"><span class=3D"btn-node"><svg stroke=3D"curre=
ntColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-line=
cap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=
=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=
=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0=
 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></button><pre class=3D=
"hljs syntax-highlighter dark code-sample-pre"><code class=3D"language-bash=
" style=3D"white-space: pre;"><span class=3D""><span class=3D"">ada:ft-your=
-org:custom-model-name-2022-02-15-04-21-04</span></span></code></pre></div>=
</div><div class=3D"anchor-heading-root"><a class=3D"anchor-heading-link" h=
ref=3D"https://platform.openai.com/docs/guides/fine-tuning/analyzing-your-f=
ine-tuned-model"><h2 class=3D"anchor-heading" name=3D"analyzing-your-fine-t=
uned-model">Analyzing your fine-tuned model<svg stroke=3D"currentColor" fil=
l=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor=
-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/20=
00/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l=
-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.6=
56-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 1=
01.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.4=
14-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path><=
/svg></h2></a></div><p>We attach a result file to each job once it has been=
 completed. This results file ID will be listed when you retrieve a fine-tu=
ne, and also when you look at the events on a fine-tune. You can download t=
hese files:</p><p>OpenAI CLI:</p><div class=3D"code-sample code-sample-onel=
iner"><div class=3D"code-sample-body code-sample-body-large"><button tabind=
ex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-float=
" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><span =
class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=
=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rec=
t x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path=
 d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg=
></span></span></button><pre class=3D"hljs syntax-highlighter dark code-sam=
ple-pre"><code class=3D"language-bash" style=3D"white-space: pre;"><span cl=
ass=3D""><span class=3D"">openai api fine_tunes.results -i &lt;YOUR_FINE_TU=
NE_JOB_ID&gt;</span></span></code></pre></div></div><p>CURL:</p><div class=
=3D"code-sample"><div class=3D"code-sample-body code-sample-body-large"><bu=
tton tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample=
-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-w=
rap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" st=
roke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-line=
join=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000=
/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></=
rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></=
path></svg></span></span></button><pre class=3D"hljs syntax-highlighter dar=
k code-sample-pre"><code class=3D"language-text" style=3D"white-space: pre;=
"><span class=3D""><span class=3D"">curl https://api.openai.com/v1/files/$R=
ESULTS_FILE_ID/content \
</span></span><span class=3D"">  -H "Authorization: Bearer $OPENAI_API_KEY"=
 &gt; results.csv</span></code></pre></div></div><p>The <code>_results.csv<=
/code> file contains a row for each training step, where a step refers to o=
ne forward and backward pass on a batch of data. In addition to the step nu=
mber, each row contains the following fields corresponding to that step:</p=
><ul><li><strong>elapsed_tokens</strong>: the number of tokens the model ha=
s seen so far (including repeats)</li><li><strong>elapsed_examples</strong>=
: the number of examples the model has seen so far (including repeats), whe=
re one example is one element in your batch. For example, if <code>batch_si=
ze =3D 4</code>, each step will increase <code>elapsed_examples</code> by 4=
.</li><li><strong>training_loss</strong>: loss on the training batch</li><l=
i><strong>training_sequence_accuracy</strong>: the percentage of <strong>co=
mpletions</strong> in the training batch for which the model's predicted to=
kens matched the true completion tokens exactly. For example, with a <code>=
batch_size</code> of 3, if your data contains the completions [[1, 2], [0, =
5], [4, 2]] and the model predicted [[1, 1], [0, 5], [4, 2]], this accuracy=
 will be 2/3 =3D 0.67</li><li><strong>training_token_accuracy</strong>: the=
 percentage of <strong>tokens</strong> in the training batch that were corr=
ectly predicted by the model. For example, with a <code>batch_size</code> o=
f 3, if your data contains the completions [[1, 2], [0, 5], [4, 2]] and the=
 model predicted [[1, 1], [0, 5], [4, 2]], this accuracy will be 5/6 =3D 0.=
83</li></ul><div class=3D"anchor-heading-root"><a class=3D"anchor-heading-l=
ink" href=3D"https://platform.openai.com/docs/guides/fine-tuning/classifica=
tion-specific-metrics"><h3 class=3D"anchor-heading" name=3D"classification-=
specific-metrics">Classification specific metrics<svg stroke=3D"currentColo=
r" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"=
anchor-heading-icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.=
org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 =
2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 =
00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1=
 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 =
10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></=
path></svg></h3></a></div><p>We also provide the option of generating addit=
ional classification-specific metrics in the results file, such as accuracy=
 and weighted F1 score. These metrics are periodically calculated against t=
he full validation set and at the end of fine-tuning. You will see them as =
additional columns in your results file.</p><p>To enable this, set the para=
meter <code>--compute_classification_metrics</code>. Additionally, you must=
 provide a validation file, and set either the <code>classification_n_class=
es</code> parameter, for multiclass classification, or <code>classification=
_positive_class</code>, for binary classification.</p><p>OpenAI CLI:</p><di=
v class=3D"code-sample"><div class=3D"code-sample-body code-sample-body-lar=
ge"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code=
-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-=
label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"n=
one" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stro=
ke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.o=
rg/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=
=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 =
2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-highli=
ghter dark code-sample-pre"><code class=3D"language-bash" style=3D"white-sp=
ace: pre;"><code><span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span><span class=3D"react-syntax-highlighter-line-number">5
</span><span class=3D"react-syntax-highlighter-line-number">6
</span><span class=3D"react-syntax-highlighter-line-number">7
</span><span class=3D"react-syntax-highlighter-line-number">8
</span><span class=3D"react-syntax-highlighter-line-number">9
</span><span class=3D"react-syntax-highlighter-line-number">10
</span><span class=3D"react-syntax-highlighter-line-number">11
</span><span class=3D"react-syntax-highlighter-line-number">12
</span><span class=3D"react-syntax-highlighter-line-number">13
</span><span class=3D"react-syntax-highlighter-line-number">14
</span><span class=3D"react-syntax-highlighter-line-number">15
</span><span class=3D"react-syntax-highlighter-line-number">16
</span></code><span class=3D""><span class=3D"hljs-comment"># For multiclas=
s classification</span><span class=3D"">
</span></span><span class=3D"">openai api fine_tunes.create \
</span><span class=3D"">  -t &lt;TRAIN_FILE_ID_OR_PATH&gt; \
</span><span class=3D"">  -v &lt;VALIDATION_FILE_OR_PATH&gt; \
</span><span class=3D"">  -m &lt;MODEL&gt; \
</span><span class=3D"">  --compute_classification_metrics \
</span><span class=3D"">  --classification_n_classes &lt;N_CLASSES&gt;
</span><span class=3D"">
</span><span class=3D""><span class=3D""></span><span class=3D"hljs-comment=
"># For binary classification</span><span class=3D"">
</span></span><span class=3D"">openai api fine_tunes.create \
</span><span class=3D"">  -t &lt;TRAIN_FILE_ID_OR_PATH&gt; \
</span><span class=3D"">  -v &lt;VALIDATION_FILE_OR_PATH&gt; \
</span><span class=3D"">  -m &lt;MODEL&gt; \
</span><span class=3D"">  --compute_classification_metrics \
</span><span class=3D"">  --classification_n_classes 2 \
</span><span class=3D"">  --classification_positive_class &lt;POSITIVE_CLAS=
S_FROM_DATASET&gt;</span></code></pre></div></div><p>The following metrics =
will be displayed in your <a href=3D"https://platform.openai.com/docs/guide=
s/fine-tuning/analyzing-your-fine-tuned-model">results file</a> if you set =
<code>--compute_classification_metrics</code>:</p><h5 class=3D"md-nonanchor=
-heading">For multiclass classification</h5><ul><li><strong>classification/=
accuracy</strong>: accuracy</li><li><strong>classification/weighted_f1_scor=
e</strong>: weighted F-1 score</li></ul><h5 class=3D"md-nonanchor-heading">=
For binary classification</h5><p>The following metrics are based on a class=
ification threshold of 0.5 (i.e. when the probability is &gt; 0.5, an examp=
le is classified as belonging to the positive class.)</p><ul><li><strong>cl=
assification/accuracy</strong></li><li><strong>classification/precision</st=
rong></li><li><strong>classification/recall</strong></li><li><strong>classi=
fication/f{beta}</strong></li><li><strong>classification/auroc</strong> - A=
UROC</li><li><strong>classification/auprc</strong> - AUPRC</li></ul><p>Note=
 that these evaluations assume that you are using text labels for classes t=
hat tokenize down to a single token, as described above. If these condition=
s do not hold, the numbers you get will likely be wrong.</p><div class=3D"a=
nchor-heading-root"><a class=3D"anchor-heading-link" href=3D"https://platfo=
rm.openai.com/docs/guides/fine-tuning/validation"><h3 class=3D"anchor-headi=
ng" name=3D"validation">Validation<svg stroke=3D"currentColor" fill=3D"curr=
entColor" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-=
icon" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><=
path fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 =
0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l=
-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.=
414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l=
-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h3=
></a></div><p>You can reserve some of your data for validation. A validatio=
n file has exactly the same format as a train file, and your train and vali=
dation data should be mutually exclusive.</p><p>If you include a validation=
 file when creating your fine-tune job, the generated results file will inc=
lude evaluations on how well the fine-tuned model performs against your val=
idation data at periodic intervals during training.</p><p>OpenAI CLI:</p><d=
iv class=3D"code-sample"><div class=3D"code-sample-body code-sample-body-la=
rge"><button tabindex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral cod=
e-sample-copy-float" type=3D"button" aria-label=3D"Copy"><span class=3D"btn=
-label-wrap"><span class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"=
none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" str=
oke-linejoin=3D"round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.=
org/2000/svg"><rect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=
=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 =
2 2v1"></path></svg></span></span></button><pre class=3D"hljs syntax-highli=
ghter dark code-sample-pre"><code class=3D"language-bash" style=3D"white-sp=
ace: pre;"><code><span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span></code><span class=3D""><span class=3D"">openai api fine_tunes.creat=
e -t &lt;TRAIN_FILE_ID_OR_PATH&gt; \
</span></span><span class=3D"">  -v &lt;VALIDATION_FILE_ID_OR_PATH&gt; \
</span><span class=3D"">  -m &lt;MODEL&gt;</span></code></pre></div></div><=
p>If you provided a validation file, we periodically calculate metrics on b=
atches of validation data during training time. You will see the following =
additional metrics in your results file:</p><ul><li><strong>validation_loss=
</strong>: loss on the validation batch</li><li><strong>validation_sequence=
_accuracy</strong>: the percentage of completions in the validation batch f=
or which the model's predicted tokens matched the true completion tokens ex=
actly. For example, with a <code>batch_size</code> of 3, if your data conta=
ins the completion [[1, 2], [0, 5], [4, 2]] and the model predicted [[1, 1]=
, [0, 5], [4, 2]], this accuracy will be 2/3 =3D 0.67</li><li><strong>valid=
ation_token_accuracy</strong>: the percentage of tokens in the validation b=
atch that were correctly predicted by the model. For example, with a <code>=
batch_size</code> of 3, if your data contains the completion [[1, 2], [0, 5=
], [4, 2]] and the model predicted [[1, 1], [0, 5], [4, 2]], this accuracy =
will be 5/6 =3D 0.83</li></ul><div class=3D"anchor-heading-root"><a class=
=3D"anchor-heading-link" href=3D"https://platform.openai.com/docs/guides/fi=
ne-tuning/hyperparameters"><h2 class=3D"anchor-heading" name=3D"hyperparame=
ters">Hyperparameters<svg stroke=3D"currentColor" fill=3D"currentColor" str=
oke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" height=
=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-ru=
le=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0=
 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1=
 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00=
-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2=
 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h2></a></div><=
p>We've picked default hyperparameters that work well across a range of use=
 cases. The only required parameter is the training file.</p><p>That said, =
tweaking the hyperparameters used for fine-tuning can often lead to a model=
 that produces higher quality output. In particular, you may want to config=
ure the following:</p><ul><li><code>model</code>: The name of the base mode=
l to fine-tune. You can select one of "ada", "babbage", "curie", or "davinc=
i". To learn more about these models, see the <a target=3D"_blank" href=3D"=
https://platform.openai.com/docs/models">Models</a> documentation.</li><li>=
<code>n_epochs</code> - defaults to 4. The number of epochs to train the mo=
del for. An epoch refers to one full cycle through the training dataset.</l=
i><li><code>batch_size</code> - defaults to ~0.2% of the number of examples=
 in the training set, capped at 256. The batch size is the number of traini=
ng examples used to train a single forward and backward pass. In general, w=
e've found that larger batch sizes tend to work better for larger datasets.=
</li><li><code>learning_rate_multiplier</code> - defaults to 0.05, 0.1, or =
0.2 depending on final <code>batch_size</code>. The fine-tuning learning ra=
te is the original learning rate used for pretraining multiplied by this mu=
ltiplier. We recommend experimenting with values in the range 0.02 to 0.2 t=
o see what produces the best results. Empirically, we've found that larger =
learning rates often perform better with larger batch sizes.</li><li><code>=
compute_classification_metrics</code> - defaults to False. If True, for fin=
e-tuning for classification tasks, computes classification-specific metrics=
 (accuracy, F-1 score, etc) on the validation set at the end of every epoch=
.</li></ul><p>To configure these additional hyperparameters, pass them in v=
ia command line flags on the OpenAI CLI, for example:</p><div class=3D"code=
-sample"><div class=3D"code-sample-body code-sample-body-large"><button tab=
index=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-fl=
oat" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><sp=
an class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-wid=
th=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"=
round" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><r=
ect x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><pa=
th d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></s=
vg></span></span></button><pre class=3D"hljs syntax-highlighter dark code-s=
ample-pre"><code class=3D"language-bash" style=3D"white-space: pre;"><code>=
<span class=3D"react-syntax-highlighter-line-number">1
</span><span class=3D"react-syntax-highlighter-line-number">2
</span><span class=3D"react-syntax-highlighter-line-number">3
</span><span class=3D"react-syntax-highlighter-line-number">4
</span></code><span class=3D""><span class=3D"">openai api fine_tunes.creat=
e \
</span></span><span class=3D"">  -t file-JD89ePi5KMsB3Tayeli5ovfW \
</span><span class=3D"">  -m ada \
</span><span class=3D"">  --n_epochs 1</span></code></pre></div></div><div =
class=3D"anchor-heading-root"><a class=3D"anchor-heading-link" href=3D"http=
s://platform.openai.com/docs/guides/fine-tuning/continue-fine-tuning-from-a=
-fine-tuned-model"><h2 class=3D"anchor-heading" name=3D"continue-fine-tunin=
g-from-a-fine-tuned-model">Continue fine-tuning from a fine-tuned model<svg=
 stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=
=3D"0 0 20 20" class=3D"anchor-heading-icon" height=3D"15px" width=3D"15px"=
 xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" d=3D"M12.=
586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 =
4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5=
zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.=
656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" =
clip-rule=3D"evenodd"></path></svg></h2></a></div><p>If you have already fi=
ne-tuned a model for your task and now have additional training data that y=
ou would like to incorporate, you can continue fine-tuning from the model. =
This creates a model that has learned from all of the training data without=
 having to re-train from scratch.</p><p>To do this, pass in the fine-tuned =
model name when creating a new fine-tuning job (e.g. <code>-m curie:ft-&lt;=
org&gt;-&lt;date&gt;</code>). Other training parameters do not have to be c=
hanged, however if your new training data is much smaller than your previou=
s training data, you may find it useful to reduce <code>learning_rate_multi=
plier</code> by a factor of 2 to 4.</p><div class=3D"anchor-heading-root"><=
a class=3D"anchor-heading-link" href=3D"https://platform.openai.com/docs/gu=
ides/fine-tuning/weights-biases"><h1 class=3D"anchor-heading" name=3D"weigh=
ts-biases">Weights &amp; Biases<svg stroke=3D"currentColor" fill=3D"current=
Color" stroke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-ico=
n" height=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><pat=
h fill-rule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 0=
1-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.=
5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414=
 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.=
5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h1></=
a></div><p>You can sync your fine-tunes with <a href=3D"https://wandb.me/op=
enai-docs" target=3D"_blank" rel=3D"noopener noreferrer">Weights &amp; Bias=
es</a> to track experiments, models, and datasets.</p><p>To get started, yo=
u will need a <a href=3D"https://wandb.me/openai-docs" target=3D"_blank" re=
l=3D"noopener noreferrer">Weights &amp; Biases</a> account and a paid OpenA=
I plan. To make sure you are using the lastest version of <code>openai</cod=
e> and <code>wandb</code>, run:</p><div class=3D"code-sample code-sample-on=
eliner"><div class=3D"code-sample-body code-sample-body-large"><button tabi=
ndex=3D"0" class=3D"btn btn-sm btn-minimal btn-neutral code-sample-copy-flo=
at" type=3D"button" aria-label=3D"Copy"><span class=3D"btn-label-wrap"><spa=
n class=3D"btn-node"><svg stroke=3D"currentColor" fill=3D"none" stroke-widt=
h=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"r=
ound" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><re=
ct x=3D"9" y=3D"9" width=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><pat=
h d=3D"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></sv=
g></span></span></button><pre class=3D"hljs syntax-highlighter dark code-sa=
mple-pre"><code class=3D"language-bash" style=3D"white-space: pre;"><span c=
lass=3D""><span class=3D"">pip install --upgrade openai wandb</span></span>=
</code></pre></div></div><p>To sync your fine-tunes with Weights &amp; Bias=
es, run:</p><div class=3D"code-sample code-sample-oneliner"><div class=3D"c=
ode-sample-body code-sample-body-large"><button tabindex=3D"0" class=3D"btn=
 btn-sm btn-minimal btn-neutral code-sample-copy-float" type=3D"button" ari=
a-label=3D"Copy"><span class=3D"btn-label-wrap"><span class=3D"btn-node"><s=
vg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 =
24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" wi=
dth=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><rect x=3D"9" y=3D"9" widt=
h=3D"13" height=3D"13" rx=3D"2" ry=3D"2"></rect><path d=3D"M5 15H4a2 2 0 0 =
1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg></span></span></butto=
n><pre class=3D"hljs syntax-highlighter dark code-sample-pre"><code class=
=3D"language-bash" style=3D"white-space: pre;"><span class=3D""><span class=
=3D"">openai wandb sync</span></span></code></pre></div></div><p>You can re=
ad the <a href=3D"https://wandb.me/openai-docs" target=3D"_blank" rel=3D"no=
opener noreferrer">Weights &amp; Biases documentation</a> for more informat=
ion on this integration.</p><div class=3D"anchor-heading-root"><a class=3D"=
anchor-heading-link" href=3D"https://platform.openai.com/docs/guides/fine-t=
uning/example-notebooks"><h1 class=3D"anchor-heading" name=3D"example-noteb=
ooks">Example notebooks<svg stroke=3D"currentColor" fill=3D"currentColor" s=
troke-width=3D"0" viewBox=3D"0 0 20 20" class=3D"anchor-heading-icon" heigh=
t=3D"15px" width=3D"15px" xmlns=3D"http://www.w3.org/2000/svg"><path fill-r=
ule=3D"evenodd" d=3D"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 =
0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 =
1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 0=
0-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 =
2 0 11-2.828-2.828l3-3z" clip-rule=3D"evenodd"></path></svg></h1></a></div>=
<div class=3D"expn"><div class=3D"expn-title" role=3D"button" aria-expanded=
=3D"false" aria-controls=3D"expander-0"><div class=3D"expn-label">Classific=
ation</div><div class=3D"expn-icon"><svg stroke=3D"currentColor" fill=3D"cu=
rrentColor" stroke-width=3D"0" viewBox=3D"0 0 16 16" height=3D"1em" width=
=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" c=
lip-rule=3D"evenodd" d=3D"M7.976 10.072l4.357-4.357.62.618L8.284 11h-.618L3=
 6.333l.619-.618 4.357 4.357z"></path></svg></div></div><div class=3D"expn-=
content hidden" id=3D"expander-0"><a href=3D"https://github.com/openai/open=
ai-cookbook/blob/main/examples/Fine-tuned_classification.ipynb" target=3D"_=
blank" rel=3D"noreferrer" class=3D"tag-link">finetuning-classification.ipyn=
b<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor" class=3D"tag-link-icon" width=3D"1em" height=3D"1em"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.5859 5H11V3H17V9H15V6.4143=
L8.70718 12.7071L7.29297 11.2929L13.5859 5ZM9 5H5H3V7V15V17H5H13H15V15V11H1=
3V15H5V7H9V5Z"></path></svg></a><p>This notebook will demonstrate how to fi=
ne-tune a model that can classify whether a piece of input text is related =
to Baseball or Hockey. We will perform this task in four steps in the <a hr=
ef=3D"https://github.com/openai/openai-cookbook/blob/main/examples/Fine-tun=
ed_classification.ipynb" target=3D"_blank" rel=3D"noopener noreferrer">note=
book</a>:</p><ol><li><strong>Data exploration</strong> will give an overvie=
w of the data source and what an example looks like</li><li><strong>Data pr=
eparation</strong> will turn our data source into a jsonl file that can be =
used for fine-tuning</li><li><strong>Fine-tuning</strong> will kick off the=
 fine-tuning job and explain the resulting model's performance</li><li><str=
ong>Using the model</strong> will demonstrate making requests to the fine-t=
uned model to get predictions.</li></ol><div class=3D"expn-collapse"><butto=
n tabindex=3D"0" class=3D"btn btn-sm btn-filled btn-neutral" type=3D"button=
"><span class=3D"btn-label-wrap"><span class=3D"btn-label-inner">Collapse=
=E2=80=8D</span></span></button></div></div></div><div class=3D"expn"><div =
class=3D"expn-title" role=3D"button" aria-expanded=3D"false" aria-controls=
=3D"expander-1"><div class=3D"expn-label">Question answering</div><div clas=
s=3D"expn-icon"><svg stroke=3D"currentColor" fill=3D"currentColor" stroke-w=
idth=3D"0" viewBox=3D"0 0 16 16" height=3D"1em" width=3D"1em" xmlns=3D"http=
://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7.976 10.072l4.357-4.357.62.618L8.284 11h-.618L3 6.333l.619-.618 4.357=
 4.357z"></path></svg></div></div><div class=3D"expn-content hidden" id=3D"=
expander-1"><div class=3D"docs-tag-link-list"><a href=3D"https://github.com=
/openai/openai-cookbook/blob/main/examples/fine-tuned_qa/olympics-1-collect=
-data.ipynb" target=3D"_blank" rel=3D"noreferrer" class=3D"tag-link">olympi=
cs-1-collect-data.ipynb<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor" class=3D"tag-link-icon" width=3D"1em" hei=
ght=3D"1em"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.5859=
 5H11V3H17V9H15V6.4143L8.70718 12.7071L7.29297 11.2929L13.5859 5ZM9 5H5H3V7=
V15V17H5H13H15V15V11H13V15H5V7H9V5Z"></path></svg></a><a href=3D"https://gi=
thub.com/openai/openai-cookbook/blob/main/examples/fine-tuned_qa/olympics-2=
-create-qa.ipynb" target=3D"_blank" rel=3D"noreferrer" class=3D"tag-link">o=
lympics-2-create-qa.ipynb<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor" class=3D"tag-link-icon" width=3D"1em" =
height=3D"1em"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.5=
859 5H11V3H17V9H15V6.4143L8.70718 12.7071L7.29297 11.2929L13.5859 5ZM9 5H5H=
3V7V15V17H5H13H15V15V11H13V15H5V7H9V5Z"></path></svg></a><a href=3D"https:/=
/github.com/openai/openai-cookbook/blob/main/examples/fine-tuned_qa/olympic=
s-3-train-qa.ipynb" target=3D"_blank" rel=3D"noreferrer" class=3D"tag-link"=
>olympics-3-train-qa.ipynb<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor" class=3D"tag-link-icon" width=3D"1em" =
height=3D"1em"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.5=
859 5H11V3H17V9H15V6.4143L8.70718 12.7071L7.29297 11.2929L13.5859 5ZM9 5H5H=
3V7V15V17H5H13H15V15V11H13V15H5V7H9V5Z"></path></svg></a></div><p>The idea =
of this project is to create a question answering model, based on a few par=
agraphs of provided text. Base GPT-3 models do a good job at answering ques=
tions when the answer is contained within the paragraph, however if the ans=
wer isn't contained, the base models tend to try their best to answer anywa=
y, often leading to confabulated answers.</p><p>To create a model which ans=
wers questions only if there is sufficient context for doing so, we first c=
reate a dataset of questions and answers based on paragraphs of text. In or=
der to train the model to answer only when the answer is present, we also a=
dd adversarial examples, where the question doesn't match the context. In t=
hose cases, we ask the model to output "No sufficient context for answering=
 the question".</p><p>We will perform this task in three notebooks:</p><ol>=
<li><a href=3D"https://github.com/openai/openai-cookbook/blob/main/examples=
/fine-tuned_qa/olympics-1-collect-data.ipynb" target=3D"_blank" rel=3D"noop=
ener noreferrer">The first notebook</a> focuses on collecting recent data, =
which GPT-3 didn't see during it's pre-training. We picked the topic of Oly=
mpic Games 2020 (which actually took place in the summer of 2021), and down=
loaded 713 unique pages. We organized the dataset by individual sections, w=
hich will serve as context for asking and answering the questions.</li><li>=
<a href=3D"https://github.com/openai/openai-cookbook/blob/main/examples/fin=
e-tuned_qa/olympics-2-create-qa.ipynb" target=3D"_blank" rel=3D"noopener no=
referrer">The second notebook</a> will utilize Davinci-instruct to ask a fe=
w questions based on a Wikipedia section, as well as answer those questions=
, based on that section.</li><li><a href=3D"https://github.com/openai/opena=
i-cookbook/blob/main/examples/fine-tuned_qa/olympics-3-train-qa.ipynb" targ=
et=3D"_blank" rel=3D"noopener noreferrer">The third notebook</a> will utili=
ze the dataset of context, question and answer pairs to additionally create=
 adversarial questions and context pairs, where the question was not genera=
ted on that context. In those cases the model will be prompted to answer "N=
o sufficient context for answering the question". We will also train a disc=
riminator model, which predicts whether the question can be answered based =
on the context or not.</li></ol><div class=3D"expn-collapse"><button tabind=
ex=3D"0" class=3D"btn btn-sm btn-filled btn-neutral" type=3D"button"><span =
class=3D"btn-label-wrap"><span class=3D"btn-label-inner">Collapse=E2=80=8D<=
/span></span></button></div></div></div></div><div class=3D"docs-footer"><d=
iv class=3D"docs-feedback">Was this page useful?<button tabindex=3D"0" clas=
s=3D"btn btn-sm btn-minimal btn-primary docs-feedback-btn" type=3D"button" =
aria-label=3D"Helpful" aria-haspopup=3D"true" aria-expanded=3D"false"><span=
 class=3D"btn-label-wrap"><span class=3D"btn-label-inner"><svg stroke=3D"cu=
rrentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" width=3D"1em" xml=
ns=3D"http://www.w3.org/2000/svg"><path d=3D"M14 9V5a3 3 0 0 0-3-3l-4 9v11h=
11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0=
 0 1 2-2h3"></path></svg>=E2=80=8D</span></span></button><button tabindex=
=3D"0" class=3D"btn btn-sm btn-minimal btn-negative docs-feedback-btn" type=
=3D"button" aria-label=3D"Thumbs down" aria-haspopup=3D"true" aria-expanded=
=3D"false"><span class=3D"btn-label-wrap"><span class=3D"btn-label-inner"><=
svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0=
 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" height=3D"1em" w=
idth=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M10 15v4a3 3 0=
 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31=
 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path></svg>=E2=80=8D</span>=
</span></button></div></div></div></div></div></div><div class=3D"layers-ro=
ot"></div></div><div portal-container=3D""><div><span class=3D"css-1qgklur"=
></span></div></div><iframe id=3D"intercom-frame" style=3D"position: absolu=
te !important; opacity: 0 !important; width: 1px !important; height: 1px !i=
mportant; top: 0 !important; left: 0 !important; border: none !important; d=
isplay: block !important; z-index: -1 !important; pointer-events: none;" ar=
ia-hidden=3D"true" tabindex=3D"-1" title=3D"Intercom"></iframe><div class=
=3D"intercom-lightweight-app"></div></body><div id=3D"photoShowViewer" clas=
s=3D"sb_BingCA photoShow">
        <div class=3D"photoshow-viewer-shadow"></div>
        <div class=3D"photoshow-img-wrapper">
          <img>
          <div class=3D"photoshow-view-mode-switch-tip">a</div>
        </div>
        <i class=3D"photoshow-img-size"></i>
      </div></html>
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-91170676-ed2d-4663-a127-d427902175eb@mhtml.blink

@charset "utf-8";

.css-1qgklur { max-width: 560px; margin: 0px auto; top: 0px; left: 0px; rig=
ht: 0px; position: fixed; z-index: 200; pointer-events: none; }
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b1802870-278e-4708-9366-8792eed071b6@mhtml.blink

@charset "utf-8";

::before, ::after { pointer-events: none !important; }
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-510f354b-06ca-4622-a86a-ef7fdd7a0cc0@mhtml.blink

@charset "utf-8";

@keyframes intercom-lightweight-app-launcher {=20
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes intercom-lightweight-app-gradient {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes intercom-lightweight-app-messenger {=20
  0% { opacity: 0; transform: scale(0); }
  40% { opacity: 1; }
  100% { transform: scale(1); }
}

.intercom-lightweight-app { position: fixed; z-index: 2147483001; width: 0p=
x; height: 0px; font-family: intercom-font, "Helvetica Neue", "Apple Color =
Emoji", Helvetica, Arial, sans-serif; }

.intercom-lightweight-app-gradient { position: fixed; z-index: 2147483002; =
width: 500px; height: 500px; bottom: 0px; right: 0px; pointer-events: none;=
 background: radial-gradient(at right bottom, rgba(29, 39, 54, 0.16) 0%, rg=
ba(29, 39, 54, 0) 72%); animation: 200ms ease-out 0s 1 normal none running =
intercom-lightweight-app-gradient; }

.intercom-lightweight-app-launcher { position: fixed; z-index: 2147483003; =
border: none; bottom: 20px; right: 20px; max-width: 48px; width: 48px; max-=
height: 48px; height: 48px; border-radius: 50%; background: rgb(32, 33, 35)=
; cursor: pointer; box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0,=
 0, 0, 0.16) 0px 2px 32px 0px; transition: transform 167ms cubic-bezier(0.3=
3, 0, 0, 1) 0s; box-sizing: content-box; padding: 0px !important; margin: 0=
px !important; }

.intercom-lightweight-app-launcher:hover { transition: transform 250ms cubi=
c-bezier(0.33, 0, 0, 1) 0s; transform: scale(1.1); }

.intercom-lightweight-app-launcher:active { transform: scale(0.85); transit=
ion: transform 134ms cubic-bezier(0.45, 0, 0.2, 1) 0s; }

.intercom-lightweight-app-launcher:focus { outline: none; }

.intercom-lightweight-app-launcher-icon { display: flex; align-items: cente=
r; justify-content: center; position: absolute; top: 0px; left: 0px; width:=
 48px; height: 48px; transition: transform 100ms linear 0s, opacity 80ms li=
near 0s; }

.intercom-lightweight-app-launcher-icon-open { opacity: 1; transform: rotat=
e(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-open svg { width: 24px; height: 24p=
x; }

.intercom-lightweight-app-launcher-icon-open svg path { fill: rgb(255, 255,=
 255); }

.intercom-lightweight-app-launcher-icon-self-serve { opacity: 1; transform:=
 rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-self-serve svg { height: 44px; }

.intercom-lightweight-app-launcher-icon-self-serve svg path { fill: rgb(255=
, 255, 255); }

.intercom-lightweight-app-launcher-custom-icon-open { max-height: 24px; max=
-width: 24px; opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-minimize { opacity: 0; transform: r=
otate(-60deg) scale(0); }

.intercom-lightweight-app-launcher-icon-minimize svg path { fill: rgb(255, =
255, 255); }

.intercom-lightweight-app-messenger { position: fixed; z-index: 2147483003;=
 overflow: hidden; background-color: white; animation: 250ms cubic-bezier(0=
, 1, 1, 1) 0s 1 normal none running intercom-lightweight-app-messenger; tra=
nsform-origin: right bottom; width: 400px; height: calc(100% - 40px); max-h=
eight: 704px; min-height: 250px; right: 20px; bottom: 20px; box-shadow: rgb=
a(0, 0, 0, 0.16) 0px 5px 40px; border-radius: 16px; }

.intercom-lightweight-app-messenger-header { height: 64px; border-bottom: n=
one; background: rgb(32, 33, 35); }

.intercom-lightweight-app-messenger-footer { position: absolute; bottom: 0p=
x; width: 100%; height: 80px; background: rgb(255, 255, 255); font-size: 14=
px; line-height: 21px; border-top: 1px solid rgba(0, 0, 0, 0.05); box-shado=
w: rgba(0, 0, 0, 0.05) 0px 0px 25px; }

@media print {
  .intercom-lightweight-app { display: none; }
}
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&display=swap

@charset "utf-8";

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSV0mf0h.woff2") =
format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF=
, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSx0mf0h.woff2") =
format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2=
116; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSt0mf0h.woff2") =
format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSd0mf0h.woff2") =
format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169,=
 U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA=
0-1EF9, U+20AB; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSZ0mf0h.woff2") =
format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F=
, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A72=
0-A7FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSh0mQ.woff2") fo=
rmat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U=
+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+21=
91, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSV0mf0h.woff2") =
format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF=
, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSx0mf0h.woff2") =
format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2=
116; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSt0mf0h.woff2") =
format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSd0mf0h.woff2") =
format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169,=
 U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA=
0-1EF9, U+20AB; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSZ0mf0h.woff2") =
format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F=
, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A72=
0-A7FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
2/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSh0mQ.woff2") fo=
rmat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U=
+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+21=
91, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://openaiapi-site.azureedge.net/public-assets/d/17bead46ad/static/css/main.f308da0b.css

@charset "utf-8";

.alert-root { background: rgb(255, 255, 255); border-radius: 3px; color: rg=
b(255, 255, 255); display: inline-flex; flex-direction: row; padding: 12px =
16px 10px; }

.alert-full { display: flex; }

.alert-info { background-color: var(--gray-800); }

.alert-neutral { background-color: var(--gray-50); border: 1px solid var(--=
gray-100); color: var(--gray-900); }

.alert-neutral .alert-icon { color: var(--gray-500); }

.alert-success { background-color: rgb(71, 184, 129); }

.alert-warning { background-color: rgb(217, 130, 43); }

.alert-danger { background-color: rgb(239, 65, 70); }

.alert-icon { flex: 0 0 auto; margin-right: 10px; }

.alert-body { display: flex; flex: 1 1 auto; flex-direction: column; font-s=
ize: 15px; font-weight: 500; justify-content: center; }

.alert-title { font-weight: 500; line-height: 1.4; }

.alert-close { flex: 0 0 auto; margin-left: 10px; }

.alert-close button { background: transparent; border: none; color: rgb(255=
, 255, 255); cursor: pointer; font-size: 20px; font-weight: 400; line-heigh=
t: 1; outline: none; padding: 4px; text-align: center; transition: opacity =
0.3s ease 0s; width: 100%; }

.alert-close button:hover { opacity: 0.8; }

.comparison-window { margin-bottom: 24px; }

.comparison-window .comparison { display: flex; justify-content: space-betw=
een; }

.comparison-window .comparison > div { display: flex; flex-flow: column; wi=
dth: 100%; }

.comparison-window .comparison > div:first-child { margin-right: 24px; }

.comparison-window .comparison > div blockquote { flex: 1 1 0%; }

.comparison-window .comparison-label { color: var(--gray-900); font-weight:=
 700; margin-bottom: 4px; }

.comparison-window .comparison-label p { margin: 0px; }

@media (max-width: 600px) {
  .comparison-window .comparison { flex-flow: column; }
}

.example-chat-container { background-color: var(--gray-50); border-radius: =
4px; margin: 24px 0px; overflow: hidden; }

.example-chat-messages { padding: 10px 0px; }

.example-chat-message { display: grid; grid-template-columns: 100px 1fr; pa=
dding: 8px 16px; white-space: pre-wrap; }

.example-chat-role { padding-top: 5px; }

.example-chat-link { background-color: var(--gray-100); display: block; fon=
t-size: 14px; line-height: 20px; padding: 8px 16px; }

.example-chat-link, .example-chat-link:visited { color: var(--gray-800); }

.example-chat-link:hover { color: var(--gray-700); }

.example-chat-link svg { margin: 0px 0px 2px 3px; vertical-align: middle; }

.example-chat-code { margin: 0px; }

.syntax-highlighter { background: var(--sh-bg); color: rgba(var(--sh-fg),1)=
; overflow-x: auto; }

.syntax-highlighter.dark { --sh-fg: 255,255,255; --sh-bg: var(--gray-900); =
}

.syntax-highlighter.light { --sh-fg: 25,25,39; --sh-bg: var(--gray-50); }

.syntax-highlighter > code { font-family: var(--monospace); }

.syntax-highlighter > code > code { float: left; font-family: var(--monospa=
ce); padding-right: 16px; }

.syntax-highlighter .react-syntax-highlighter-line-number { color: var(--gr=
ay-600); user-select: none; }

.hljs-comment { color: rgba(var(--sh-fg),.5); }

.hljs-meta { color: rgba(var(--sh-fg),.6); }

.hljs-built_in, .hljs-class .hljs-title { color: rgb(233, 149, 12); }

.hljs-doctag, .hljs-formula, .hljs-keyword, .hljs-literal { color: rgb(46, =
149, 211); }

.hljs-addition, .hljs-attribute, .hljs-meta-string, .hljs-regexp, .hljs-str=
ing { color: rgb(0, 166, 125); }

.hljs-attr, .hljs-number, .hljs-selector-attr, .hljs-selector-class, .hljs-=
selector-pseudo, .hljs-template-variable, .hljs-type, .hljs-variable { colo=
r: rgb(223, 48, 121); }

.hljs-bullet, .hljs-link, .hljs-selector-id, .hljs-symbol, .hljs-title { co=
lor: rgb(242, 44, 61); }

.example-content { background-color: var(--gray-50); border-radius: 4px; ma=
rgin: 24px 0px; overflow: hidden; }

.example-content-value { color: var(--gray-800); font-family: var(--monospa=
ce); font-size: 13px; line-height: 20px; padding: 12px 16px; white-space: p=
re-wrap; }

.example-content-large .example-content-value { font-size: 15px; line-heigh=
t: 24px; }

.example-content-link { background-color: var(--gray-100); display: block; =
font-size: 14px; line-height: 20px; padding: 8px 16px; }

.example-content-link, .example-content-link:visited { color: var(--gray-80=
0); }

.example-content-link:hover { color: var(--gray-700); }

.example-content-link svg { margin: 0px 0px 2px 3px; vertical-align: middle=
; }

.example-content-code { margin: 0px; }

@-webkit-keyframes spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

@keyframes spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.spinner { align-items: center; display: flex; }

.spinner-spin { animation: 1.2s linear 0s infinite normal none running spin=
; }

.spinner-color-default { color: rgba(0, 0, 0, 0.4); }

.btn { border: none; border-radius: 3px; box-sizing: border-box; cursor: po=
inter; display: inline-flex; font-weight: 400; justify-content: center; lin=
e-height: 1.4; position: relative; transition: box-shadow 0.3s ease 0s, bac=
kground-color 0.3s ease 0s, color 0.3s ease 0s; user-select: none; }

.btn, .btn:hover { text-decoration: none; }

.btn:focus { outline: none; }

.btn:not(.btn-full) + .btn { margin-left: 8px; }

.btn-small-caps { font-size: 12px; font-weight: 700; letter-spacing: 0.15em=
; text-transform: uppercase; }

.btn-sm { font-size: 14px; line-height: 20px; padding: 6px 12px; }

.btn-sm.btn-small-caps { font-size: 12px; }

.btn-md { font-size: 17px; line-height: 24px; padding: 6px 10px; }

.btn-md.btn-small-caps { font-size: 13px; }

.btn-lg { font-size: 16px; line-height: 24px; padding: 13px 14px 11px; }

.btn-lg.btn-small-caps { font-size: 14px; }

.btn-filled, .btn-filled:visited { color: rgb(255, 255, 255); }

.btn-outlined { background: transparent; border-style: solid; border-width:=
 1px; }

.btn-minimal { background-color: transparent; }

.btn-primary.btn-filled { background-color: rgb(16, 163, 127); }

.btn-primary.btn-filled:hover { background-color: rgb(26, 127, 100); }

.btn-primary.btn-filled:active { background-color: rgb(27, 93, 74); }

.btn-primary.btn-filled:focus { box-shadow: rgba(16, 163, 127, 0.3) 0px 0px=
 0px 3px; }

.btn-primary.btn-filled:focus-visible { box-shadow: rgb(255, 255, 255) 0px =
0px 0px 2px, rgb(16, 163, 127) 0px 0px 0px 4px; }

.btn-primary.btn-outlined { border-color: rgb(16, 163, 127); color: rgb(16,=
 163, 127); }

.btn-primary.btn-outlined:hover { background-color: rgba(16, 163, 127, 0.2)=
; }

.btn-primary.btn-outlined:active { background-color: rgba(16, 163, 127, 0.3=
); }

.btn-primary.btn-outlined:focus { box-shadow: rgba(16, 163, 127, 0.3) 0px 0=
px 0px 3px; }

.btn-primary.btn-minimal { color: rgb(16, 163, 127); }

.btn-primary.btn-minimal:hover { background-color: rgba(16, 163, 127, 0.2);=
 }

.btn-primary.btn-minimal:active { background-color: rgba(16, 163, 127, 0.3)=
; }

.btn-primary.btn-minimal:focus { box-shadow: rgba(16, 163, 127, 0.3) 0px 0p=
x 0px 3px; }

.btn-secondary.btn-filled { background-color: rgb(84, 54, 218); }

.btn-secondary.btn-filled:hover { background-color: rgb(72, 45, 168); }

.btn-secondary.btn-filled:active { background-color: rgb(59, 36, 121); }

.btn-secondary.btn-filled:focus { box-shadow: rgba(84, 54, 218, 0.3) 0px 0p=
x 0px 3px; }

.btn-secondary.btn-outlined { border-color: rgb(84, 54, 218); color: rgb(84=
, 54, 218); }

.btn-secondary.btn-outlined:hover { background-color: rgba(84, 54, 218, 0.2=
); }

.btn-secondary.btn-outlined:active { background-color: rgba(84, 54, 218, 0.=
3); }

.btn-secondary.btn-outlined:focus { box-shadow: rgba(84, 54, 218, 0.3) 0px =
0px 0px 3px; }

.btn-secondary.btn-minimal { color: rgb(84, 54, 218); }

.btn-secondary.btn-minimal:hover { background-color: rgba(84, 54, 218, 0.2)=
; }

.btn-secondary.btn-minimal:active { background-color: rgba(84, 54, 218, 0.3=
); }

.btn-secondary.btn-minimal:focus { box-shadow: rgba(84, 54, 218, 0.3) 0px 0=
px 0px 3px; }

.btn-neutral.btn-filled { background-color: rgb(236, 236, 241); color: rgb(=
53, 55, 64); }

.btn-neutral.btn-filled:hover { background-color: rgb(217, 217, 227); }

.btn-neutral.btn-filled:active { background-color: rgb(197, 197, 210); }

.btn-neutral.btn-filled:focus-visible { box-shadow: rgb(255, 255, 255) 0px =
0px 0px 2px, rgb(16, 163, 127) 0px 0px 0px 4px; }

.btn-neutral.btn-outlined { border-color: rgb(217, 217, 227); color: rgb(53=
, 55, 64); }

.btn-neutral.btn-outlined:hover { background-color: rgba(141, 141, 160, 0.1=
); }

.btn-neutral.btn-outlined:active { background-color: rgba(141, 141, 160, 0.=
2); }

.btn-neutral.btn-minimal { color: rgb(53, 55, 64); }

.btn-neutral.btn-minimal:hover { background-color: rgba(141, 141, 160, 0.1)=
; }

.btn-neutral.btn-minimal:active { background-color: rgba(141, 141, 160, 0.2=
); }

.btn-negative.btn-filled { background-color: rgb(239, 65, 70); }

.btn-negative.btn-filled:hover { background-color: rgb(194, 53, 57); }

.btn-negative.btn-filled:active { background-color: rgb(157, 43, 46); }

.btn-negative.btn-filled:focus { box-shadow: rgba(239, 65, 70, 0.3) 0px 0px=
 0px 3px; }

.btn-negative.btn-outlined { border-color: rgb(239, 65, 70); color: rgb(239=
, 65, 70); }

.btn-negative.btn-outlined:hover { background-color: rgba(239, 65, 70, 0.2)=
; }

.btn-negative.btn-outlined:active { background-color: rgba(239, 65, 70, 0.3=
); }

.btn-negative.btn-outlined:focus { box-shadow: rgba(239, 65, 70, 0.3) 0px 0=
px 0px 3px; }

.btn-negative.btn-minimal { color: rgb(239, 65, 70); }

.btn-negative.btn-minimal:hover { background-color: rgba(239, 65, 70, 0.2);=
 }

.btn-negative.btn-minimal:active { background-color: rgba(239, 65, 70, 0.3)=
; }

.btn-negative.btn-minimal:focus { box-shadow: rgba(239, 65, 70, 0.3) 0px 0p=
x 0px 3px; }

.btn-none { color: unset; line-height: unset; padding: 0px; }

.btn-none.btn-minimal { background-color: unset; }

.btn-disabled { cursor: default; pointer-events: none; }

.btn.btn-disabled-style { background-color: rgb(247, 247, 248); border-colo=
r: transparent; color: rgb(172, 172, 190); }

.btn.btn-disabled-style.btn-minimal { background-color: transparent; }

.btn-loading { opacity: 0.7; }

.btn-full, .btn-label-wrap { display: flex; width: 100%; }

.btn-label-wrap { align-items: center; justify-content: center; opacity: 1;=
 }

.btn-label-wrap-loading { opacity: 0; }

.btn-label-inner { align-items: center; display: flex; justify-content: cen=
ter; }

.btn-label-inner:not(:first-child) { margin-left: 0.4em; }

.btn-label-inner:not(:last-child) { margin-right: 0.4em; }

.btn-spinner { align-items: center; inset: 0px; display: flex; justify-cont=
ent: center; position: absolute; }

.btn-node { display: flex; line-height: 1; }

.btn-node > svg { margin-top: -1px; }

.layers-root { left: 0px; position: absolute; right: 0px; top: 0px; z-index=
: 2; }

.modal-root { inset: 0px; overflow: auto; pointer-events: none; position: f=
ixed; }

.modal-root.modal-is-open { pointer-events: auto; }

.modal-root.modal-is-open .modal-backdrop { opacity: 1; }

.modal-root.modal-is-open .modal-dialog { opacity: 1; pointer-events: all; =
transform: translateY(0px); }

.modal-backdrop { -webkit-tap-highlight-color: rgba(0, 0, 0, 0); background=
-color: rgba(0, 0, 0, 0.5); inset: 0px; opacity: 0; position: fixed; transi=
tion: opacity 0.4s cubic-bezier(0.2, 0.8, 0.4, 1) 0s; }

.modal-backdrop, .modal-dialog-container { user-select: none; }

.modal-dialog-container { align-items: center; display: flex; justify-conte=
nt: center; min-height: 100%; outline: none; pointer-events: none; position=
: absolute; width: 100%; }

.modal-dialog { background: rgb(255, 255, 255); border-radius: 5px; margin:=
 20px 12px; max-width: 100%; opacity: 0; position: relative; transform: tra=
nslateY(20px); transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.4, 1) 0s=
, opacity 0.4s 0s, -webkit-transform 0.4s 0s; user-select: text; }

.modal-dialog:focus { outline: none; }

.modal-dialog.modal-size-small { width: 400px; }

.modal-dialog.modal-size-medium { width: 520px; }

.modal-dialog.modal-size-large { width: 640px; }

.modal-dialog.modal-size-full { width: 100%; }

.modal-dialog.modal-size-auto { width: auto; }

@media (max-width: 600px) {
  .modal-dialog { margin: 20px 8px; }
}

.modal-close { align-items: center; display: flex; justify-content: center;=
 line-height: 1; position: absolute; right: 14px; top: 18px; }

.modal-header { margin: 20px 24px 16px; }

.modal-closeable .modal-header { margin-right: 40px; }

.modal-body { margin: 16px 24px 24px; }

.modal-body:first-child { margin-top: 20px; }

.modal-footer { align-items: center; display: flex; justify-content: flex-e=
nd; margin: 32px 24px 24px; }

.modal-footer.modal-footer-shrink-margin { margin-top: 24px; }

.auth-modal .modal-body { margin: 40px 32px; }

.auth-modal-body { align-items: center; display: flex; flex-direction: colu=
mn; }

.auth-modal-body h3 { margin-bottom: 4px; margin-top: 24px; }

.auth-modal-body .btn { font-size: 15px; line-height: 22px; }

.auth-modal-signup-button { margin-bottom: 12px; margin-top: 32px; }

.popover-body { background-color: rgb(255, 255, 255); border: 1px solid rgb=
(237, 238, 241); border-radius: 4px; box-shadow: rgba(5, 5, 5, 0.08) 0px 2p=
x 20px; left: 0px; position: absolute; top: 0px; transition-property: opaci=
ty, transform, -webkit-transform; will-change: transform; }

.popover-noninteractive { pointer-events: none; }

.popover-arrow { background: rgb(255, 255, 255); box-shadow: rgba(5, 5, 5, =
0.08) 0px 2px 20px; opacity: 0; position: absolute; transform: rotate(45deg=
); }

.popover-arrow.visible { opacity: 1; }

.popover-inner { background: inherit; border-radius: 4px; position: relativ=
e; }

.popover-padding { padding: 12px; }

.tooltip { font-size: 14px; line-height: 20px; max-width: 300px; text-align=
: left; }

.tooltip.tooltip-normal { color: rgb(86, 88, 105); }

.tooltip.tooltip-normal .popover-inner { padding: 16px 20px; }

.tooltip.tooltip-compact { background: rgb(64, 68, 82); border: none; color=
: rgb(255, 255, 255); }

.tooltip.tooltip-compact .popover-inner { padding: 4px 8px; }

.rc-slider { border-radius: 6px; height: 14px; padding: 5px 0px; position: =
relative; touch-action: none; width: 100%; }

.rc-slider, .rc-slider * { -webkit-tap-highlight-color: rgba(0, 0, 0, 0); b=
ox-sizing: border-box; }

.rc-slider-rail { background-color: rgb(233, 233, 233); width: 100%; }

.rc-slider-rail, .rc-slider-track { border-radius: 6px; height: 4px; positi=
on: absolute; }

.rc-slider-track { background-color: rgb(171, 226, 251); left: 0px; }

.rc-slider-handle { background-color: rgb(255, 255, 255); border: 2px solid=
 rgb(150, 219, 250); border-radius: 50%; cursor: grab; height: 14px; margin=
-top: -5px; position: absolute; touch-action: pan-x; width: 14px; }

.rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragg=
ing { border-color: rgb(87, 197, 247); box-shadow: rgb(150, 219, 250) 0px 0=
px 0px 5px; }

.rc-slider-handle:focus { outline: none; }

.rc-slider-handle-click-focused:focus { border-color: rgb(150, 219, 250); b=
ox-shadow: unset; }

.rc-slider-handle:hover { border-color: rgb(87, 197, 247); }

.rc-slider-handle:active { border-color: rgb(87, 197, 247); box-shadow: rgb=
(87, 197, 247) 0px 0px 5px; cursor: grabbing; }

.rc-slider-mark { font-size: 12px; left: 0px; position: absolute; top: 18px=
; width: 100%; }

.rc-slider-mark-text { color: rgb(153, 153, 153); cursor: pointer; display:=
 inline-block; position: absolute; text-align: center; vertical-align: midd=
le; }

.rc-slider-mark-text-active { color: rgb(102, 102, 102); }

.rc-slider-step { background: transparent; height: 4px; position: absolute;=
 width: 100%; }

.rc-slider-dot { background-color: rgb(255, 255, 255); border: 2px solid rg=
b(233, 233, 233); border-radius: 50%; bottom: -2px; cursor: pointer; height=
: 8px; margin-left: -4px; position: absolute; vertical-align: middle; width=
: 8px; }

.rc-slider-dot-active { border-color: rgb(150, 219, 250); }

.rc-slider-dot-reverse { margin-right: -4px; }

.rc-slider-disabled { background-color: rgb(233, 233, 233); }

.rc-slider-disabled .rc-slider-track { background-color: rgb(204, 204, 204)=
; }

.rc-slider-disabled .rc-slider-dot, .rc-slider-disabled .rc-slider-handle {=
 background-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204); bo=
x-shadow: none; cursor: not-allowed; }

.rc-slider-disabled .rc-slider-dot, .rc-slider-disabled .rc-slider-mark-tex=
t { cursor: not-allowed !important; }

.rc-slider-vertical { height: 100%; padding: 0px 5px; width: 14px; }

.rc-slider-vertical .rc-slider-rail { height: 100%; width: 4px; }

.rc-slider-vertical .rc-slider-track { bottom: 0px; left: 5px; width: 4px; =
}

.rc-slider-vertical .rc-slider-handle { margin-left: -5px; touch-action: pa=
n-y; }

.rc-slider-vertical .rc-slider-mark { height: 100%; left: 18px; top: 0px; }

.rc-slider-vertical .rc-slider-step { height: 100%; width: 4px; }

.rc-slider-vertical .rc-slider-dot { left: 2px; margin-bottom: -4px; }

.rc-slider-vertical .rc-slider-dot:first-child, .rc-slider-vertical .rc-sli=
der-dot:last-child { margin-bottom: -4px; }

.rc-slider-tooltip-zoom-down-appear, .rc-slider-tooltip-zoom-down-enter, .r=
c-slider-tooltip-zoom-down-leave { animation-duration: 0.3s; animation-fill=
-mode: both; animation-play-state: paused; display: block !important; }

.rc-slider-tooltip-zoom-down-appear.rc-slider-tooltip-zoom-down-appear-acti=
ve, .rc-slider-tooltip-zoom-down-enter.rc-slider-tooltip-zoom-down-enter-ac=
tive { animation-name: rcSliderTooltipZoomDownIn; animation-play-state: run=
ning; }

.rc-slider-tooltip-zoom-down-leave.rc-slider-tooltip-zoom-down-leave-active=
 { animation-name: rcSliderTooltipZoomDownOut; animation-play-state: runnin=
g; }

.rc-slider-tooltip-zoom-down-appear, .rc-slider-tooltip-zoom-down-enter { a=
nimation-timing-function: cubic-bezier(0.23, 1, 0.32, 1); transform: scale(=
0); }

.rc-slider-tooltip-zoom-down-leave { animation-timing-function: cubic-bezie=
r(0.755, 0.05, 0.855, 0.06); }

@-webkit-keyframes rcSliderTooltipZoomDownIn {=20
  0% { opacity: 0; transform: scale(0); transform-origin: 50% 100%; }
  100% { transform: scale(1); transform-origin: 50% 100%; }
}

@keyframes rcSliderTooltipZoomDownIn {=20
  0% { opacity: 0; transform: scale(0); transform-origin: 50% 100%; }
  100% { transform: scale(1); transform-origin: 50% 100%; }
}

@-webkit-keyframes rcSliderTooltipZoomDownOut {=20
  0% { transform: scale(1); transform-origin: 50% 100%; }
  100% { opacity: 0; transform: scale(0); transform-origin: 50% 100%; }
}

@keyframes rcSliderTooltipZoomDownOut {=20
  0% { transform: scale(1); transform-origin: 50% 100%; }
  100% { opacity: 0; transform: scale(0); transform-origin: 50% 100%; }
}

.rc-slider-tooltip { left: -9999px; position: absolute; top: -9999px; visib=
ility: visible; }

.rc-slider-tooltip, .rc-slider-tooltip * { -webkit-tap-highlight-color: rgb=
a(0, 0, 0, 0); box-sizing: border-box; }

.rc-slider-tooltip-hidden { display: none; }

.rc-slider-tooltip-placement-top { padding: 4px 0px 8px; }

.rc-slider-tooltip-inner { background-color: rgb(108, 108, 108); border-rad=
ius: 6px; box-shadow: rgb(217, 217, 217) 0px 0px 4px; color: rgb(255, 255, =
255); font-size: 12px; height: 24px; line-height: 1; min-width: 24px; paddi=
ng: 6px 2px; text-align: center; text-decoration: none; }

.rc-slider-tooltip-arrow { border-color: transparent; border-style: solid; =
height: 0px; position: absolute; width: 0px; }

.rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow { border-top-colo=
r: rgb(108, 108, 108); border-width: 4px 4px 0px; bottom: 4px; left: 50%; m=
argin-left: -4px; }

.rc-tooltip.rc-tooltip-zoom-appear, .rc-tooltip.rc-tooltip-zoom-enter { opa=
city: 0; }

.rc-tooltip.rc-tooltip-zoom-enter, .rc-tooltip.rc-tooltip-zoom-leave { disp=
lay: block; }

.rc-tooltip-zoom-appear, .rc-tooltip-zoom-enter { animation-duration: 0.3s;=
 animation-fill-mode: both; animation-play-state: paused; animation-timing-=
function: cubic-bezier(0.18, 0.89, 0.32, 1.28); opacity: 0; }

.rc-tooltip-zoom-leave { animation-duration: 0.3s; animation-fill-mode: bot=
h; animation-play-state: paused; animation-timing-function: cubic-bezier(0.=
6, -0.3, 0.74, 0.05); }

.rc-tooltip-zoom-appear.rc-tooltip-zoom-appear-active, .rc-tooltip-zoom-ent=
er.rc-tooltip-zoom-enter-active { animation-name: rcToolTipZoomIn; animatio=
n-play-state: running; }

.rc-tooltip-zoom-leave.rc-tooltip-zoom-leave-active { animation-name: rcToo=
lTipZoomOut; animation-play-state: running; }

@-webkit-keyframes rcToolTipZoomIn {=20
  0% { opacity: 0; transform: scale(0); transform-origin: 50% 50%; }
  100% { opacity: 1; transform: scale(1); transform-origin: 50% 50%; }
}

@keyframes rcToolTipZoomIn {=20
  0% { opacity: 0; transform: scale(0); transform-origin: 50% 50%; }
  100% { opacity: 1; transform: scale(1); transform-origin: 50% 50%; }
}

@-webkit-keyframes rcToolTipZoomOut {=20
  0% { opacity: 1; transform: scale(1); transform-origin: 50% 50%; }
  100% { opacity: 0; transform: scale(0); transform-origin: 50% 50%; }
}

@keyframes rcToolTipZoomOut {=20
  0% { opacity: 1; transform: scale(1); transform-origin: 50% 50%; }
  100% { opacity: 0; transform: scale(0); transform-origin: 50% 50%; }
}

.rc-tooltip { display: block; font-size: 12px; line-height: 1.5; opacity: 0=
.9; position: absolute; visibility: visible; z-index: 1070; }

.rc-tooltip-hidden { display: none; }

.rc-tooltip-placement-top, .rc-tooltip-placement-topLeft, .rc-tooltip-place=
ment-topRight { padding: 5px 0px 9px; }

.rc-tooltip-placement-right, .rc-tooltip-placement-rightBottom, .rc-tooltip=
-placement-rightTop { padding: 0px 5px 0px 9px; }

.rc-tooltip-placement-bottom, .rc-tooltip-placement-bottomLeft, .rc-tooltip=
-placement-bottomRight { padding: 9px 0px 5px; }

.rc-tooltip-placement-left, .rc-tooltip-placement-leftBottom, .rc-tooltip-p=
lacement-leftTop { padding: 0px 9px 0px 5px; }

.rc-tooltip-inner { background-color: rgb(55, 55, 55); border-radius: 6px; =
box-shadow: rgba(0, 0, 0, 0.17) 0px 0px 4px; color: rgb(255, 255, 255); min=
-height: 34px; padding: 8px 10px; text-align: left; text-decoration: none; =
}

.rc-tooltip-arrow { border-color: transparent; border-style: solid; height:=
 0px; position: absolute; width: 0px; }

.rc-tooltip-placement-top .rc-tooltip-arrow, .rc-tooltip-placement-topLeft =
.rc-tooltip-arrow, .rc-tooltip-placement-topRight .rc-tooltip-arrow { borde=
r-top-color: rgb(55, 55, 55); border-width: 5px 5px 0px; bottom: 4px; margi=
n-left: -5px; }

.rc-tooltip-placement-top .rc-tooltip-arrow { left: 50%; }

.rc-tooltip-placement-topLeft .rc-tooltip-arrow { left: 15%; }

.rc-tooltip-placement-topRight .rc-tooltip-arrow { right: 15%; }

.rc-tooltip-placement-right .rc-tooltip-arrow, .rc-tooltip-placement-rightB=
ottom .rc-tooltip-arrow, .rc-tooltip-placement-rightTop .rc-tooltip-arrow {=
 border-right-color: rgb(55, 55, 55); border-width: 5px 5px 5px 0px; left: =
4px; margin-top: -5px; }

.rc-tooltip-placement-right .rc-tooltip-arrow { top: 50%; }

.rc-tooltip-placement-rightTop .rc-tooltip-arrow { margin-top: 0px; top: 15=
%; }

.rc-tooltip-placement-rightBottom .rc-tooltip-arrow { bottom: 15%; }

.rc-tooltip-placement-left .rc-tooltip-arrow, .rc-tooltip-placement-leftBot=
tom .rc-tooltip-arrow, .rc-tooltip-placement-leftTop .rc-tooltip-arrow { bo=
rder-left-color: rgb(55, 55, 55); border-width: 5px 0px 5px 5px; margin-top=
: -5px; right: 4px; }

.rc-tooltip-placement-left .rc-tooltip-arrow { top: 50%; }

.rc-tooltip-placement-leftTop .rc-tooltip-arrow { margin-top: 0px; top: 15%=
; }

.rc-tooltip-placement-leftBottom .rc-tooltip-arrow { bottom: 15%; }

.rc-tooltip-placement-bottom .rc-tooltip-arrow, .rc-tooltip-placement-botto=
mLeft .rc-tooltip-arrow, .rc-tooltip-placement-bottomRight .rc-tooltip-arro=
w { border-bottom-color: rgb(55, 55, 55); border-width: 0px 5px 5px; margin=
-left: -5px; top: 4px; }

.rc-tooltip-placement-bottom .rc-tooltip-arrow { left: 50%; }

.rc-tooltip-placement-bottomLeft .rc-tooltip-arrow { left: 15%; }

.rc-tooltip-placement-bottomRight .rc-tooltip-arrow { right: 15%; }

.text-input { background-clip: padding-box; background-color: rgb(255, 255,=
 255); border: 1px solid var(--input-border); border-radius: 3px; box-sizin=
g: border-box; color: var(--gray-800); display: inline-block; font-family: =
var(--sans-serif); font-weight: 400; line-height: 1.4; margin: 0px; transit=
ion: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; ve=
rtical-align: top; width: 200px; }

.text-input::-webkit-input-placeholder { color: var(--gray-500); }

.text-input::placeholder { color: var(--gray-500); }

.text-input.text-input-error { border-color: var(--red-500); }

.text-input:focus { border-color: var(--input-border-focus); box-shadow: 0 =
0 0 .2rem var(--primary-100a); outline: 0px; }

.text-input:focus-visible { box-shadow: var(--input-focus-ring); }

.text-input-sm { font-size: 14px; line-height: 18px; padding: 6px 12px; }

.text-input-md { font-size: 17px; line-height: 24px; padding: 5px 10px; }

.text-input-lg { font-size: 16px; line-height: 24px; padding: 12px 14px 10p=
x; }

.text-input[disabled] { background-color: var(--gray-50); color: var(--gray=
-400); }

.text-input[disabled]::-webkit-input-placeholder { color: var(--gray-400); =
}

.text-input[disabled]::placeholder { color: var(--gray-400); }

.text-input-full { display: block; width: 100%; }

.text-input-with-custom-placeholder { position: relative; }

.text-input-with-custom-placeholder .text-input-custom-placeholder { color:=
 var(--gray-500); left: 0px; pointer-events: none; position: absolute; top:=
 0px; }

.text-input-with-header.disabled .text-input, .text-input-with-header.disab=
led .text-input-header-wrapper { background-color: var(--gray-50); }

.text-input-with-header .subheading { padding: 22px 16px 12px; position: ab=
solute; }

.text-input-with-header .text-input-header-wrapper { padding-top: 50px; wid=
th: 100%; }

.text-input-with-header .text-input-header-wrapper::-webkit-input-placehold=
er { color: var(--gray-400); }

.text-input-with-header .text-input-header-wrapper::placeholder { color: va=
r(--gray-400); }

.text-input-with-header .text-input-header-wrapper .text-input-header-buffe=
r { border: none; height: 100%; overflow: auto; padding: 0px 14px 10px; wid=
th: 100%; }

.select-dropdown-indicator { transition: color 0.15s ease 0s; }

.select-base:hover .select-clear-indicator, .select-base:hover .select-drop=
down-indicator { color: var(--gray-600); }

.cb { cursor: pointer; display: flex; font-size: 16px; position: relative; =
}

.cb-disabled { cursor: not-allowed; }

.cb-input { clip: rect(1px, 1px, 1px, 1px); border: none; height: 1px; opac=
ity: 0; overflow: hidden; padding: 0px; position: absolute; white-space: no=
wrap; width: 1px; }

.cb-input + .cb-checkbox { color: rgb(255, 255, 255); }

.cb-input[disabled] + .cb-checkbox { background-color: var(--gray-400); bor=
der: 1px solid var(--gray-400); color: var(--gray-200); }

.cb-input:not([disabled]):hover + .cb-checkbox { border-color: var(--gray-6=
00); }

.cb-input:not([disabled]):active + .cb-checkbox { background-color: var(--g=
ray-50); }

.cb-input:not([disabled]):focus + .cb-checkbox { box-shadow: var(--primary-=
100a) 0 0 0 2px; }

.cb-input.cb-checked:not([disabled]) + .cb-checkbox { background-color: var=
(--primary-600); border-color: var(--primary-600); }

.cb-input.cb-checked:not([disabled]):hover + .cb-checkbox { border-color: v=
ar(--primary-700); }

.cb-input.cb-checked:not([disabled]):active + .cb-checkbox { background-col=
or: var(--primary-500); border-color: var(--primary-500); }

.cb-label { letter-spacing: -0.05px; line-height: 1.3; margin-left: 8px; }

.cb-label-disabled { color: var(--gray-500); }

.cb-checkbox { align-items: center; border: 1px solid var(--gray-500); bord=
er-radius: 3px; display: flex; flex: 0 0 auto; height: 18px; justify-conten=
t: center; transition: box-shadow 0.3s ease 0s, border 0.3s ease 0s; width:=
 18px; }

.cb-toggle { background: var(--gray-300); border-radius: 12px; flex: 0 0 au=
to; height: 16px; margin-top: 1px; transition: background-color 0.3s ease 0=
s, box-shadow 0.3s ease 0s; width: 26px; }

.cb-input.cb-checked:not([disabled]) + .cb-toggle { background: var(--prima=
ry); }

.cb-input.cb-checked:not([disabled]):focus + .cb-toggle { box-shadow: var(-=
-primary-100a) 0 0 0 2px; }

.cb-toggle-knob { background: rgb(255, 255, 255); border-radius: 12px; box-=
shadow: rgba(19, 21, 26, 0.1) 0px 1px 0px; height: 12px; transform: transla=
teX(2px) translateY(2px); transition: transform 0.3s ease 0s, -webkit-trans=
form 0.3s ease 0s; width: 12px; }

.cb-input.cb-checked + .cb-toggle .cb-toggle-knob { transform: translateX(1=
2px) translateY(2px); }

.inject-text-ta { border: 1px solid var(--input-border); border-radius: 3px=
; box-sizing: border-box; display: block; font-size: 13px; height: 32px; li=
ne-height: 1.5em; outline: none; padding: 6px 12px 4px 32px; resize: none; =
white-space: nowrap; width: 100%; }

.inject-text-ta.off { opacity: 0.5; }

.inject-text-ta:focus { border-color: var(--input-border-focus); }

.inject-text-ta:focus-visible { box-shadow: var(--input-focus-ring); }

.inject-text-ta-wrap { position: relative; }

.inject-text-cb { left: 7px; position: absolute; top: 7px; }

.engine-select-menu { overflow: hidden; }

.engine-select-menu .engine-select-option { align-items: center; color: var=
(--gray-700); display: flex; padding: 6px 12px; }

.engine-select-menu .engine-select-option.selected { background: var(--gree=
n-600); color: rgb(255, 255, 255); }

.engine-select-option-left { flex: 1 1 auto; }

.engine-select-option-right { align-items: center; display: flex; flex: 0 1=
 auto; }

.engine-select-option-right .engine-select-alpha-tag { background: var(--gr=
ay-100); color: var(--gray-700); flex: 0 1 auto; }

.engine-select-option-size-wrapper { align-items: center; display: flex; fl=
ex: 0 1 auto; justify-content: center; width: 12px; }

.engine-select-option-size { background: var(--gray-300); border-radius: 10=
0%; }

.engine-select-option.selected .engine-select-option-size { background: rgb=
(255, 255, 255); }

.engine-select-expand { color: var(--primary-600); cursor: pointer; font-si=
ze: 12px; line-height: 16px; padding: 6px 12px; }

.engine-select-card-wrap { align-items: stretch; display: flex; justify-con=
tent: stretch; opacity: 0; padding-right: 2px; pointer-events: none; positi=
on: absolute; width: 252px; }

.engine-select-card-wrap.visible { opacity: 1; pointer-events: all; }

.engine-select-card { background: rgb(255, 255, 255); border-radius: 4px; b=
ox-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 4px 1=
1px; color: var(--gray-700); font-size: 14px; line-height: 20px; padding: 1=
2px; }

.engine-select-card-header { align-items: center; display: flex; }

.engine-select-card-title { color: var(--gray-900); flex: 1 1 auto; font-si=
ze: 16px; font-weight: 700; line-height: 24px; }

.engine-select-card-docs a { color: var(--gray-400); font-size: 20px; }

.engine-select-card-docs a:hover { color: var(--gray-500); }

.engine-select-card-former-name { color: var(--gray-600); font-size: 12px; =
line-height: 16px; margin-bottom: 12px; }

.engine-select-card-description { margin: 8px 0px 0px; }

.engine-select-card-description p { margin: 0px; }

.engine-select-card-description p + p { margin-top: 8px; }

.engine-select-card-strengths { margin-top: 16px; }

.engine-select-card-strengths h4 { color: var(--gray-900); font-size: 12px;=
 font-weight: 700; letter-spacing: 0.08em; line-height: 16px; margin: 0px 0=
px 4px; text-transform: uppercase; }

.engine-select-footer { background-color: var(--gray-50); padding: 8px 12px=
; }

.keyboard-shortcut { align-items: center; display: inline-flex; }

.keyboard-shortcut-key { border-radius: 3px; font-size: 12px; line-height: =
14px; margin-left: 4px; min-height: 16px; min-width: 16px; padding: 2px 2px=
 0px; text-align: center; }

.dark > .keyboard-shortcut-key { background: var(--gray-700); color: var(--=
gray-100); }

.light > .keyboard-shortcut-key { background: var(--gray-100); color: var(-=
-gray-600); }

.keyboard-shortcut-key:first-child { margin-left: 0px; }

.minipg { margin: 24px 0px; }

.minipg-main { border: 1px solid var(--gray-200); border-radius: 4px; displ=
ay: grid; grid-template-areas: "input params" "output ."; grid-template-col=
umns: 1fr auto; overflow: hidden; }

@media (min-width: 601px) {
  .minipg-main.has-params .minipg-input, .minipg-main.has-params .minipg-ou=
tput { border-right: 1px solid var(--gray-200); }
}

@media (max-width: 600px) {
  .minipg-main.has-params .minipg-params { border-bottom: 1px solid var(--g=
ray-200); }
  .minipg-main.has-params .minipg-params .slider { width: 100%; }
  .minipg-main { grid-template-areas: "params" "input" "output"; grid-templ=
ate-columns: 1fr; }
}

.minipg-input { display: flex; grid-area: input / input / input / input; pa=
dding: 14px; }

.minipg-input textarea { border: none; color: var(--gray-800); flex: 1 1 0%=
; font-size: 16px; line-height: 24px; outline: none; padding: 2px; resize: =
none; }

.minipg-input-buttons { align-items: flex-end; display: flex; }

.minipg-input-buttons .btn { padding: 4px 6px; }

.minipg-reset.hidden { visibility: hidden; }

.minipg-submit-icon { font-size: 20px; margin-right: -1px; }

.minipg-output { background-color: var(--green-50); border-top: 1px solid v=
ar(--gray-200); grid-area: output / output / output / output; max-height: 1=
76px; overflow: auto; padding: 16px; white-space: pre-line; }

.minipg-params { grid-area: params / params / params / params; padding: 16p=
x; }

.minipg-error { color: var(--red-500); grid-area: error / error / error / e=
rror; margin-top: 16px; }

.minipg-error a, .minipg-error a:visited { color: var(--red-500) !important=
; text-decoration: underline !important; }

.minipg-error svg { font-size: 15px; margin-bottom: -2px; }

.code-sample + .code-sample { margin-top: 1em; }

.code-sample-header { align-items: center; background: var(--gray-800); bor=
der-top-left-radius: 4px; border-top-right-radius: 4px; color: var(--gray-3=
00); display: flex; padding: 6px 10px 6px 12px; }

.code-sample-title { flex: 1 1 auto; margin-right: 10px; overflow: hidden; =
text-overflow: ellipsis; white-space: nowrap; }

.code-sample-copy { align-items: center; display: flex; flex: 0 0 auto; mar=
gin-left: 8px; }

.code-sample-copy .btn-neutral.btn-minimal { color: var(--gray-300); paddin=
g: 2px 5px; }

.code-sample-sep { border-left: 1px solid rgba(255, 255, 255, 0.298); flex:=
 0 0 auto; height: 22px; margin-left: 8px; min-width: 1px; padding-left: 8p=
x; }

.code-sample-body { position: relative; }

.code-sample-body .code-sample-pre { border-bottom-left-radius: 4px; border=
-bottom-right-radius: 4px; font-size: 13px; line-height: 20px; margin: 0px;=
 min-height: 44px; padding: 12px 16px; }

.code-sample-body.code-sample-body-large .code-sample-pre { font-size: 15px=
; line-height: 24px; }

.code-sample-body:only-child .code-sample-pre { border-top-left-radius: 4px=
; border-top-right-radius: 4px; }

.code-sample-copy-float { opacity: 1; position: absolute; right: 16px; top:=
 16px; transition: opacity 0.2s ease 0s, background-color 0s ease 0s; }

.code-sample-oneliner .code-sample-copy-float { top: 50%; transform: transl=
ateY(-50%); }

.code-sample-body:hover .code-sample-copy-float { opacity: 1; }

.code-sample-copy-float.btn-neutral.btn-minimal { background: var(--gray-80=
0); color: rgb(255, 255, 255); padding: 9px 13px; }

.code-sample-copy-float.btn-neutral.btn-minimal:hover { background: var(--g=
ray-700); }

.code-sample-copy-float.btn-neutral.btn-minimal:active { background: var(--=
gray-600); }

.code-sample-select-wrap { align-items: center; cursor: pointer; display: f=
lex; flex: 0 0 auto; position: relative; }

.code-sample-select-wrap svg { height: 14px; margin-left: 2px; pointer-even=
ts: none; width: 14px; }

.code-sample-select-wrap + .code-sample-select-wrap { margin-left: 12px; }

.code-sample-select { appearance: none; background: none; border: none; bor=
der-radius: 3px; inset: 0px; cursor: pointer; font-family: var(--sans-serif=
); font-size: 14px; margin: 0px; max-width: 120px; opacity: 0; padding: 5px=
 24px 5px 6px; position: absolute; text-align: right; text-align-last: righ=
t; transition: background-color 0.3s ease 0s; }

.code-sample-select:focus { border: none; outline: none; }

.code-sample-select-val { font-size: 14px; line-height: 20px; max-width: 15=
0px; overflow-x: hidden; text-overflow: ellipsis; white-space: nowrap; }

.anchor-heading-root { margin-bottom: var(--heading-margin-bottom); margin-=
top: var(--heading-margin-top); }

.anchor-heading-root .anchor-heading { margin: 0px; }

.anchor-heading-root:first-child { margin-top: 0px; }

.anchor-heading-link { display: inline-block; }

.anchor-heading-link .anchor-heading { position: relative; }

.anchor-heading-icon { color: var(--primary); left: calc(100% + 6px); opaci=
ty: 0; position: absolute; top: 45%; transform: translateY(-50%); transitio=
n: opacity 0.3s ease 0s; }

.anchor-heading-link:hover .anchor-heading-icon { opacity: 1; }

.menu-root { text-align: left; }

.menu-root .menu-item { box-sizing: border-box; color: var(--gray-900); fon=
t-size: 14px; padding: 0.4em 1em; }

.menu-root a.menu-item { display: block; text-decoration: none; color: var(=
--gray-900) !important; }

.menu-root .menu-item-selectable:hover, .menu-root .menu-item-selected { ba=
ckground: rgb(230, 243, 243); cursor: pointer; }

.menu-root .menu-item-selected { color: rgb(16, 163, 127); font-weight: 700=
; }

.menu-root .menu-item-disabled { color: var(--text-disabled); pointer-event=
s: none; }

.menu-root .menu-separator { border-top: 1px solid var(--gray-100); margin:=
 5px 0px; }

.avatar { align-items: center; background: var(--gray-800); color: rgb(255,=
 255, 255); display: flex; font-size: 14px; height: 28px; justify-content: =
center; line-height: 20px; width: 28px; }

.avatar, .avatar img { border-radius: 100px; }

.mobile-menu { background: rgb(255, 255, 255); inset: 0px; overflow: auto; =
position: fixed; }

.mobile-menu-header { align-items: center; display: flex; height: 60px; jus=
tify-content: space-between; padding: 0px 24px; }

.mobile-menu-close { margin-right: -4px; }

.mobile-menu-items .nav-item:not(.nav-sub-item) { color: var(--primary); cu=
rsor: pointer; display: flex; font-size: 14px; font-weight: 700; letter-spa=
cing: 0.08em; line-height: 20px; margin-top: 0.5em; padding: 8px 24px; text=
-decoration: none; text-transform: uppercase; width: 100%; }

.mobile-menu-items .nav-item:not(.nav-sub-item):hover { color: var(--primar=
y-500); }

.mobile-menu-items .nav-sub-item { color: var(--gray-700); cursor: pointer;=
 display: flex; font-size: 14px; margin-top: 0.1em; padding: 6px 24px; text=
-decoration: none; width: 100%; }

.mobile-menu-items .nav-sub-item.active { color: var(--primary); font-weigh=
t: 700; }

:root { --app-header-height: 60px; }

.app-header { align-items: center; background-color: rgb(255, 255, 255); bo=
rder-bottom: 1px solid rgb(236, 236, 241); display: flex; height: var(--app=
-header-height); justify-content: space-between; overflow: auto; padding: 0=
px 24px; position: fixed; top: 0px; width: 100%; z-index: 100; }

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-re=
solution: 0.001dpcm) {
  .app-header { overflow: visible; }
}

@media print {
  .app-header { display: none; }
}

.app-header .branding { align-items: center; color: rgb(53, 55, 64); displa=
y: flex; }

.app-header .branding a { color: rgb(0, 0, 0); padding: 10px 0px; text-deco=
ration: none; }

.app-header .branding a:visited { color: rgb(0, 0, 0); }

.app-header .logo-link { align-items: center; display: flex; }

.app-header .left-menu { align-items: stretch; align-self: stretch; display=
: flex; flex: 1 1 0%; }

.app-header .menu-container { align-items: center; display: flex; flex: 0 1=
 0%; justify-content: space-around; margin: 0px 10px 0px 24px; max-width: 7=
00px; }

@media (max-width: 980px) {
  .app-header .menu-container { display: none; }
}

.app-header .menu-container .nav-item { color: var(--gray-600); cursor: poi=
nter; font-size: 14px; padding: 10px 0px; text-decoration: none; white-spac=
e: nowrap; }

.app-header .menu-container .nav-item:not(:first-child) { margin-left: 24px=
; }

.app-header .menu-container .nav-item:visited { color: var(--gray-600); }

.app-header .menu-container .nav-item:hover { color: var(--gray-800); }

.app-header .menu-container .nav-item.active { color: var(--green-600); }

.app-header .right-menu { align-items: center; color: rgb(0, 0, 0); display=
: inline-flex; position: relative; }

.app-header .right-menu .logout-button { border-left: 1px solid rgb(255, 25=
5, 255); cursor: pointer; line-height: 35px; margin-right: 5px; padding-lef=
t: 1em; }

.app-header .right-menu .user-section { margin-left: 14px; }

@media (max-width: 600px) {
  .app-header .right-menu .user-section { display: none; }
}

.header-submenu.header-submenu-desktop { padding: 0.5em 0px; white-space: n=
owrap; }

.header-submenu.header-submenu-desktop a { color: rgb(86, 88, 105); display=
: block; padding: 5px 1em; text-decoration: none; }

.header-submenu.header-submenu-desktop a:hover { background-color: rgb(230,=
 243, 243); color: rgb(61, 63, 64); }

.user-section { align-items: center; cursor: pointer; display: inline-flex;=
 }

.user-section svg { color: rgb(110, 110, 128); }

.user-details { color: rgb(86, 88, 105); cursor: pointer; font-size: 14px; =
line-height: 20px; max-width: 300px; text-align: right; text-decoration: no=
ne; }

.app-header .user-details { color: rgb(255, 255, 255); }

@media (max-width: 600px) {
  .app-header .user-details { display: none; }
}

.app-header .user-details .user-details-org { color: var(--gray-800); }

.user-details-org { margin-top: 2px; overflow: hidden; text-overflow: ellip=
sis; }

.user-dropdown { font-size: 14px; min-width: 200px; padding: 5px 0px; text-=
align: left; }

.user-dropdown .user-name { color: rgb(32, 33, 35); font-weight: 700; }

.user-dropdown .user-email { color: rgb(86, 88, 105); font-size: 13px; font=
-weight: 400; margin-top: 3px; }

.user-dropdown .user-org-option { align-items: center; color: var(--gray-70=
0); display: flex; justify-content: flex-start; padding-bottom: 4px; paddin=
g-top: 4px; }

.user-dropdown .user-org-option svg { flex: 0 0 auto; height: 18px; margin-=
left: 10px; opacity: 0; width: 18px; }

.user-dropdown .user-org-option.menu-item-selected { color: var(--primary);=
 }

.user-dropdown .user-org-option.menu-item-selected:not(:hover) { background=
: none; }

.user-dropdown .user-org-option.menu-item-selected svg { opacity: 1; }

.header-upgrade-container { align-items: center; display: flex; transition:=
 opacity 0.2s ease 0s; }

@media (max-width: 980px) {
  .header-upgrade-container { display: none; }
}

.header-upgrade-btn { align-items: center; color: rgb(16, 163, 127); displa=
y: inline-flex; font-size: 14px; line-height: 20px; margin: 2px 0px 0px 1em=
; text-decoration: none; }

.header-upgrade-btn svg { color: rgb(16, 163, 127); }

.header-support { margin: 3px 0px 0px 14px; }

.header-support-btn.btn-minimal { color: var(--gray-600); font-size: 14px; =
padding: 2px 6px; transition: color 0.3s ease 0s; }

.header-support-btn.btn-minimal svg { color: var(--gray-500); font-size: 20=
px; margin-top: 0px; transition: color 0.3s ease 0s; }

.header-support-btn.btn-minimal .btn-label-inner { margin-left: 5px !import=
ant; }

.header-support-btn.btn-minimal:active, .header-support-btn.btn-minimal:hov=
er { background-color: transparent; color: var(--gray-700); }

.header-support-btn.btn-minimal:active svg, .header-support-btn.btn-minimal=
:hover svg { color: var(--gray-600); }

.mobile-menu-toggle { color: rgb(53, 55, 64); cursor: pointer; display: non=
e; font-size: 1.6em; margin: 0px -15px 0px 5px; padding: 14px; }

@media (max-width: 980px) {
  .mobile-menu-toggle { display: flex; }
}

.mobile-menu .user-section { margin: 20px; padding: 2px; }

.icon-item { align-items: flex-start; border-radius: 6px; cursor: pointer; =
display: flex; min-width: 0px; transition: opacity 0.15s ease 0s; }

.icon-item:hover { opacity: 0.9; }

.icon-item-icon { border-radius: 4px; color: rgb(255, 255, 255); flex: 0 0 =
auto; font-size: 24px; line-height: 0px; padding: 15px; }

.icon-item-icon svg { transition: transform 0.15s ease 0s, -webkit-transfor=
m 0.15s ease 0s; }

.icon-item:hover .icon-item-icon svg { transform: scale(1.15); }

.icon-item-right { flex: 1 1 auto; min-width: 0px; padding-left: 16px; }

.icon-item-title { color: var(--gray-900); display: inline-block; margin-bo=
ttom: 2px; margin-top: 3px; transition: color 0.15s ease 0s; }

.icon-item-tag, .icon-item:hover .icon-item-title { color: var(--gray-700);=
 }

.icon-item-tag { background-color: var(--gray-100); border-radius: 3px; dis=
play: inline-block; font-size: 12px; font-weight: 700; line-height: 16px; m=
argin-left: 12px; padding: 0px 4px; transform: translateY(-2px); }

.icon-item-tag.icon-item-tag-green { background-color: var(--green-100); co=
lor: var(--green-700); }

.icon-item-desc { color: var(--gray-600); overflow: hidden; text-overflow: =
ellipsis; white-space: normal; }

.notice { border: 1px solid var(--gray-100); border-radius: 4px; flex: 0 0 =
auto; min-width: 275px; padding: 16px 18px; position: relative; text-align:=
 center; width: 100%; }

@media (min-width: 768px) {
  .notice { align-items: center; display: inline-flex; }
}

@media (max-width: 767px) {
  .notice { gap: 14px; display: grid; grid-auto-rows: auto; grid-template-c=
olumns: auto; }
  .notice.has-icon { grid-template-columns: 20px auto; }
}

.notice-primary { background-color: var(--green-50); border-color: var(--gr=
een-100); }

.notice-neutral { background-color: var(--gray-50); border-color: var(--gra=
y-100); }

.notice-warning { background-color: rgba(244, 172, 54, 0.12); border-color:=
 rgba(244, 172, 54, 0.24); }

.notice-icon { font-size: 20px; }

@media (min-width: 768px) {
  .notice-icon { display: inline-flex; flex: 0 0 auto; margin-right: 14px; =
}
  .has-body .notice-icon { align-self: flex-start; }
}

.notice-icon-primary { color: var(--primary); }

.notice-icon-neutral { color: var(--gray-600); }

.notice-icon-warning { color: var(--icon-warning-color); }

.notice-icon-danger { color: var(--red-500); }

.notice-message { color: var(--gray-900); margin-bottom: -2px; text-align: =
left; }

.notice-message a:not(.btn):not(:visited), .notice-message a:not(.btn):visi=
ted { color: var(--primary); font-weight: 700; text-decoration: none; }

@media (min-width: 768px) {
  .notice-message { flex: 1 1 auto; }
}

.notice-body a:not(.btn):not(:visited), .notice-body a:not(.btn):visited { =
font-weight: 400; }

div + .notice-body.body-small { margin-top: 4px; }

.notice-body > p:last-child { margin-bottom: 0px; }

.notice-actions { align-items: center; display: flex; flex-wrap: nowrap; }

@media (min-width: 768px) {
  .notice-actions { margin-left: 14px; }
}

@media (max-width: 767px) {
  .has-icon .notice-actions { grid-column-start: 2; }
}

.notice-actions .btn { white-space: nowrap; }

.notice-dismiss { align-items: center; display: flex; }

.notice-dismiss .btn-neutral { background-color: unset; color: var(--gray-9=
00); transition: color 0.2s ease 0s; }

.notice-dismiss .btn-neutral:hover { background-color: unset; color: var(--=
gray-700); }

.notice-dismiss .btn-neutral:active { background-color: unset; color: var(-=
-gray-600); }

.notice-dismiss .btn-neutral svg { color: var(--gray-600); font-size: 20px;=
 }

@media (min-width: 768px) {
  .notice-dismiss { margin-left: 8px; }
  .notice-dismiss-mobile { display: none; }
}

@media (max-width: 767px) {
  .notice-dismiss-desktop { display: none; }
}

.ovr-page { background-color: rgb(255, 255, 255); box-sizing: border-box; m=
argin: 0px auto; }

.ovr-page.page-body { padding-top: 42px; }

.ovr-page h1 { font-size: 32px; margin-bottom: 40px; margin-top: 0px; }

.ovr-page h1 > div { margin-top: -14px; }

@media (min-width: 450px) {
  .ovr-page h1 .mobile-break { display: none; }
}

.ovr-page h2 { margin-bottom: 24px; }

.ovr-page .section-text { color: var(--gray-800); font-size: 16px; line-hei=
ght: 24px; }

.ovr-page a { text-decoration: none; }

.ovr-page .ovr-shortcuts { gap: 32px; display: grid; grid-template-columns:=
 1fr 1fr; justify-content: space-between; margin: 24px 0px 64px; }

@media (max-width: 700px) {
  .ovr-page .ovr-shortcuts { grid-template-columns: 1fr; }
}

.ovr-page .ovr-card { border-radius: 4px; display: flex; flex-direction: co=
lumn; height: 192px; justify-content: flex-end; overflow: hidden; padding: =
20px 24px; position: relative; }

@media (max-width: 800px) {
  .ovr-page .ovr-card { height: 164px; }
}

.ovr-page .ovr-card:hover .ovr-card-bg { opacity: 0.9; }

.ovr-page .ovr-card-bg { bottom: 0px; height: auto; left: 0px; min-height: =
100%; opacity: 1; position: absolute; transition: opacity 0.2s ease-in-out =
0s; width: 100%; }

.ovr-page .ovr-card-title { color: rgb(255, 255, 255); position: relative; =
transition: color 0.2s ease-in-out 0s; z-index: 2; }

.ovr-page .ovr-card-desc { color: rgb(255, 255, 255); margin-top: 2px; posi=
tion: relative; z-index: 2; }

.ovr-page .ovr-going-live-warning { margin-bottom: 32px; }

.ovr-page .ovr-build-grid { gap: 32px; display: grid; grid-template-columns=
: 1fr 1fr; }

@media (max-width: 700px) {
  .ovr-page .ovr-build-grid { grid-template-columns: 1fr; }
}

.ovr-page .teams-support { color: var(--gray-800); margin-bottom: 10px; }

.ovr-page .teams-support a, .ovr-page .teams-support a:visited { font-weigh=
t: 700; }

.ovr-page .ovr-section + .ovr-section { margin-top: 48px; }

.ovr-footer { background-color: var(--gray-50); }

.ovr-footer-grid { gap: 48px; display: grid; grid-template-columns: 1fr 1fr=
 1fr; }

@media (max-width: 800px) {
  .ovr-footer-grid { grid-template-columns: 1fr 1fr; justify-items: center;=
 }
}

@media (max-width: 600px) {
  .ovr-footer-grid { grid-template-columns: 1fr; justify-items: center; }
}

.ovr-footer-item { max-width: 100%; text-align: center; width: 220px; }

.ovr-footer-item a { display: block; }

.ovr-footer-desc { color: var(--gray-600); }

.examples-page .page-heading { margin-bottom: 48px; text-align: center; }

.examples-page .text-title { color: rgb(32, 33, 35); line-height: 44px; mar=
gin-bottom: 8px; }

.examples-page .text-tagline { color: rgb(86, 88, 105); font-size: 18px; li=
ne-height: 24px; }

.search-section { display: flex; margin-bottom: 48px; }

.search-section .search-bar { flex: 1 1 100%; height: 32px; margin-right: 1=
2px; position: relative; }

.search-section .search-bar input { border-color: rgb(197, 197, 210); font-=
size: 14px; height: 100%; line-height: 20px; padding-left: 32px; padding-ri=
ght: 32px; width: 100%; }

.search-section .search-bar input:focus { box-shadow: none; }

.search-section .search-bar.filled input { border: 1px solid rgb(16, 163, 1=
27); }

.search-section .search-bar ::-webkit-input-placeholder { color: rgb(142, 1=
42, 160); }

.search-section .search-bar ::placeholder { color: rgb(142, 142, 160); }

.search-section .search-bar svg.search-icon { color: rgb(169, 169, 186); he=
ight: 100%; margin-left: 12px; position: absolute; }

.search-section .search-bar svg.close-button { color: rgb(169, 169, 186); c=
ursor: pointer; height: 100%; margin-left: -32px; position: absolute; }

.search-section .category-dropdown { flex: 1 1 50%; }

@media (max-width: 950px) {
  .search-section { flex-flow: column; }
  .search-section .search-bar { margin-bottom: 12px; margin-right: 0px; }
  .search-section .search-section { margin-bottom: 32px; }
}

.examples-grid { gap: 32px; display: grid; flex-wrap: wrap; grid-template-c=
olumns: minmax(0px, 1fr) minmax(0px, 1fr); max-width: 100%; }

.examples-grid .no-results { margin-top: 112px; text-align: center; width: =
200%; }

.examples-grid .no-results .body-small { margin-top: 8px; }

.examples-grid .no-results .body-small a { margin-left: 3px; text-decoratio=
n: none; }

@media (max-width: 950px) {
  .examples-grid { grid-template-columns: 1fr; }
  .examples-grid .example-preview-item { flex-basis: 100%; max-width: 100%;=
 }
  .examples-grid .no-results { width: 100%; }
}

.example-avatar { border-radius: 4px; display: inline-block; flex: 0 0 auto=
; height: 48px; text-align: center; width: 48px; }

.example-avatar svg { color: rgb(255, 255, 255); height: 100%; width: 32px;=
 }

.example-details-parameter-row { display: flex; }

.example-details-parameter-row .stop-seq-container { display: inline-block;=
 }

.example-details-parameter-row .param-snippet, .example-details-parameter-r=
ow .restart-sequence, .example-details-parameter-row .start-sequence { back=
ground: rgba(237, 238, 241, 0.5); border: 1px solid rgba(174, 174, 188, 0.2=
); border-radius: 4px; color: rgb(32, 33, 35); display: inline-block; font-=
family: var(--monospace); font-size: 12px; font-weight: 400; line-height: 2=
0px; margin: 2px; padding: 2px 2px 0px; }

.example-details-content { display: flex; flex-direction: column; }

.example-details .modal-dialog { box-sizing: border-box; max-height: 80vh; =
overflow: auto; padding: 38px 42px 0px; }

.example-details .modal-dialog::after { content: ""; display: block; height=
: 38px; }

.example-details .modal-dialog .details-header { border-bottom: 1px solid r=
gb(236, 236, 241); display: flex; justify-content: space-between; padding-b=
ottom: 16px; }

.example-details .modal-dialog .details-header .details-header-text { margi=
n-left: 16px; }

.example-details .modal-dialog .details-title { color: rgb(32, 33, 35); fon=
t-size: 20px; font-weight: 700; line-height: 28px; margin-bottom: 4px; }

.example-details .modal-dialog .left-header { display: flex; margin-right: =
12px; }

.example-details .modal-dialog .left-header .example-avatar { flex: 0 0 56p=
x; height: 56px; width: 56px; }

.example-details .modal-dialog .left-header .tag { border: 1px solid rgb(23=
6, 236, 241); border-radius: 4px; color: rgb(86, 88, 105); display: inline-=
block; font-size: 14px; line-height: 20px; margin-right: 4px; padding: 1px =
6px; }

.example-details .modal-dialog .right-header { font-feature-settings: "tnum=
"; align-items: center; display: flex; font-variant-numeric: tabular-nums; =
}

.example-details .modal-dialog .right-header a { text-decoration: none; }

.example-details .modal-dialog .details-description { font-size: 16px; line=
-height: 24px; margin-top: 31px; width: 60%; }

.example-details .modal-dialog .parameter-label { color: rgb(110, 110, 128)=
; display: inline-block; font-size: 14px; font-weight: 400; line-height: 28=
px; margin-right: 24px; width: 120px; }

.example-details .modal-dialog .parameter-value { font-feature-settings: "t=
num"; color: rgb(32, 33, 35); font-size: 14px; font-variant-numeric: tabula=
r-nums; font-weight: 400; line-height: 28px; }

.example-details .modal-dialog .prompt, .example-details .modal-dialog .res=
ponse-text { background-color: rgb(247, 247, 248); border-radius: 4px; colo=
r: rgb(32, 33, 35); font-size: 14px; line-height: 20px; margin-top: 12px; p=
adding: 16px; white-space: pre-wrap; }

.example-details .modal-dialog .response-text { background-color: rgb(235, =
250, 235); }

@media (max-width: 700px) {
  .example-details .modal-dialog .details-description { width: 100%; }
}

.example-details .body-large.bold { margin-bottom: 12px; margin-top: 32px; =
}

@media (max-width: 950px) {
  .example-details .modal-dialog { border: none; border-radius: 0px; height=
: 100vh; margin: 0px; max-height: 100vh; padding: 24px; width: 100vh; }
  .example-details .modal-dialog .modal-close { display: block; }
  .example-details .modal-dialog .details-header, .example-details .modal-d=
ialog .left-header { flex-flow: column; }
  .example-details .modal-dialog .details-header .details-header-text, .exa=
mple-details .modal-dialog .left-header .details-header-text { margin-left:=
 0px; margin-top: 12px; }
  .example-details .modal-dialog .details-header .right-header, .example-de=
tails .modal-dialog .left-header .right-header { margin-top: 22px; }
  .example-details .modal-dialog .details-header { padding-bottom: 12px; }
}

a.side-nav-item { color: rgb(110, 110, 128); display: block; font-size: 14p=
x; line-height: 20px; padding: 6px 0px; text-decoration: none; }

a.side-nav-item:visited:not(.active) { color: rgb(110, 110, 128); }

a.side-nav-item:hover { color: rgb(53, 55, 64); }

a.side-nav-item.active { color: rgb(16, 163, 127); }

a.side-nav-child { font-size: 14px; line-height: 16px; padding-left: 16px; =
}

.side-nav-section + .side-nav-section { margin-top: 30px; }

.side-nav-header { display: flex; margin-bottom: 10px; }

.side-nav-padded a.side-nav-item { padding: 6px 24px; }

.side-nav-padded a.side-nav-item:hover { background: var(--gray-50); color:=
 rgb(53, 55, 64); }

.side-nav-padded a.side-nav-item.active { background: rgb(230, 243, 243); }

.side-nav-padded a.side-nav-child { padding-left: 36px; }

.side-nav-padded .side-nav-header { padding: 0px 24px; }

:root { --docsearch-primary-color: #5468ff; --docsearch-text-color: #1c1e21=
; --docsearch-spacing: 12px; --docsearch-icon-stroke-width: 1.4; --docsearc=
h-highlight-color: var(--docsearch-primary-color); --docsearch-muted-color:=
 #969faf; --docsearch-container-background: rgba(101,108,133,.8); --docsear=
ch-logo-color: #5468ff; --docsearch-modal-width: 560px; --docsearch-modal-h=
eight: 600px; --docsearch-modal-background: #f5f6f7; --docsearch-modal-shad=
ow: inset 1px 1px 0 0 hsla(0,0%,100%,.5),0 3px 8px 0 #555a64; --docsearch-s=
earchbox-height: 56px; --docsearch-searchbox-background: #ebedf0; --docsear=
ch-searchbox-focus-background: #fff; --docsearch-searchbox-shadow: inset 0 =
0 0 2px var(--docsearch-primary-color); --docsearch-hit-height: 56px; --doc=
search-hit-color: #444950; --docsearch-hit-active-color: #fff; --docsearch-=
hit-background: #fff; --docsearch-hit-shadow: 0 1px 3px 0 #d4d9e1; --docsea=
rch-key-gradient: linear-gradient(-225deg,#d5dbe4,#f8f8f8); --docsearch-key=
-shadow: inset 0 -2px 0 0 #cdcde6,inset 0 0 1px 1px #fff,0 1px 2px 1px rgba=
(30,35,90,.4); --docsearch-footer-height: 44px; --docsearch-footer-backgrou=
nd: #fff; --docsearch-footer-shadow: 0 -1px 0 0 #e0e3e8,0 -3px 6px 0 rgba(6=
9,98,155,.12); }

html[data-theme=3D"dark"] { --docsearch-text-color: #f5f6f7; --docsearch-co=
ntainer-background: rgba(9,10,17,.8); --docsearch-modal-background: #15172a=
; --docsearch-modal-shadow: inset 1px 1px 0 0 #2c2e40,0 3px 8px 0 #000309; =
--docsearch-searchbox-background: #090a11; --docsearch-searchbox-focus-back=
ground: #000; --docsearch-hit-color: #bec3c9; --docsearch-hit-shadow: none;=
 --docsearch-hit-background: #090a11; --docsearch-key-gradient: linear-grad=
ient(-26.5deg,#565872,#31355b); --docsearch-key-shadow: inset 0 -2px 0 0 #2=
82d55,inset 0 0 1px 1px #51577d,0 2px 2px 0 rgba(3,4,9,.3); --docsearch-foo=
ter-background: #1e2136; --docsearch-footer-shadow: inset 0 1px 0 0 rgba(73=
,76,106,.5),0 -4px 8px 0 rgba(0,0,0,.2); --docsearch-logo-color: #fff; --do=
csearch-muted-color: #7f8497; }

.DocSearch-Button { align-items: center; background: var(--docsearch-search=
box-background); border: 0px; border-radius: 40px; color: var(--docsearch-m=
uted-color); cursor: pointer; display: flex; font-weight: 500; height: 36px=
; justify-content: space-between; margin: 0px 0px 0px 16px; padding: 0px 8p=
x; user-select: none; }

.DocSearch-Button:active, .DocSearch-Button:focus, .DocSearch-Button:hover =
{ background: var(--docsearch-searchbox-focus-background); box-shadow: var(=
--docsearch-searchbox-shadow); color: var(--docsearch-text-color); outline:=
 none; }

.DocSearch-Button-Container { align-items: center; display: flex; }

.DocSearch-Search-Icon { stroke-width: 1.6; }

.DocSearch-Button .DocSearch-Search-Icon { color: var(--docsearch-text-colo=
r); }

.DocSearch-Button-Placeholder { font-size: 1rem; padding: 0px 12px 0px 6px;=
 }

.DocSearch-Button-Keys { display: flex; min-width: calc(40px + 0.8em); }

.DocSearch-Button-Key { align-items: center; background: var(--docsearch-ke=
y-gradient); border: 0px; border-radius: 3px; box-shadow: var(--docsearch-k=
ey-shadow); color: var(--docsearch-muted-color); display: flex; height: 18p=
x; justify-content: center; margin-right: 0.4em; padding: 0px 0px 2px; posi=
tion: relative; top: -1px; width: 20px; }

@media (max-width: 768px) {
  .DocSearch-Button-Keys, .DocSearch-Button-Placeholder { display: none; }
}

.DocSearch--active { overflow: hidden !important; }

.DocSearch-Container, .DocSearch-Container * { box-sizing: border-box; }

.DocSearch-Container { background-color: var(--docsearch-container-backgrou=
nd); height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw; z-i=
ndex: 200; }

.DocSearch-Container a { text-decoration: none; }

.DocSearch-Link { appearance: none; background: none; border: 0px; color: v=
ar(--docsearch-highlight-color); cursor: pointer; font: inherit; margin: 0p=
x; padding: 0px; }

.DocSearch-Modal { background: var(--docsearch-modal-background); border-ra=
dius: 6px; box-shadow: var(--docsearch-modal-shadow); flex-direction: colum=
n; margin: 60px auto auto; max-width: var(--docsearch-modal-width); positio=
n: relative; }

.DocSearch-SearchBar { display: flex; padding: var(--docsearch-spacing) var=
(--docsearch-spacing) 0; }

.DocSearch-Form { align-items: center; background: var(--docsearch-searchbo=
x-focus-background); border-radius: 4px; box-shadow: var(--docsearch-search=
box-shadow); display: flex; height: var(--docsearch-searchbox-height); marg=
in: 0px; padding: 0 var(--docsearch-spacing); position: relative; width: 10=
0%; }

.DocSearch-Input { appearance: none; background: transparent; border: 0px; =
color: var(--docsearch-text-color); flex: 1 1 0%; font-style: inherit; font=
-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height=
: inherit; font-family: inherit; font-optical-sizing: inherit; font-kerning=
: inherit; font-feature-settings: inherit; font-variation-settings: inherit=
; font-size: 1.2em; height: 100%; outline: none; padding: 0px 0px 0px 8px; =
width: 80%; }

.DocSearch-Input::-webkit-input-placeholder { color: var(--docsearch-muted-=
color); opacity: 1; }

.DocSearch-Input::placeholder { color: var(--docsearch-muted-color); opacit=
y: 1; }

.DocSearch-Input::-webkit-search-cancel-button, .DocSearch-Input::-webkit-s=
earch-decoration, .DocSearch-Input::-webkit-search-results-button, .DocSear=
ch-Input::-webkit-search-results-decoration { display: none; }

.DocSearch-LoadingIndicator, .DocSearch-MagnifierLabel, .DocSearch-Reset { =
margin: 0px; padding: 0px; }

.DocSearch-MagnifierLabel, .DocSearch-Reset { align-items: center; color: v=
ar(--docsearch-highlight-color); display: flex; justify-content: center; }

.DocSearch-Container--Stalled .DocSearch-MagnifierLabel, .DocSearch-Loading=
Indicator { display: none; }

.DocSearch-Container--Stalled .DocSearch-LoadingIndicator { align-items: ce=
nter; color: var(--docsearch-highlight-color); display: flex; justify-conte=
nt: center; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Reset { stroke-width: var(--docsearch-icon-stroke-width); anim=
ation: 0s ease 0s 1 normal none running none; appearance: none; background:=
 none; border: 0px; border-radius: 50%; color: var(--docsearch-icon-color);=
 cursor: pointer; right: 0px; }
}

.DocSearch-Reset { stroke-width: var(--docsearch-icon-stroke-width); animat=
ion: 0.1s ease-in 0s 1 normal forwards running fade-in; appearance: none; b=
ackground: none; border: 0px; border-radius: 50%; color: var(--docsearch-ic=
on-color); cursor: pointer; padding: 2px; right: 0px; }

.DocSearch-Reset[hidden] { display: none; }

.DocSearch-Reset:hover { color: var(--docsearch-highlight-color); }

.DocSearch-LoadingIndicator svg, .DocSearch-MagnifierLabel svg { height: 24=
px; width: 24px; }

.DocSearch-Cancel { display: none; }

.DocSearch-Dropdown { max-height: calc(var(--docsearch-modal-height) - var(=
--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch-=
footer-height)); min-height: var(--docsearch-spacing); overflow-y: overlay;=
 padding: 0 var(--docsearch-spacing); }

.DocSearch-Dropdown::-webkit-scrollbar { width: 12px; }

.DocSearch-Dropdown::-webkit-scrollbar-track { background: transparent; }

.DocSearch-Dropdown::-webkit-scrollbar-thumb { background-color: var(--docs=
earch-muted-color); border: 3px solid var(--docsearch-modal-background); bo=
rder-radius: 20px; }

.DocSearch-Dropdown ul { list-style: none; margin: 0px; padding: 0px; }

.DocSearch-Label { font-size: 0.75em; line-height: 1.6em; }

.DocSearch-Help, .DocSearch-Label { color: var(--docsearch-muted-color); }

.DocSearch-Help { font-size: 0.9em; margin: 0px; user-select: none; }

.DocSearch-Title { font-size: 1.2em; }

.DocSearch-Logo a { display: flex; }

.DocSearch-Logo svg { color: var(--docsearch-logo-color); margin-left: 8px;=
 }

.DocSearch-Hits:last-of-type { margin-bottom: 24px; }

.DocSearch-Hits mark { background: none; color: var(--docsearch-highlight-c=
olor); }

.DocSearch-HitsFooter { color: var(--docsearch-muted-color); display: flex;=
 font-size: 0.85em; justify-content: center; margin-bottom: var(--docsearch=
-spacing); padding: var(--docsearch-spacing); }

.DocSearch-HitsFooter a { border-bottom: 1px solid; color: inherit; }

.DocSearch-Hit { border-radius: 4px; display: flex; padding-bottom: 4px; po=
sition: relative; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--deleting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--deleting { opacity: 0; transition: all 0.25s linear 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--favoriting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--favoriting { transform: scale(0); transform-origin: center =
top; transition: all 0.25s linear 0.25s; }

.DocSearch-Hit a { background: var(--docsearch-hit-background); border-radi=
us: 4px; box-shadow: var(--docsearch-hit-shadow); display: block; padding-l=
eft: var(--docsearch-spacing); width: 100%; }

.DocSearch-Hit-source { background: var(--docsearch-modal-background); colo=
r: var(--docsearch-highlight-color); font-size: 0.85em; font-weight: 600; l=
ine-height: 32px; margin: 0px -4px; padding: 8px 4px 0px; position: sticky;=
 top: 0px; z-index: 10; }

.DocSearch-Hit-Tree { stroke-width: var(--docsearch-icon-stroke-width); col=
or: var(--docsearch-muted-color); height: var(--docsearch-hit-height); opac=
ity: 0.5; width: 24px; }

.DocSearch-Hit[aria-selected=3D"true"] a { background-color: var(--docsearc=
h-highlight-color); }

.DocSearch-Hit[aria-selected=3D"true"] mark { text-decoration: underline; }

.DocSearch-Hit-Container { align-items: center; color: var(--docsearch-hit-=
color); display: flex; flex-direction: row; height: var(--docsearch-hit-hei=
ght); padding: 0 var(--docsearch-spacing) 0 0; }

.DocSearch-Hit-icon { height: 20px; width: 20px; }

.DocSearch-Hit-action, .DocSearch-Hit-icon { stroke-width: var(--docsearch-=
icon-stroke-width); color: var(--docsearch-muted-color); }

.DocSearch-Hit-action { align-items: center; display: flex; height: 22px; w=
idth: 22px; }

.DocSearch-Hit-action svg { display: block; height: 18px; width: 18px; }

.DocSearch-Hit-action + .DocSearch-Hit-action { margin-left: 6px; }

.DocSearch-Hit-action-button { appearance: none; background: none; border: =
0px; border-radius: 50%; color: inherit; cursor: pointer; padding: 2px; }

svg.DocSearch-Hit-Select-Icon { display: none; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Select-Icon { display=
: block; }

.DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { ba=
ckground: rgba(0, 0, 0, 0.2); transition: background-color 0.1s ease-in 0s;=
 }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
transition: none 0s ease 0s; }
}

.DocSearch-Hit-action-button:focus path, .DocSearch-Hit-action-button:hover=
 path { fill: rgb(255, 255, 255); }

.DocSearch-Hit-content-wrapper { display: flex; flex: 1 1 auto; flex-direct=
ion: column; font-weight: 500; justify-content: center; line-height: 1.2em;=
 margin: 0px 8px; overflow-x: hidden; position: relative; text-overflow: el=
lipsis; white-space: nowrap; width: 80%; }

.DocSearch-Hit-title { font-size: 0.9em; }

.DocSearch-Hit-path { color: var(--docsearch-muted-color); font-size: 0.75e=
m; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Tree, .DocSearch-Hit[=
aria-selected=3D"true"] .DocSearch-Hit-action, .DocSearch-Hit[aria-selected=
=3D"true"] .DocSearch-Hit-icon, .DocSearch-Hit[aria-selected=3D"true"] .Doc=
Search-Hit-path, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-text=
, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-title, .DocSearch-H=
it[aria-selected=3D"true"] mark { color: var(--docsearch-hit-active-color) =
!important; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
background: rgba(0, 0, 0, 0.2); transition: none 0s ease 0s; }
}

.DocSearch-ErrorScreen, .DocSearch-NoResults, .DocSearch-StartScreen { font=
-size: 0.9em; margin: 0px auto; padding: 36px 0px; text-align: center; widt=
h: 80%; }

.DocSearch-Screen-Icon { color: var(--docsearch-muted-color); padding-botto=
m: 12px; }

.DocSearch-NoResults-Prefill-List { display: inline-block; padding-bottom: =
24px; text-align: left; }

.DocSearch-NoResults-Prefill-List ul { display: inline-block; padding: 8px =
0px 0px; }

.DocSearch-NoResults-Prefill-List li { list-style-position: inside; list-st=
yle-type: "=C2=BB "; }

.DocSearch-Prefill { appearance: none; background: none; border: 0px; borde=
r-radius: 1em; color: var(--docsearch-highlight-color); cursor: pointer; di=
splay: inline-block; font-size: 1em; font-weight: 700; padding: 0px; }

.DocSearch-Prefill:focus, .DocSearch-Prefill:hover { outline: none; text-de=
coration: underline; }

.DocSearch-Footer { align-items: center; background: var(--docsearch-footer=
-background); border-radius: 0px 0px 8px 8px; box-shadow: var(--docsearch-f=
ooter-shadow); display: flex; flex-direction: row-reverse; flex-shrink: 0; =
height: var(--docsearch-footer-height); justify-content: space-between; pad=
ding: 0 var(--docsearch-spacing); position: relative; user-select: none; wi=
dth: 100%; z-index: 300; }

.DocSearch-Commands { color: var(--docsearch-muted-color); display: flex; l=
ist-style: none; margin: 0px; padding: 0px; }

.DocSearch-Commands li { align-items: center; display: flex; }

.DocSearch-Commands li:not(:last-of-type) { margin-right: 0.8em; }

.DocSearch-Commands-Key { align-items: center; background: var(--docsearch-=
key-gradient); border: 0px; border-radius: 2px; box-shadow: var(--docsearch=
-key-shadow); color: var(--docsearch-muted-color); display: flex; height: 1=
8px; justify-content: center; margin-right: 0.4em; padding: 0px 0px 1px; wi=
dth: 20px; }

@media (max-width: 768px) {
  :root { --docsearch-spacing: 10px; --docsearch-footer-height: 40px; }
  .DocSearch-Dropdown { height: 100%; }
  .DocSearch-Container { height: calc(var(--docsearch-vh, 1vh)*100); positi=
on: absolute; }
  .DocSearch-Footer { border-radius: 0px; bottom: 0px; position: absolute; =
}
  .DocSearch-Hit-content-wrapper { display: flex; position: relative; width=
: 80%; }
  .DocSearch-Modal { border-radius: 0px; box-shadow: none; height: calc(var=
(--docsearch-vh, 1vh)*100); margin: 0px; max-width: 100%; width: 100%; }
  .DocSearch-Dropdown { max-height: calc(var(--docsearch-vh, 1vh)*100 - var=
(--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch=
-footer-height)); }
  .DocSearch-Cancel { appearance: none; background: none; border: 0px; colo=
r: var(--docsearch-highlight-color); cursor: pointer; display: inline-block=
; flex: 0 0 auto; font-style: inherit; font-variant: inherit; font-stretch:=
 inherit; line-height: inherit; font-family: inherit; font-optical-sizing: =
inherit; font-kerning: inherit; font-feature-settings: inherit; font-variat=
ion-settings: inherit; font-size: 1em; font-weight: 500; margin-left: var(-=
-docsearch-spacing); outline: none; overflow: hidden; padding: 0px; user-se=
lect: none; white-space: nowrap; }
  .DocSearch-Commands, .DocSearch-Hit-Tree { display: none; }
}

@-webkit-keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

:root { --docsearch-primary-color: var(--primary) !important; --docsearch-c=
ontainer-background: #00000040 !important; --docsearch-modal-shadow: 0px 4p=
x 32px 0px #05050533 !important; }

body .DocSearch-Button { background: rgb(255, 255, 255); border: 1px solid =
var(--gray-300); border-radius: 4px; display: flex; flex: 1 1 0%; font-weig=
ht: 500; height: 36px; justify-content: space-between; margin: auto auto 40=
px; padding: 0px 8px; transition: opacity 0s ease 0s; user-select: none; wi=
dth: 202px; }

body .DocSearch-Button:active, body .DocSearch-Button:focus, body .DocSearc=
h-Button:hover { box-shadow: none; color: var(--docsearch-muted-color); opa=
city: 0.8; }

body .DocSearch-Search-Icon { stroke-width: 1.4; height: 16px; color: var(-=
-gray-400) !important; }

body .DocSearch-Button .DocSearch-Search-Icon { color: var(--gray-100); }

body .DocSearch-Button-Key { align-items: center; background: var(--gray-10=
0); border: 0px; border-radius: 3px; box-shadow: none; color: var(--gray-60=
0); display: flex; font-family: var(--sans-serif-font-family); font-size: s=
mall; height: 18px; justify-content: center; margin-right: 0.4em; padding: =
0px; position: relative; top: 0px; width: 20px; }

@media (max-width: 768px) {
  body .DocSearch-Button-Keys, body .DocSearch-Button-Placeholder { display=
: none; }
}

body .DocSearch-Footer { display: none; }

.api-ref { max-width: 100%; padding: var(--content-v-padding) var(--content=
-h-padding); width: 1200px; }

@media (min-width: 1700px) {
  .api-ref { margin-left: calc(50vw - 686px); }
}

.api-ref .section + .section { border-top: 1px solid var(--gray-100); margi=
n-top: var(--content-v-padding); padding-top: var(--content-v-padding); }

.api-ref .section p code { font-size: 13px; padding: 2px 4px; }

.api-ref .section ul li { line-height: 2em; }

.api-ref .section a { font-weight: 700; text-decoration: none; }

.api-ref .section.md { max-width: 100%; width: var(--content-width); }

.api-ref .section.md p:last-child { margin-bottom: 0px; }

.api-ref .section.endpoint { align-items: stretch; display: flex; }

.api-ref .section blockquote { background: rgb(230, 243, 243); border-radiu=
s: 4px; color: rgb(16, 163, 127); margin-left: 0px; padding: 8px 12px; }

.api-ref .section blockquote p:first-child { margin-top: 0px; }

.api-ref .section blockquote p:last-child { margin-bottom: 0px; }

.api-ref .section-left { color: rgb(110, 110, 128); flex: 0 1 700px; max-wi=
dth: 700px; padding-right: 2em; width: 58%; }

.api-ref .section-right { flex: 0 1 500px; max-width: 500px; min-width: 400=
px; padding-top: 3em; width: 42%; }

.api-ref .endpoint-text { background: var(--gray-50); border-radius: 3px; c=
olor: var(--gray-700); display: inline-flex; font-family: var(--monospace);=
 font-size: 13px; padding: 3px 8px; }

.api-ref .endpoint-method { text-transform: uppercase; }

.api-ref .endpoint-path { word-break: break-all; }

.param-section { margin-top: 2em; }

.param-section h3 { margin: 0px; }

.param-table { margin-top: 0.5em; }

.param-table .param-table { border: 1px solid var(--gray-100); border-radiu=
s: 4px; margin-top: 1em; }

.param-table .param-table .param-row:first-child { border-top: none; }

.param-table .param-table .param-row { padding: 12px; }

.param-row { border-top: 1px solid var(--gray-100); font-size: 14px; paddin=
g: 1em 0px; position: relative; }

.param-row p code { font-size: 13px; padding: 1px 4px; }

.param-row.api-ref-anchor-link-hover::before { bottom: 0px; content: ""; po=
sition: absolute; right: 100%; top: 0px; width: 20px; }

.param-row-header { align-items: center; display: flex; flex-wrap: wrap; ju=
stify-content: flex-start; line-height: 20px; position: relative; }

.param-row-body { margin-top: 0.6em; }

.param-row-body p { margin: 8px 0px; }

.param-row-body p:first-child { margin-top: 0px; }

.param-row-body p:last-child { margin-bottom: 0px; }

.param-name { color: rgb(0, 0, 0); font-family: var(--monospace); }

.param-default, .param-optl, .param-reqd, .param-type { color: rgb(142, 142=
, 160); font-size: 13px; margin-left: 10px; }

.param-reqd { color: var(--red-500); }

.api-ref-anchor-link { background-color: rgb(255, 255, 255); opacity: 0; pa=
dding-right: 5px; pointer-events: none; position: absolute; right: 100%; to=
p: 0.2em; transition: opacity 0.3s ease 0s; }

.api-ref-anchor-link-hover:hover .api-ref-anchor-link { opacity: 1; pointer=
-events: all; }

@media (max-width: 1000px) {
  .api-ref .section.endpoint { display: block; }
  .api-ref .section-left, .api-ref .section-right { max-width: 100%; width:=
 auto; }
  .api-ref .section-right { margin-top: 2em; min-width: 0px; padding-top: 0=
px; }
}

.docs-page { align-items: stretch; display: flex; height: calc(100% - var(-=
-page-header-height)); position: relative; }

.docs-nav { border-right: 1px solid var(--gray-100); flex: 0 0 auto; overfl=
ow: auto; padding: 50px 0px 20px; width: 250px; }

@media (max-width: 800px) {
  .docs-nav { display: none; }
}

.docs-body { flex: 1 1 auto; height: 100%; max-width: 100%; min-width: 0px;=
 overflow: auto; }

.docs-body .markdown-page { max-width: 100%; padding: var(--content-v-paddi=
ng) var(--content-h-padding); width: calc(var(--content-width) + var(--cont=
ent-h-padding)*2); }

@media (min-width: 1372px) {
  .docs-body .markdown-page { margin-left: calc(50vw - 686px); }
}

.docs-introduction-page.markdown-content .intro-toc { gap: 10px; display: g=
rid; grid-template-columns: 1fr 1fr 1fr; }

.docs-introduction-page.markdown-content .intro-toc a { font-size: 18px; fo=
nt-weight: 700; }

@media (max-width: 900px) {
  .docs-introduction-page.markdown-content .intro-toc { grid-template-colum=
ns: 1fr 1fr; }
}

.docs-embeddings img { height: auto; max-width: 100%; }

.docs-embeddings-types table { width: 100%; }

.docs-embeddings-types table td:first-child { width: 40%; }

.docs-embeddings-types table td:last-child { width: 60%; }

.docs-embeddings-sample-data-table { overflow-x: auto; }

.docs-embeddings-sample-data-table td { font-size: 14px; }

.docs-embeddings-sample-data-table td:nth-child(4), .docs-embeddings-sample=
-data-table td:nth-child(5) { min-width: 150px; }

.ft-guide-toc > ul { padding-left: 0px; }

.ft-guide-toc > ul > li { list-style-type: none; }

.docs-samples-notice { position: relative; }

.docs-samples-notice ul { margin-bottom: 0px; }

.docs-samples-notice .btn { bottom: 0px; position: absolute; right: 0px; }

.docs-responsive-button-list .btn { margin: 0px 8px 8px 0px !important; }

.markdown-page > .expn .tag-link { margin-bottom: 24px; }

.markdown-page > .expn .docs-tag-link-list { margin-bottom: 12px; }

.markdown-page > .expn .docs-tag-link-list .tag-link { margin-bottom: 12px;=
 margin-right: 12px; }

.models-table { line-height: 1.5; }

.models-table tbody td:first-child { font-family: var(--monospace); white-s=
pace: nowrap; }

@media (min-width: 768px) {
  .models-table tbody td:last-child, .models-table tbody td:nth-last-child(=
2) { min-width: 130px; }
}

@media (max-width: 600px) {
  .models-table { font-size: 14px; }
}

@media (min-width: 1372px) {
  .model-index-table { width: calc(100vw - 506px); }
}

.model-index-table .mono { background: none; padding: 0px; }

.footnotes { border-top: 1px solid rgb(236, 236, 241); font-size: 15px; mar=
gin-top: 32px; }

.footnotes ol > li::after { border-radius: 4px; font-family: var(--monospac=
e); line-height: 17px; }

.sandbox-preview { display: flex; flex-wrap: wrap; margin-bottom: var(--app=
-header-bottom); margin-top: 24px; }

.sandbox-preview .sandbox-screenshot { border-radius: 4px; flex: 2 1 0%; ma=
rgin-right: 32px; min-width: 250px; overflow: hidden; }

.sandbox-preview .preview-info { flex: 1 1 0%; min-width: 200px; width: 100=
%; }

.sandbox-preview .preview-info .title { font-weight: 700; padding-bottom: 2=
px; }

.sandbox-preview .preview-info .description { color: var(--gray-600); margi=
n-bottom: 12px; }

@media (max-width: 500px) {
  .sandbox-preview { flex-direction: column; }
  .sandbox-preview .sandbox-screenshot { margin-right: 0px; }
}

.docs-models-toc td:first-child { white-space: nowrap; }

.docs-mod-guide-banner p { margin: 0px; }

.docs-mod-guide-banner code { font-size: 0.9em; }

.docs-edit-example { display: flex; }

.docs-edit-example > div { display: flex; flex: 1 1 0%; flex-direction: col=
umn; }

.docs-edit-example > div:not(:last-child) { margin-right: 24px; }

.docs-edit-example .subheading { margin-bottom: 8px; }

.markdown-content.markdown-prompt-blockquote .docs-edit-example blockquote =
{ font-size: 13px; line-height: 20px; }

.markdown-content.markdown-prompt-blockquote .docs-edit-example blockquote.=
docs-edit-example-instruction { height: 72px; }

.markdown-content.markdown-prompt-blockquote .docs-edit-example blockquote:=
not(.docs-edit-example-instruction) { flex: 1 1 0%; }

.markdown-content.markdown-prompt-blockquote .docs-edit-example blockquote.=
no-input { color: var(--gray-400); }

.docs-page details { padding-left: 28px; position: relative; }

.docs-page details summary { cursor: pointer; padding-bottom: 8px; }

.docs-page details::before { background-image: url("https://cdn.openai.com/=
API/images/summary_arrow_icon.svg"); content: " "; height: 12px; left: 8px;=
 position: absolute; top: 5px; transition: transform 0.3s ease 0s, -webkit-=
transform 0.3s ease 0s; width: 12px; }

.docs-page details[open]::before { transform: rotate(90deg); }

.docs-page details summary { list-style: none; }

.docs-page details summary::-webkit-details-marker, .docs-page details summ=
ary::marker { display: none; }

.docs-404-feedback { color: var(--gray-500); font-size: 14px; margin-top: 2=
4px; }

.images-examples table { width: 100%; }

.images-examples table img { height: auto; width: 200px; }

.images-examples td:not(:first-child) { min-width: 216px; }

.images-examples.flex-first-col td:first-child { width: 100%; }

.images-examples.flex-first-col td:last-child, .images-examples:not(.flex-f=
irst-col) td:first-child { min-width: 208px; }

.images-examples:not(.flex-first-col) td:last-child { width: 100%; }

.markdown-content p.images-edit-prompt { color: var(--gray-600); margin-top=
: -20px; }

.expn { border-bottom: 1px solid var(--gray-200); }

.expn-title { font-feature-settings: "tnum"; align-items: center; cursor: p=
ointer; display: flex; flex-direction: row; font-size: 20px; font-variant-n=
umeric: tabular-nums; font-weight: 700; justify-content: flex-start; line-h=
eight: 1.4; padding: 26px 14px 26px 24px; transition: color 0.3s ease 0s; }

.expn-title:hover { color: var(--gray-700); }

.expn-label { flex: 1 1 auto; }

.expn-icon { align-items: center; display: flex; flex: 0 0 auto; font-size:=
 22px; justify-content: center; }

.expn.expanded > .expn-title > .expn-icon svg { transform: rotate(180deg); =
}

.expn-content { padding: 0px 24px 20px; }

.expn-content.hidden { display: none; }

.expn-collapse { padding: 12px 0px 0px; text-align: center; }

@media (max-width: 767px) {
  .expn-content, .expn-title { padding-left: 0px; padding-right: 0px; }
}

.page-header { align-items: center; display: flex; margin-bottom: 1.4em; }

.page-header h1 { flex: 1 1 auto; margin: 0px; }

.page-header-actions { align-items: center; display: flex; flex: 0 1 auto; =
}

.page-detector { width: 800px; }

.detector-input { position: relative; width: 100%; }

.detector-input textarea { font-family: ui-sans-serif, system-ui, -apple-sy=
stem, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Not=
o Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbo=
l", "Noto Color Emoji"; font-size: 15px; min-height: 300px; padding: 10px 1=
2px; width: 100%; }

.detector-input-text { width: 100%; }

.detector-output { background-color: var(--gray-100); border-radius: 4px; f=
ont-size: 16px; margin-bottom: 40px; margin-top: 20px; padding: 20px; }

.detector-output-empty { color: var(--gray-600); }

.detector-request-error-message { color: rgb(0, 0, 0); }

.likelihood-icon-container { margin: 10px; }

.likelihood-icon { font-size: 25px; }

.likelihood-icon-positive { color: rgb(193, 76, 76); }

.detector-considerations-container { background-color: rgb(252, 232, 196); =
border: 1px solid rgb(0, 0, 0); border-radius: 5px; margin-top: 10px; }

.detector-example-contextualization { font-size: 14px; font-style: italic; =
margin-bottom: 5px; }

.detector-examples-container { margin-bottom: 20px; margin-top: 20px; }

.detector-examples-cohort { align-items: center; display: flex; flex-direct=
ion: row; margin-top: 10px; }

.detector-common-questions { margin-top: 40px; }

.detector-examples-subtitle { align-items: center; display: flex; margin-bo=
ttom: 10px; }

.detector-examples-subtitle-icon { margin-right: 5px; }

.detector-usage-warning { color: gray; font-size: 12px; margin-bottom: 10px=
; margin-top: 10px; }

.detector-input-textarea { font-size: 14px; resize: vertical; }

.detector-citation { font-family: var(--monospace); }

.app-wrapper { --page-header-height: var(--app-header-height); padding-top:=
 var(--app-header-height); }

.app-wrapper-max-height .app-wrapper { max-height: 100%; }

.app-wrapper-no-header .app-header { display: none; }

.app-wrapper-no-header .app-wrapper { padding-top: 0px; }

.app-wrapper-no-header .codex-sandbox { height: 100vh; }

@media print {
  .app-wrapper { padding-top: 0px; }
}

:root { --public-header-height: 60px; --public-header-nav-item-margin: 64px=
; }

@media (max-width: 1040px) {
  :root { --public-header-nav-item-margin: 30px; }
}

.pheader { background-color: rgb(255, 255, 255); border-bottom: 1px solid v=
ar(--gray-100); height: var(--public-header-height); position: fixed; top: =
0px; width: 100%; z-index: 1; }

.pheader-container { align-items: center; display: flex; height: 100%; just=
ify-content: space-between; padding: 0px 24px; }

.pheader-container .nav-item { color: var(--gray-600); cursor: pointer; fon=
t-size: 14px; padding: 10px 0px; text-decoration: none; }

.pheader-container .nav-item:not(:first-child) { margin-left: 24px; }

.pheader-container .nav-item:visited { color: var(--gray-600); }

.pheader-container .nav-item:hover { color: var(--gray-800); }

.pheader-container .nav-item.active { color: var(--green-600); }

.pheader-left { align-items: center; display: flex; flex: 0 0 auto; justify=
-content: space-around; }

.pheader-brand, .pheader-brand:visited { align-items: center; color: var(--=
gray-800); display: flex; flex-wrap: nowrap; font-size: 24px; font-weight: =
700; text-decoration: none; }

.pheader-nav { align-items: center; display: flex; flex: 0 1 0%; justify-co=
ntent: space-around; margin: 0px 10px 0px 24px; }

@media (max-width: 600px) {
  .pheader-nav { display: none; }
}

.pheader-nav .nav-item { white-space: nowrap; }

.pheader-menu, .pheader-menu .nav-item { align-items: center; display: flex=
; }

.pheader-menu .nav-item { cursor: pointer; font-size: 14px; }

.pheader-menu .nav-item svg { height: auto; margin-left: 2px; width: 18px; =
}

.pheader-menu-desktop-auth { align-items: center; display: flex; flex-wrap:=
 nowrap; margin-left: var(--public-header-nav-item-margin); }

.pheader-menu-desktop-auth .pheader-join-btn { margin-left: 24px; }

.pheader-mobile-toggle { color: var(--gray-800); cursor: pointer; display: =
none; font-size: 1.6em; margin: 0px -15px 0px 5px; padding: 14px; }

@media (max-width: 600px) {
  .pheader-menu-desktop { display: none; }
  .pheader-mobile-toggle { display: flex; }
}

.public-site { --page-header-height: var(--public-header-height); }

.public-site.page-wrapper { padding-top: var(--public-header-height); }

.public-section-container { margin: 0px auto; max-width: 1136px; padding: 0=
px 3.6em; }

@media (max-width: 767px) {
  .public-section-container { padding: 0px 20px; }
}

@-webkit-keyframes scale-in-center {=20
  0% { opacity: 0; transform: scale(0.7); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes scale-in-center {=20
  0% { opacity: 0; transform: scale(0.7); }
  100% { opacity: 1; transform: scale(1); }
}

@-webkit-keyframes puff-in-center {=20
  0% { filter: blur(3px); opacity: 0; transform: scale(1.1); }
  100% { filter: blur(0px); opacity: 1; transform: scale(1); }
}

@keyframes puff-in-center {=20
  0% { filter: blur(3px); opacity: 0; transform: scale(1.1); }
  100% { filter: blur(0px); opacity: 1; transform: scale(1); }
}

.launcher { align-items: center; display: flex; justify-content: center; ma=
x-width: 100%; min-height: 100%; padding: 40px 0px; width: 100%; }

@media (max-width: 900px) {
  .launcher { align-items: flex-start; }
}

.launcher-body { align-items: center; display: flex; flex-direction: column=
; justify-content: center; width: 100%; }

.launcher-header { animation: 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s =
1 normal both running scale-in-center; flex: 0 1 0%; }

.launcher-menu { display: grid; gap: 12px; grid-template-columns: repeat(3,=
 280px); margin-top: 60px; }

@media (max-width: 900px) {
  .launcher-menu { grid-template-columns: repeat(1, 295px); margin-top: 32p=
x; }
}

.launcher-item { animation: 0.3s cubic-bezier(0.47, 0, 0.745, 0.715) 0s 1 n=
ormal both running puff-in-center; background: var(--gray-50); border-radiu=
s: 8px; min-height: 400px; padding: 32px; transition: background 0.1s ease-=
in-out 0s; }

.launcher-item:hover { background: var(--gray-100); }

@media (max-width: 900px) {
  .launcher-item { min-height: 0px; }
}

.launcher-item:nth-child(2) { animation-delay: 0.1s; }

.launcher-item:nth-child(3) { animation-delay: 0.2s; }

.launcher-item-header { align-items: center; color: var(--gray-900); displa=
y: flex; justify-content: space-between; }

.launcher-item-header h1 { font-size: 20px; line-height: 28px; margin: 0px;=
 }

.launcher-item-header svg { margin-bottom: 4px; }

.launcher-item-desc { color: var(--gray-700); font-size: 16px; line-height:=
 24px; margin-top: 12px; }

@media (prefers-reduced-motion) {
  .launcher-header, .launcher-item { animation: 0s ease 0s 1 normal none ru=
nning none; }
}

.header { background-color: rgb(255, 255, 255); box-sizing: border-box; hei=
ght: var(--app-header-height); margin: 0px; padding-top: 1em; position: abs=
olute; right: 0px; text-align: right; top: 0px; width: 100%; }

.header span { margin-right: 0.8em; }

@media print {
  .header { display: none; }
}

.signin-button { border: 1px solid rgb(153, 153, 153); border-radius: 5px; =
cursor: pointer; display: inline-block; font-size: 0.8em; margin-right: 20p=
x; padding: 0.5em; }

.sess-expiry-modal .modal-body { margin: 40px 32px; }

.sess-expiry-body { align-items: center; display: flex; flex-direction: col=
umn; }

.sess-expiry-body h3 { margin: 0px 0px 12px; }

.sess-expiry-actions { align-items: center; display: flex; margin-top: 12px=
; }

@-webkit-keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-120%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-120%); }
  100% { transform: translateY(0px); }
}

@-webkit-keyframes toast-close {=20
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.9); }
}

@keyframes toast-close {=20
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.9); }
}

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: all 0.24s cubic-bezier(0, 0, 0.2, 1) 0s; }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1.175) 0s 1 normal both =
running toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

:root { --primary: #10a37f; --primary-50: #ebfaeb; --primary-100: #d2f4d3; =
--primary-200: #b9eebc; --primary-300: #93e69c; --primary-400: #68de7a; --p=
rimary-500: #19c37d; --primary-600: #10a37f; --primary-700: #1a7f64; --prim=
ary-800: #1b5d4a; --primary-900: #183d31; --primary-50a: rgba(16,163,127,.2=
); --primary-100a: rgba(16,163,127,.3); --secondary: #5436da; --secondary-5=
0: #ecebf9; --secondary-100: #d2cff2; --secondary-200: #b9b4ec; --secondary=
-300: #a198e6; --secondary-400: #897ce2; --secondary-500: #715fde; --second=
ary-600: #5436da; --secondary-700: #482da8; --secondary-800: #3b2479; --sec=
ondary-900: #281852; --secondary-100a: rgba(84,54,218,.3); --green-50: #ebf=
aeb; --green-100: #d2f4d3; --green-200: #b9eebc; --green-300: #93e69c; --gr=
een-400: #68de7a; --green-500: #19c37d; --green-600: #10a37f; --green-700: =
#1a7f64; --green-800: #1b5d4a; --green-900: #183d31; --green-100a: rgba(16,=
163,127,.3); --red-50: #fdebeb; --red-100: #f9cfcf; --red-200: #f6b2b3; --r=
ed-300: #f49394; --red-400: #f17173; --red-500: #ef4146; --red-600: #c23539=
; --red-700: #9d2b2e; --red-800: #7b2124; --red-900: #59181a; --red-100a: r=
gba(239,65,70,.3); --gray-50: #f7f7f8; --gray-100: #ececf1; --gray-200: #d9=
d9e3; --gray-300: #c5c5d2; --gray-400: #acacbe; --gray-500: #8e8ea0; --gray=
-600: #6e6e80; --gray-700: #565869; --gray-800: #353740; --gray-900: #20212=
3; --medium-wash: #eff7f8; --bg-color: #fff; --text-primary: #202123; --tex=
t-default: #353740; --text-secondary: #6e6e80; --text-disabled: #acacbe; --=
text-error: #ef4146; --font-size-small: 16px; --input-border: var(--gray-30=
0); --input-border-focus: var(--primary-600); --input-focus-ring: 0px 0px 0=
px 1px #10a37f; --icon-warning-color: #f4ac36; --heading-margin-top: 30px; =
--heading-margin-bottom: 16px; --content-width: 760px; --content-v-padding:=
 40px; --content-h-padding: 56px; --border-radius: 4px; --sans-serif: "Colf=
axAI",helvetica,sans-serif; --monospace: "Roboto Mono",sfmono-regular,conso=
las,liberation mono,menlo,courier,monospace; }

@media (max-width: 767px) {
  :root { --content-h-padding: 24px; }
}

body, html { -webkit-font-smoothing: antialiased; color: var(--text-default=
); font-family: var(--sans-serif); font-size: var(--font-size-small); heigh=
t: 100%; margin: 0px; padding: 0px; }

*, ::after, ::before { box-sizing: border-box; }

button, input, textarea { font-family: var(--sans-serif); }

.link-style, a { color: rgb(16, 163, 127); cursor: pointer; text-decoration=
: none; }

.link-style:visited, a:visited { color: rgb(16, 163, 127); }

.link-style:hover, a:hover { color: rgb(26, 127, 100); }

#root { height: 100%; overflow: auto; }

.page-wrapper { box-sizing: border-box; color: var(--gray-800); display: fl=
ex; flex-direction: column; height: 100%; }

.route-container { height: 100%; position: relative; z-index: 1; }

@media print {
  #root { height: auto; }
  .page-wrapper { height: auto; padding-top: 0px; }
}

.page-body { flex: 1 0 auto; font-size: 16px; line-height: 24px; margin: 0p=
x auto; max-width: 100%; padding: var(--content-v-padding) var(--content-h-=
padding); width: calc(var(--content-width) + var(--content-h-padding)*2); }

.page-body.full-width { width: 100%; }

.page-body.short-width { width: 670px; }

.page-body.medium-width { width: 900px; }

.page-body.large-width { width: 1040px; }

.page-body.flush { padding: 0px; }

.container { margin: 0px auto; max-width: 100%; padding: 0 var(--content-h-=
padding); width: calc(var(--content-width) + var(--content-h-padding)*2); }

.container.full-width { width: 100%; }

@font-face { font-family: ColfaxAI; font-style: normal; font-weight: 400; s=
rc: url("https://cdn.openai.com/API/fonts/ColfaxAIRegular.woff2") format("w=
off2"), url("https://cdn.openai.com/API/fonts/ColfaxAIRegular.woff") format=
("woff"); }

@font-face { font-family: ColfaxAI; font-style: italic; font-weight: 400; s=
rc: url("https://cdn.openai.com/API/fonts/ColfaxAIRegularItalic.woff2") for=
mat("woff2"), url("https://cdn.openai.com/API/fonts/ColfaxAIRegularItalic.w=
off") format("woff"); }

@font-face { font-family: ColfaxAI; font-style: normal; font-weight: 700; s=
rc: url("https://cdn.openai.com/API/fonts/ColfaxAIBold.woff2") format("woff=
2"), url("https://cdn.openai.com/API/fonts/ColfaxAIBold.woff") format("woff=
"); }

@font-face { font-family: ColfaxAI; font-style: italic; font-weight: 700; s=
rc: url("https://cdn.openai.com/API/fonts/ColfaxAIBoldItalic.woff2") format=
("woff2"), url("https://cdn.openai.com/API/fonts/ColfaxAIBoldItalic.woff") =
format("woff"); }

h1, h2, h3, h4, h5, h6 { color: rgb(32, 33, 35); font-weight: 700; line-hei=
ght: 1.25; margin-bottom: var(--heading-margin-bottom); margin-top: var(--h=
eading-margin-top); }

h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-ch=
ild, h6:first-child { margin-top: 0px; }

h1 { font-size: 32px; line-height: 40px; }

h2 { font-size: 24px; line-height: 32px; }

h3 { font-size: 20px; line-height: 28px; }

h4 { font-size: 18px; line-height: 24px; }

h5 { font-size: 16px; }

h6 { font-size: 12px; }

.text-title { font-size: 32px; line-height: 40px; }

.heading-large, .text-title { color: var(--gray-900); font-weight: 700; }

.heading-large { font-size: 24px; line-height: 32px; }

.heading-medium { font-size: 20px; line-height: 28px; }

.heading-medium, .heading-small { color: var(--gray-900); font-weight: 700;=
 }

.heading-small { font-size: 18px; line-height: 24px; }

.subheading { color: var(--gray-900); font-size: 12px; font-weight: 700; le=
tter-spacing: 0.08em; line-height: 16px; text-transform: uppercase; }

.text-intro { font-size: 18px; line-height: 16px; }

.body-large { font-size: 16px; }

.body-large, .body-large-mono { font-weight: 400; line-height: 24px; }

.body-large-mono { font-family: var(--monospace); font-size: 15px; }

.body-small, .body-small-mono { font-size: 14px; font-weight: 400; line-hei=
ght: 20px; }

.body-small-mono { font-family: var(--monospace); }

.caption { font-size: 12px; font-weight: 400; line-height: 16px; }

.mono, pre, pre > code { font-family: var(--monospace); }

.mono { background-color: rgb(236, 236, 236); padding: 0.5em 0.2em; word-br=
eak: break-all; }

.bold { font-weight: 700; }

.italic { font-style: italic; }

.tabular-nums { font-feature-settings: "tnum"; font-variant-numeric: tabula=
r-nums; }

.nowrap { white-space: nowrap; }

.mt-0\.5 { margin-top: 2px; }

.pt-0\.5 { padding-top: 2px; }

.mb-0\.5 { margin-bottom: 2px; }

.pb-0\.5 { padding-bottom: 2px; }

.ml-0\.5 { margin-left: 2px; }

.pl-0\.5 { padding-left: 2px; }

.mr-0\.5 { margin-right: 2px; }

.pr-0\.5 { padding-right: 2px; }

.mt-1 { margin-top: 4px; }

.pt-1 { padding-top: 4px; }

.mb-1 { margin-bottom: 4px; }

.pb-1 { padding-bottom: 4px; }

.ml-1 { margin-left: 4px; }

.pl-1 { padding-left: 4px; }

.mr-1 { margin-right: 4px; }

.pr-1 { padding-right: 4px; }

.mt-2 { margin-top: 8px; }

.pt-2 { padding-top: 8px; }

.mb-2 { margin-bottom: 8px; }

.pb-2 { padding-bottom: 8px; }

.ml-2 { margin-left: 8px; }

.pl-2 { padding-left: 8px; }

.mr-2 { margin-right: 8px; }

.pr-2 { padding-right: 8px; }

.mt-3 { margin-top: 12px; }

.pt-3 { padding-top: 12px; }

.mb-3 { margin-bottom: 12px; }

.pb-3 { padding-bottom: 12px; }

.ml-3 { margin-left: 12px; }

.pl-3 { padding-left: 12px; }

.mr-3 { margin-right: 12px; }

.pr-3 { padding-right: 12px; }

.mt-4 { margin-top: 16px; }

.pt-4 { padding-top: 16px; }

.mb-4 { margin-bottom: 16px; }

.pb-4 { padding-bottom: 16px; }

.ml-4 { margin-left: 16px; }

.pl-4 { padding-left: 16px; }

.mr-4 { margin-right: 16px; }

.pr-4 { padding-right: 16px; }

.mt-5 { margin-top: 20px; }

.pt-5 { padding-top: 20px; }

.mb-5 { margin-bottom: 20px; }

.pb-5 { padding-bottom: 20px; }

.ml-5 { margin-left: 20px; }

.pl-5 { padding-left: 20px; }

.mr-5 { margin-right: 20px; }

.pr-5 { padding-right: 20px; }

.mt-6 { margin-top: 24px; }

.pt-6 { padding-top: 24px; }

.mb-6 { margin-bottom: 24px; }

.pb-6 { padding-bottom: 24px; }

.ml-6 { margin-left: 24px; }

.pl-6 { padding-left: 24px; }

.mr-6 { margin-right: 24px; }

.pr-6 { padding-right: 24px; }

.mt-8 { margin-top: 32px; }

.pt-8 { padding-top: 32px; }

.mb-8 { margin-bottom: 32px; }

.pb-8 { padding-bottom: 32px; }

.ml-8 { margin-left: 32px; }

.pl-8 { padding-left: 32px; }

.mr-8 { margin-right: 32px; }

.pr-8 { padding-right: 32px; }

.mt-10 { margin-top: 40px; }

.pt-10 { padding-top: 40px; }

.mb-10 { margin-bottom: 40px; }

.pb-10 { padding-bottom: 40px; }

.ml-10 { margin-left: 40px; }

.pl-10 { padding-left: 40px; }

.mr-10 { margin-right: 40px; }

.pr-10 { padding-right: 40px; }

.mt-12 { margin-top: 48px; }

.pt-12 { padding-top: 48px; }

.mb-12 { margin-bottom: 48px; }

.pb-12 { padding-bottom: 48px; }

.ml-12 { margin-left: 48px; }

.pl-12 { padding-left: 48px; }

.mr-12 { margin-right: 48px; }

.pr-12 { padding-right: 48px; }

.mt-16 { margin-top: 64px; }

.pt-16 { padding-top: 64px; }

.mb-16 { margin-bottom: 64px; }

.pb-16 { padding-bottom: 64px; }

.ml-16 { margin-left: 64px; }

.pl-16 { padding-left: 64px; }

.mr-16 { margin-right: 64px; }

.pr-16 { padding-right: 64px; }

.mt-20 { margin-top: 80px; }

.pt-20 { padding-top: 80px; }

.mb-20 { margin-bottom: 80px; }

.pb-20 { padding-bottom: 80px; }

.ml-20 { margin-left: 80px; }

.pl-20 { padding-left: 80px; }

.mr-20 { margin-right: 80px; }

.pr-20 { padding-right: 80px; }

p { line-height: 1.5em; }

li code, p code { background: rgba(237, 238, 241, 0.5); border: 1px solid r=
gba(174, 174, 188, 0.2); border-radius: 4px; font-family: var(--monospace);=
 font-size: 14px; font-weight: 500; margin: 0px 2px; padding: 2px 4px; }

.noselect { user-select: none; }

.flex { display: flex; }

.items-center { align-items: center; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-stretch { align-items: stretch; }

.gray-50 { color: var(--gray-50); }

.gray-100 { color: var(--gray-100); }

.gray-200 { color: var(--gray-200); }

.gray-300 { color: var(--gray-300); }

.gray-400 { color: var(--gray-400); }

.gray-500 { color: var(--gray-500); }

.gray-600 { color: var(--gray-600); }

.gray-700 { color: var(--gray-700); }

.gray-800 { color: var(--gray-800); }

.gray-900 { color: var(--gray-900); }

.green-gradient-bg { background-color: rgb(25, 195, 125); background-image:=
 url("https://cdn.openai.com/API/images/icon_bg_green.svg"); background-siz=
e: cover; }

.red-gradient-bg { background-color: rgb(239, 65, 70); background-image: ur=
l("https://cdn.openai.com/API/images/icon_bg_red.svg"); background-size: co=
ver; }

.purple-gradient-bg { background-color: rgb(84, 54, 218); background-image:=
 url("https://cdn.openai.com/API/images/icon_bg_blue.svg"); background-size=
: cover; }

.pink-gradient-bg { background-color: rgb(221, 92, 229); background-image: =
url("https://cdn.openai.com/API/images/icon_bg_magenta.svg"); background-si=
ze: cover; }

.orange-gradient-bg { background-color: rgb(244, 172, 54); background-image=
: url("https://cdn.openai.com/API/images/icon_bg_orange.svg"); background-s=
ize: cover; }

.radio { margin: 5px; }

.radio input[type=3D"radio"] { opacity: 0; position: absolute; }

.radio input[type=3D"radio"] + .radio-label::before { background: var(--bg-=
color); border: 1px solid rgb(197, 197, 210); border-radius: 100%; box-shad=
ow: inset 0 0 0 4px var(--bg-color); content: ""; cursor: pointer; display:=
 inline-block; height: 1em; margin-right: 0.5em; position: relative; text-a=
lign: center; transition: background-color 0.25s ease 0s, border-color 0.25=
s ease 0s; vertical-align: top; width: 1em; }

.radio input[type=3D"radio"]:checked + .radio-label::before { background-co=
lor: rgb(16, 163, 127); }

.radio input[type=3D"radio"]:checked:disabled + .radio-label::before { back=
ground-color: rgb(147, 230, 156); }

.radio input[type=3D"radio"]:focus + .radio-label::before { border-color: r=
gb(142, 142, 160); outline: none; }

.radio input[type=3D"radio"] + .radio-label:empty::before { margin-right: 0=
px; }

.markdown-content p { line-height: 1.5; margin-bottom: 15px; margin-top: 0p=
x; }

.markdown-content .code-sample { margin: 24px 0px; }

.markdown-content ol, .markdown-content ul { list-style: none; padding-left=
: 0px; }

.markdown-content ol { counter-reset: ordered-listitem 0; }

.markdown-content ol ol, .markdown-content ol ul, .markdown-content ul ol, =
.markdown-content ul ul { margin-bottom: 0px; margin-top: 8px; }

.markdown-content li { line-height: 1.4; padding-left: 32px; position: rela=
tive; }

.markdown-content li + li { margin-top: 8px; }

.markdown-content ul li::before { background: var(--gray-800); border-radiu=
s: 50%; content: ""; height: 5px; left: 15px; position: absolute; top: 8px;=
 width: 5px; }

.markdown-content .md-nonanchor-heading { position: relative; }

.markdown-content .md-heading-num, .markdown-content ol > li::after { backg=
round: var(--gray-100); border-radius: 20px; color: var(--gray-600); font-s=
ize: 12px; font-weight: 400; height: 20px; line-height: 19px; padding-top: =
1px; text-align: center; width: 20px; }

@media (min-width: 768px) {
  .markdown-content .md-heading-num { left: -32px; position: absolute; top:=
 50%; transform: translateY(-50%); }
}

@media (max-width: 767px) {
  .markdown-content .md-heading-num { display: inline-block; margin-right: =
10px; vertical-align: top; }
  .markdown-content h2 .md-heading-num { margin-top: 6px; }
}

.markdown-content ol > li::after { content: counter(ordered-listitem); coun=
ter-increment: ordered-listitem 1; left: 0px; position: absolute; top: 0px;=
 }

.markdown-content li > p { margin: 0px; }

.markdown-content li > p + p { margin-top: 15px; }

.markdown-content hr { border: none; height: 0px; margin-bottom: 40px; widt=
h: 100%; }

.markdown-content blockquote { background: rgb(247, 247, 248); color: rgb(8=
6, 88, 105); margin: 0px 0px 15px; padding: 0.8em; }

.markdown-content blockquote p:last-child { margin: 0px; }

.markdown-content.markdown-prompt-blockquote blockquote { background-color:=
 var(--gray-50); border-radius: 4px; color: var(--gray-800); font-family: v=
ar(--monospace); font-size: 15px; line-height: 24px; margin: 0px 0px 15px; =
padding: 12px 16px; white-space: pre-wrap; }

.markdown-content.markdown-prompt-blockquote blockquote a, .markdown-conten=
t.markdown-prompt-blockquote blockquote a:visited { color: var(--gray-800);=
 }

.markdown-content.markdown-prompt-blockquote blockquote strong { background=
-color: var(--green-100); font-weight: 400; }

.markdown-content.markdown-prompt-blockquote blockquote p { margin: 0px; }

.markdown-content li a, .markdown-content p a { text-decoration: none; }

.markdown-content table:not(.ignore-md-styles) { border-collapse: collapse;=
 margin: 20px 0px 15px; }

.markdown-content table:not(.ignore-md-styles) td:first-child, .markdown-co=
ntent table:not(.ignore-md-styles) th:first-child { padding-left: 0px; }

.markdown-content table:not(.ignore-md-styles) td:last-child, .markdown-con=
tent table:not(.ignore-md-styles) th:last-child { padding-right: 0px; }

.markdown-content table:not(.ignore-md-styles) th { border: none; color: va=
r(--gray-900); font-size: 12px; font-weight: 700; letter-spacing: 0.1em; li=
ne-height: 16px; padding: 0px 8px 3px; text-align: left; text-transform: up=
percase; vertical-align: bottom; }

.markdown-content table:not(.ignore-md-styles) td { border-right: none; bor=
der-bottom: none; border-left: none; border-image: initial; border-top: 1px=
 solid var(--gray-100); padding: 8px; vertical-align: top; }

.markdown-content img { max-width: 100%; }

.markdown-content picture img { height: auto; }

.markdown-page.models td a { white-space: nowrap; }
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://openaiapi-site.azureedge.net/public-assets/d/17bead46ad/static/css/695.c403ef96.chunk.css

@charset "utf-8";

.completion-example-container { display: flex; justify-content: center; mar=
gin: 40px 0px; }

.completion-example { align-items: center; display: grid; grid-template-col=
umns: auto auto; }

.completion-example .tutorial-example-completion { margin-left: -4px; }

.completion-example-label { color: var(--gray-600); margin-right: 16px; tex=
t-align: right; }

.completion-example-arrow { color: var(--gray-400); font-size: 14px; margin=
: 2px 0px; text-align: center; }

.temp-example { display: flex; margin: 24px 0px; }

@media (max-width: 600px) {
  .temp-example { flex-direction: column; }
}

.temp-example-box { background-color: rgb(255, 255, 255); border: 1px solid=
 var(--gray-100); border-radius: 4px; flex: 1 1 0%; padding: 24px; }

.temp-example-box .subheading { margin-bottom: 8px; }

.temp-example-box .temp-example-sentence { margin-top: 4px; }

@media (min-width: 601px) {
  .temp-example-box { margin-right: 24px; }
}

@media (max-width: 600px) {
  .temp-example-box:not(:last-child) { margin-bottom: 24px; }
}

.tutorial-example-completion { background-color: var(--green-100); border-r=
adius: 4px; padding: 0px 4px; }

.deep-dive { background-color: var(--gray-50); border: 1px solid var(--gray=
-100); border-radius: 4px; margin: 24px 0px; }

.deep-dive-header { cursor: pointer; justify-content: space-between; paddin=
g: 20px 24px; }

.deep-dive-header, .deep-dive-heading { align-items: center; display: flex;=
 }

.deep-dive-heading svg { color: var(--gray-500); margin-right: 8px; margin-=
top: -4px; }

.deep-dive-heading .subheading { color: var(--gray-600); }

.deep-dive-title { font-weight: 700; margin-top: 8px; }

.deep-dive-expand-icon { color: var(--gray-500); font-size: 24px; }

.deep-dive-content { padding: 0px 24px 24px; }

.deep-dive-content > :last-child { margin-bottom: 0px; }

.switch-field { background-color: var(--gray-50); border-radius: 3px; displ=
ay: flex; position: relative; }

.switch-field input { clip: rect(0px, 0px, 0px, 0px); border: 0px; height: =
1px; left: 0px; overflow: hidden; top: 0px; width: 1px; position: absolute =
!important; }

.switch-field label { color: var(--gray-400); cursor: pointer; font-size: 1=
2px; font-weight: 700; line-height: 16px; padding: 8px 16px; text-align: ce=
nter; text-transform: uppercase; transition: all 0.1s ease-in-out 0s; }

.switch-field input:focus-visible + label { box-shadow: rgb(255, 255, 255) =
0px 0px 0px 2px, rgb(16, 163, 127) 0px 0px 0px 4px; }

.switch-field input:checked + label { background-color: var(--gray-100); bo=
rder-radius: 3px; color: var(--gray-800); }

.content-switcher, .lpviz { display: flex; margin: 24px 0px; }

@media (min-width: 601px) {
  .lpviz > div { flex: 1 1 0%; }
  .lpviz > div:first-child { margin-right: 24px; }
}

@media (max-width: 600px) {
  .lpviz { flex-direction: column; }
  .lpviz > div:first-child { margin-bottom: 16px; }
}

.lpviz-input { font-size: 16px; }

.lpviz-logits-loading { opacity: 0.5; }

.lpviz-logit { margin-bottom: 12px; margin-top: 4px; }

.lpviz-logit-header { display: flex; justify-content: space-between; }

.lpviz-logit-percent { color: var(--gray-600); font-size: 14px; }

.lpviz-logit-bar { background-color: var(--gray-200); height: 3px; margin-t=
op: 4px; position: relative; width: 100%; }

.lpviz-logit-bar .lpviz-logit-bar-inner { background-color: var(--green-600=
); height: 100%; left: 0px; position: absolute; top: 0px; transform-origin:=
 left center; transition: transform 0.3s ease 0s, -webkit-transform 0.3s ea=
se 0s; width: 100%; }

.tokenizer-tkn { display: inline-block; white-space: pre; }

.tokenizer-tkn-0 { background: rgba(107, 64, 216, 0.3); }

.tokenizer-tkn-1 { background: rgba(104, 222, 122, 0.4); }

.tokenizer-tkn-2 { background: rgba(244, 172, 54, 0.4); }

.tokenizer-tkn-3 { background: rgba(239, 65, 70, 0.4); }

.tokenizer-tkn-4 { background: rgba(39, 181, 234, 0.4); }

.simple-tokenizer-input { font-size: 16px; margin-top: 24px; }

.simple-tokenizer-output { margin: 16px 9px 24px 11px; min-height: 24px; }

.form-label { display: block; }

.form-label .caption { color: var(--gray-700); }

@-webkit-keyframes skeleton {=20
  0% { background-position: -200px 0px; }
  100% { background-position: calc(200px + 100%) 0px; }
}

@keyframes skeleton {=20
  0% { background-position: -200px 0px; }
  100% { background-position: calc(200px + 100%) 0px; }
}

.skeleton { animation-name: skeleton; background-color: rgb(236, 236, 241);=
 background-image: linear-gradient(90deg, rgb(217, 217, 227), rgb(236, 236,=
 241), rgb(217, 217, 227)); background-repeat: no-repeat; background-size: =
200px 100%; border-radius: 3px; display: inline-block; line-height: 1; widt=
h: 100%; }

.skeleton-children { visibility: hidden; }

.tbl { border-collapse: collapse; }

.tbl td:first-child, .tbl th:first-child { padding-left: 0px; }

.tbl td:last-child, .tbl th:last-child { padding-right: 0px; }

.tbl th { border: none; color: var(--gray-900); font-size: 12px; font-weigh=
t: 700; letter-spacing: 0.1em; line-height: 16px; padding: 6px 8px; text-al=
ign: left; text-transform: uppercase; }

.tbl td { border-right: none; border-bottom: none; border-left: none; borde=
r-image: initial; color: var(--gray-700); padding: 16px 8px; vertical-align=
: top; border-top: 1px solid var(--gray-100) !important; }

.tbl-compact td { padding: 8px; }

.api-keys-table { font-size: 15px; max-width: 100%; opacity: 1; transition:=
 opacity 0.3s ease 0s; }

.api-keys-table.loading { opacity: 0.5; pointer-events: none; }

.api-keys-table th { white-space: nowrap; }

.api-keys-table td { line-height: 1; vertical-align: middle; white-space: n=
owrap; width: 100%; }

.api-keys-table td .skeleton { margin: 4px 0px; }

.api-keys-table td.api-key-name { max-width: 120px; }

@media (min-width: 800px) {
  .api-keys-table td:not(.api-key-actions) { min-width: 120px; }
  .api-keys-table td.api-key-token { min-width: 240px; }
  .api-keys-table td.api-key-actions { min-width: 72px; }
}

.api-keys-table td:last-child { padding-left: 20px; }

.api-key-row { background-color: transparent; transition: background-color =
1s ease 1s; }

.api-key-name { overflow: hidden; text-overflow: ellipsis; white-space: now=
rap; }

.api-key-last-use-tooltip { color: var(--gray-600); display: inline-block; =
transform: translateY(1px); }

.api-key-token-value-wrapper { align-items: center; display: flex; flex-wra=
p: wrap; line-height: 1; }

.api-key-token-value-wrapper .btn-sm { font-size: 13px; padding: 2px 6px; m=
argin: 0px !important; }

.api-key-token-value { flex: 0 0 auto; font-family: var(--monospace); font-=
size: 13px; margin-right: 10px; max-width: 100%; }

.api-key-blur { filter: blur(5px); transition: opacity 0.3s ease 0s, filter=
 0.3s ease 0s, -webkit-filter 0.3s ease 0s; }

.api-key-actions { display: flex; text-align: right; }

.api-key-actions .btn-sm { font-size: 14px; margin-top: -2px; padding: 2px =
6px; }

.api-key-revoking { border: 1px solid var(--gray-200); border-radius: 3px; =
display: inline-block; font-family: var(--monospace); margin: 0px; padding:=
 8px 1em; width: 100%; }

.api-keys-limit-notice { margin-bottom: 1em; }

.tag-link { align-items: center; background: var(--gray-50); border-radius:=
 100px; display: inline-flex; font-weight: 700; padding: 6px 12px; }

.tag-link svg { font-size: 20px; margin: -2px 0px 0px 7px; }

.tag-link-list { align-items: center; display: flex; flex-wrap: wrap; gap: =
12px; }

.docs-feedback-btn { margin-left: 10px; }

.docs-feedback-btn + .docs-feedback-btn { margin-left: 2px !important; }

.docs-feedback-btn:not(.selected):not(:hover) { color: var(--gray-800); }

.docs-footer { padding: 20px 56px 40px; }

@media (min-width: 1372px) {
  .docs-footer { margin-left: calc(50vw - 686px); }
}

.not-found + .docs-footer { display: none; }
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd----
Content-Type: text/html
Content-ID: <frame-588774940888934AC358CD2CDDD14DE6@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html lang=3D"en"><head><meta http-equiv=3D"Content-Type" content=3D"text/h=
tml; charset=3DUTF-8">
       =20
      </head>
      <body>
     =20
    </body></html>
------MultipartBoundary--qjta5nYBjxFuvcPIfFU3KSXugdhoJfvJDFoiesq9gd------
